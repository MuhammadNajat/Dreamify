{"version":3,"file":"function.js","sourceRoot":"","sources":["../../../../../src/cli/models/extensions/specifications/function.ts"],"names":[],"mappings":"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","sourcesContent":["import {createExtensionSpecification} from '../specification.js'\nimport {BaseSchema} from '../schemas.js'\nimport {loadLocalesConfig} from '../../../utilities/extensions/locales-configuration.js'\nimport {zod} from '@shopify/cli-kit/node/schema'\nimport {joinPath} from '@shopify/cli-kit/node/path'\nimport {fileExists, readFile} from '@shopify/cli-kit/node/fs'\nimport {AbortError} from '@shopify/cli-kit/node/error'\nimport {outputContent} from '@shopify/cli-kit/node/output'\n\ninterface UI {\n  app_bridge?: {\n    create_path: string\n    details_path: string\n  }\n  ui_extension_handle?: string\n}\n\nexport type FunctionConfigType = zod.infer<typeof FunctionExtensionSchema>\nexport const FunctionExtensionSchema = BaseSchema.extend({\n  build: zod.object({\n    command: zod\n      .string()\n      .transform((value) => (value.trim() === '' ? undefined : value))\n      .optional(),\n    path: zod.string().optional(),\n    watch: zod.union([zod.string(), zod.string().array()]).optional(),\n  }),\n  configuration_ui: zod.boolean().optional().default(true),\n  ui: zod\n    .object({\n      enable_create: zod.boolean().optional(),\n      paths: zod\n        .object({\n          create: zod.string(),\n          details: zod.string(),\n        })\n        .optional(),\n      handle: zod.string().optional(),\n    })\n    .optional(),\n  api_version: zod.string(),\n  input: zod\n    .object({\n      variables: zod\n        .object({\n          namespace: zod.string(),\n          key: zod.string(),\n        })\n        .optional(),\n    })\n    .optional(),\n  targeting: zod\n    .array(\n      zod.object({\n        target: zod.string(),\n        input_query: zod.string().optional(),\n        export: zod.string().optional(),\n      }),\n    )\n    .optional(),\n})\n\nconst spec = createExtensionSpecification({\n  identifier: 'function',\n  additionalIdentifiers: [\n    'order_discounts',\n    'cart_checkout_validation',\n    'cart_transform',\n    'delivery_customization',\n    'payment_customization',\n    'product_discounts',\n    'shipping_discounts',\n    'fulfillment_constraints',\n    'order_routing_location_rule',\n    'local_pickup_delivery_option_generator',\n  ],\n  schema: FunctionExtensionSchema,\n  appModuleFeatures: (_) => ['function'],\n  deployConfig: async (config, directory, apiKey, moduleId) => {\n    let inputQuery: string | undefined\n    const inputQueryPath = joinPath(directory, 'input.graphql')\n    if (await fileExists(inputQueryPath)) {\n      inputQuery = await readFile(inputQueryPath)\n    }\n\n    const targets =\n      config.targeting &&\n      (await Promise.all(\n        config.targeting.map(async (config) => {\n          let inputQuery\n\n          if (config.input_query) {\n            inputQuery = await readInputQuery(joinPath(directory, config.input_query))\n          }\n\n          return {handle: config.target, export: config.export, input_query: inputQuery}\n        }),\n      ))\n\n    let ui: UI | undefined\n\n    if (config.ui?.paths) {\n      ui = {\n        app_bridge: {\n          details_path: config.ui.paths.details,\n          create_path: config.ui.paths.create,\n        },\n      }\n    }\n\n    if (config.ui?.handle !== undefined) {\n      ui = {\n        ...ui,\n        ui_extension_handle: config.ui.handle,\n      }\n    }\n\n    return {\n      title: config.name,\n      module_id: moduleId,\n      description: config.description,\n      app_key: apiKey,\n      api_type: config.type === 'function' ? undefined : config.type,\n      api_version: config.api_version,\n      input_query: inputQuery,\n      input_query_variables: config.input?.variables\n        ? {\n            single_json_metafield: config.input.variables,\n          }\n        : undefined,\n      ui,\n      enable_creation_ui: config.ui?.enable_create ?? true,\n      localization: await loadLocalesConfig(directory, 'function'),\n      targets,\n    }\n  },\n  preDeployValidation: async (extension) => {\n    const wasmExists = await fileExists(extension.outputPath)\n    if (!wasmExists) {\n      throw new AbortError(\n        outputContent`The function extension \"${extension.handle}\" hasn't compiled the wasm in the expected path: ${extension.outputPath}`,\n        `Make sure the build command outputs the wasm in the expected directory.`,\n      )\n    }\n  },\n})\n\nasync function readInputQuery(path: string): Promise<string> {\n  if (await fileExists(path)) {\n    return readFile(path)\n  } else {\n    throw new AbortError(\n      `No input query file at ${path}.`,\n      `Create the file or remove the line referencing it in the extension's TOML.`,\n    )\n  }\n}\n\nexport default spec\n"]}