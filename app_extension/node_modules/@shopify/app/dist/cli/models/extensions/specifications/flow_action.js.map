{"version":3,"file":"flow_action.js","sourceRoot":"","sources":["../../../../../src/cli/models/extensions/specifications/flow_action.ts"],"names":[],"mappings":"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","sourcesContent":["import {BaseSchemaWithHandle} from '../schemas.js'\nimport {createExtensionSpecification} from '../specification.js'\nimport {\n  validateFieldShape,\n  startsWithHttps,\n  validateCustomConfigurationPageConfig,\n  validateReturnTypeConfig,\n} from '../../../services/flow/validation.js'\nimport {serializeFields} from '../../../services/flow/serialize-fields.js'\nimport {loadSchemaFromPath} from '../../../services/flow/utils.js'\nimport {zod} from '@shopify/cli-kit/node/schema'\n\nexport const FlowActionExtensionSchema = BaseSchemaWithHandle.extend({\n  type: zod.literal('flow_action'),\n  runtime_url: zod.string().url().refine(startsWithHttps),\n  validation_url: zod.string().url().refine(startsWithHttps).optional(),\n  config_page_url: zod.string().url().refine(startsWithHttps).optional(),\n  config_page_preview_url: zod.string().url().refine(startsWithHttps).optional(),\n  schema: zod.string().optional(),\n  return_type_ref: zod.string().optional(),\n}).refine((config) => {\n  const configurationPageIsValid = validateCustomConfigurationPageConfig(\n    config.config_page_url,\n    config.config_page_preview_url,\n    config.validation_url,\n  )\n  const fields = config.settings?.fields ?? []\n  const settingsFieldsAreValid = fields.every((field, index) =>\n    validateFieldShape(field, 'flow_action', config.handle, index),\n  )\n  const returnTypeIsValid = validateReturnTypeConfig(config.return_type_ref, config.schema)\n\n  return configurationPageIsValid && settingsFieldsAreValid && returnTypeIsValid\n})\n\n/**\n * Extension specification with all properties and methods needed to load a Flow Action.\n */\nconst flowActionSpecification = createExtensionSpecification({\n  identifier: 'flow_action',\n  schema: FlowActionExtensionSchema,\n  // Flow doesn't have anything to bundle but we need to set this to true to\n  // ensure that the extension configuration is uploaded after registration in\n  // https://github.com/Shopify/cli/blob/73ac91c0f40be0a57d1b18cb34254b12d3a071af/packages/app/src/cli/services/deploy.ts#L107\n  // Should be removed after unified deployment is 100% rolled out\n  appModuleFeatures: (_) => ['bundling'],\n  deployConfig: async (config, extensionPath) => {\n    return {\n      title: config.name,\n      handle: config.handle,\n      description: config.description,\n      url: config.runtime_url,\n      fields: serializeFields('flow_action', config.settings?.fields),\n      validation_url: config.validation_url,\n      custom_configuration_page_url: config.config_page_url,\n      custom_configuration_page_preview_url: config.config_page_preview_url,\n      schema_patch: await loadSchemaFromPath(extensionPath, config.schema),\n      return_type_ref: config.return_type_ref,\n    }\n  },\n})\n\nexport default flowActionSpecification\n"]}