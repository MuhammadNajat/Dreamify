{"version":3,"file":"flow_trigger.js","sourceRoot":"","sources":["../../../../../src/cli/models/extensions/specifications/flow_trigger.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,kBAAkB,EAAC,MAAM,iCAAiC,CAAA;AAClE,OAAO,EAAC,oBAAoB,EAAE,WAAW,EAAC,MAAM,eAAe,CAAA;AAC/D,OAAO,EAAC,4BAA4B,EAAC,MAAM,qBAAqB,CAAA;AAChE,OAAO,EAAC,kBAAkB,EAAE,6BAA6B,EAAC,MAAM,sCAAsC,CAAA;AACtG,OAAO,EAAC,eAAe,EAAC,MAAM,4CAA4C,CAAA;AAC1E,OAAO,EAAC,GAAG,EAAC,MAAM,8BAA8B,CAAA;AAEhD,MAAM,CAAC,MAAM,yBAAyB,GAAG,WAAW,CAAC,MAAM,CAAC;IAC1D,GAAG,EAAE,GAAG;SACL,MAAM,EAAE;SACR,KAAK,CAAC,eAAe,EAAE;QACtB,OAAO,EAAE,2DAA2D;KACrE,CAAC;SACD,QAAQ,EAAE;CACd,CAAC,CAAA;AAEF,MAAM,0BAA0B,GAAG,oBAAoB,CAAC,MAAM,CAAC;IAC7D,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC;IACjC,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC/B,QAAQ,EAAE,GAAG;SACV,MAAM,CAAC;QACN,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC,QAAQ,EAAE;KACxD,CAAC;SACD,QAAQ,EAAE;CACd,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE;IACnB,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,EAAE,MAAM,IAAI,EAAE,CAAA;IAC5C,MAAM,sBAAsB,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAC3D,kBAAkB,CAAC,KAAK,EAAE,cAAc,EAAE,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAChE,CAAA;IACD,MAAM,qBAAqB,GAAG,6BAA6B,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAA;IAElF,OAAO,sBAAsB,IAAI,qBAAqB,CAAA;AACxD,CAAC,CAAC,CAAA;AAEF;;GAEG;AACH,MAAM,wBAAwB,GAAG,4BAA4B,CAAC;IAC5D,UAAU,EAAE,cAAc;IAC1B,MAAM,EAAE,0BAA0B;IAClC,0EAA0E;IAC1E,4EAA4E;IAC5E,4HAA4H;IAC5H,gEAAgE;IAChE,iBAAiB,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC;IACtC,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,EAAE,EAAE;QAC5C,OAAO;YACL,KAAK,EAAE,MAAM,CAAC,IAAI;YAClB,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,WAAW,EAAE,MAAM,CAAC,WAAW;YAC/B,MAAM,EAAE,eAAe,CAAC,cAAc,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC;YAChE,YAAY,EAAE,MAAM,kBAAkB,CAAC,aAAa,EAAE,MAAM,CAAC,MAAM,CAAC;SACrE,CAAA;IACH,CAAC;CACF,CAAC,CAAA;AAEF,eAAe,wBAAwB,CAAA","sourcesContent":["import {loadSchemaFromPath} from '../../../services/flow/utils.js'\nimport {BaseSchemaWithHandle, FieldSchema} from '../schemas.js'\nimport {createExtensionSpecification} from '../specification.js'\nimport {validateFieldShape, validateTriggerSchemaPresence} from '../../../services/flow/validation.js'\nimport {serializeFields} from '../../../services/flow/serialize-fields.js'\nimport {zod} from '@shopify/cli-kit/node/schema'\n\nexport const FlowTriggerSettingsSchema = FieldSchema.extend({\n  key: zod\n    .string()\n    .regex(/^[a-zA-Z\\s]*$/, {\n      message: 'String must contain only alphabetic characters and spaces',\n    })\n    .optional(),\n})\n\nconst FlowTriggerExtensionSchema = BaseSchemaWithHandle.extend({\n  type: zod.literal('flow_trigger'),\n  schema: zod.string().optional(),\n  settings: zod\n    .object({\n      fields: zod.array(FlowTriggerSettingsSchema).optional(),\n    })\n    .optional(),\n}).refine((config) => {\n  const fields = config.settings?.fields ?? []\n  const settingsFieldsAreValid = fields.every((field, index) =>\n    validateFieldShape(field, 'flow_trigger', config.handle, index),\n  )\n  const schemaPresenceIsValid = validateTriggerSchemaPresence(fields, config.schema)\n\n  return settingsFieldsAreValid && schemaPresenceIsValid\n})\n\n/**\n * Extension specification with all properties and methods needed to load a Flow Trigger.\n */\nconst flowTriggerSpecification = createExtensionSpecification({\n  identifier: 'flow_trigger',\n  schema: FlowTriggerExtensionSchema,\n  // Flow doesn't have anything to bundle but we need to set this to true to\n  // ensure that the extension configuration is uploaded after registration in\n  // https://github.com/Shopify/cli/blob/73ac91c0f40be0a57d1b18cb34254b12d3a071af/packages/app/src/cli/services/deploy.ts#L107\n  // Should be removed after unified deployment is 100% rolled out\n  appModuleFeatures: (_) => ['bundling'],\n  deployConfig: async (config, extensionPath) => {\n    return {\n      title: config.name,\n      handle: config.handle,\n      description: config.description,\n      fields: serializeFields('flow_trigger', config.settings?.fields),\n      schema_patch: await loadSchemaFromPath(extensionPath, config.schema),\n    }\n  },\n})\n\nexport default flowTriggerSpecification\n"]}