{"version":3,"file":"ui_extension.js","sourceRoot":"","sources":["../../../../../src/cli/models/extensions/specifications/ui_extension.ts"],"names":[],"mappings":"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","sourcesContent":["import {ExtensionFeature, createExtensionSpecification} from '../specification.js'\nimport {NewExtensionPointSchemaType, NewExtensionPointsSchema, BaseSchema} from '../schemas.js'\nimport {loadLocalesConfig} from '../../../utilities/extensions/locales-configuration.js'\nimport {getExtensionPointTargetSurface} from '../../../services/dev/extension/utilities.js'\nimport {err, ok, Result} from '@shopify/cli-kit/node/result'\nimport {fileExists} from '@shopify/cli-kit/node/fs'\nimport {joinPath} from '@shopify/cli-kit/node/path'\nimport {outputContent, outputToken} from '@shopify/cli-kit/node/output'\n\nconst dependency = '@shopify/checkout-ui-extensions'\n\nconst validatePoints = (config: {extension_points?: unknown[]; targeting?: unknown[]}) => {\n  return config.extension_points !== undefined || config.targeting !== undefined\n}\n\nconst missingExtensionPointsMessage = 'No extension targets defined, add a `targeting` field to your configuration'\n\nconst UIExtensionSchema = BaseSchema.extend({\n  extension_points: NewExtensionPointsSchema.optional(),\n  targeting: NewExtensionPointsSchema.optional(),\n})\n  .refine((config) => validatePoints(config), missingExtensionPointsMessage)\n  .transform((config) => {\n    const extensionPoints = (config.targeting ?? config.extension_points ?? []).map((targeting) => {\n      return {\n        target: targeting.target,\n        module: targeting.module,\n        metafields: targeting.metafields ?? config.metafields ?? [],\n      }\n    })\n    return {...config, extension_points: extensionPoints}\n  })\n\nconst spec = createExtensionSpecification({\n  identifier: 'ui_extension',\n  dependency,\n  schema: UIExtensionSchema,\n  appModuleFeatures: (config) => {\n    const basic: ExtensionFeature[] = ['ui_preview', 'bundling', 'esbuild']\n    const needsCart =\n      config?.extension_points?.find((extensionPoint) => {\n        return getExtensionPointTargetSurface(extensionPoint.target) === 'checkout'\n      }) !== undefined\n    return needsCart ? [...basic, 'cart_url'] : basic\n  },\n  validate: async (config, directory) => {\n    return validateUIExtensionPointConfig(directory, config.extension_points, config.path)\n  },\n  deployConfig: async (config, directory) => {\n    return {\n      api_version: config.api_version,\n      extension_points: config.extension_points,\n      capabilities: config.capabilities,\n      name: config.name,\n      description: config.description,\n      settings: config.settings,\n      localization: await loadLocalesConfig(directory, config.type),\n    }\n  },\n  getBundleExtensionStdinContent: (config) => {\n    return config.extension_points.map(({module}) => `import '${module}';`).join('\\n')\n  },\n  hasExtensionPointTarget: (config, requestedTarget) => {\n    return (\n      config.extension_points.find((extensionPoint) => {\n        return extensionPoint.target === requestedTarget\n      }) !== undefined\n    )\n  },\n})\n\nasync function validateUIExtensionPointConfig(\n  directory: string,\n  extensionPoints: NewExtensionPointSchemaType[],\n  configPath: string,\n): Promise<Result<unknown, string>> {\n  const errors: string[] = []\n  const uniqueTargets: string[] = []\n  const duplicateTargets: string[] = []\n\n  if (!extensionPoints || extensionPoints.length === 0) {\n    return err(missingExtensionPointsMessage)\n  }\n\n  for await (const {module, target} of extensionPoints) {\n    const fullPath = joinPath(directory, module)\n    const exists = await fileExists(fullPath)\n\n    if (!exists) {\n      const notFoundPath = outputToken.path(joinPath(directory, module))\n\n      errors.push(\n        outputContent`Couldn't find ${notFoundPath}\nPlease check the module path for ${target}`.value,\n      )\n    }\n\n    if (uniqueTargets.indexOf(target) === -1) {\n      uniqueTargets.push(target)\n    } else {\n      duplicateTargets.push(target)\n    }\n  }\n\n  if (duplicateTargets.length) {\n    errors.push(`Duplicate targets found: ${duplicateTargets.join(', ')}\\nExtension point targets must be unique`)\n  }\n\n  if (errors.length) {\n    errors.push(`Please check the configuration in ${configPath}`)\n    return err(errors.join('\\n\\n'))\n  }\n  return ok({})\n}\n\nexport default spec\n"]}