{"version":3,"file":"customer_accounts_ui_extension.js","sourceRoot":"","sources":["../../../../../src/cli/models/extensions/specifications/customer_accounts_ui_extension.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,4BAA4B,EAAC,MAAM,qBAAqB,CAAA;AAChE,OAAO,EAAC,UAAU,EAAC,MAAM,eAAe,CAAA;AACxC,OAAO,EAAC,iBAAiB,EAAC,MAAM,wDAAwD,CAAA;AACxF,OAAO,EAAC,GAAG,EAAC,MAAM,8BAA8B,CAAA;AAEhD,MAAM,UAAU,GAAG,yCAAyC,CAAA;AAE5D,MAAM,sBAAsB,GAAG,UAAU,CAAC,MAAM,CAAC;IAC/C,UAAU,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IAC9C,gBAAgB,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACpD,YAAY,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;IAClC,gCAAgC,EAAE,GAAG;SAClC,MAAM,EAAE;SACR,GAAG,CAAC;QACH,OAAO,EAAE,uDAAuD;KACjE,CAAC;SACD,QAAQ,EAAE;IACb,oCAAoC,EAAE,GAAG;SACtC,KAAK,CACJ,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC;QACf,OAAO,EAAE,iEAAiE;KAC3E,CAAC,CACH;SACA,QAAQ,CAAC;QACR,OAAO,EACL,iHAAiH;KACpH,CAAC;SACD,QAAQ,EAAE;CACd,CAAC,CAAA;AAEF,MAAM,IAAI,GAAG,4BAA4B,CAAC;IACxC,UAAU,EAAE,gCAAgC;IAC5C,UAAU;IACV,MAAM,EAAE,sBAAsB;IAC9B,iBAAiB,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,EAAE,UAAU,EAAE,SAAS,EAAE,sBAAsB,CAAC;IACvF,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE;QACxC,OAAO;YACL,gBAAgB,EAAE,MAAM,CAAC,gBAAgB;YACzC,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,UAAU,EAAE,MAAM,CAAC,UAAU;YAC7B,YAAY,EAAE,MAAM,iBAAiB,CAAC,SAAS,EAAE,sBAAsB,CAAC;YACxE,gCAAgC,EAAE,MAAM,CAAC,gCAAgC;YACzE,oCAAoC,EAAE,MAAM,CAAC,oCAAoC;SAClF,CAAA;IACH,CAAC;CACF,CAAC,CAAA;AAEF,eAAe,IAAI,CAAA","sourcesContent":["import {createExtensionSpecification} from '../specification.js'\nimport {BaseSchema} from '../schemas.js'\nimport {loadLocalesConfig} from '../../../utilities/extensions/locales-configuration.js'\nimport {zod} from '@shopify/cli-kit/node/schema'\n\nconst dependency = '@shopify/customer-account-ui-extensions'\n\nconst CustomerAccountsSchema = BaseSchema.extend({\n  categories: zod.array(zod.string()).optional(),\n  extension_points: zod.array(zod.string()).optional(),\n  localization: zod.any().optional(),\n  authenticated_redirect_start_url: zod\n    .string()\n    .url({\n      message: 'authenticated_redirect_start_url must be a valid URL.',\n    })\n    .optional(),\n  authenticated_redirect_redirect_urls: zod\n    .array(\n      zod.string().url({\n        message: 'authenticated_redirect_redirect_urls does contain invalid URLs.',\n      }),\n    )\n    .nonempty({\n      message:\n        'authenticated_redirect_redirect_urls can not be an empty array! It may only contain one or multiple valid URLs.',\n    })\n    .optional(),\n})\n\nconst spec = createExtensionSpecification({\n  identifier: 'customer_accounts_ui_extension',\n  dependency,\n  schema: CustomerAccountsSchema,\n  appModuleFeatures: (_) => ['ui_preview', 'bundling', 'esbuild', 'single_js_entry_path'],\n  deployConfig: async (config, directory) => {\n    return {\n      extension_points: config.extension_points,\n      name: config.name,\n      categories: config.categories,\n      localization: await loadLocalesConfig(directory, 'customer_accounts_ui'),\n      authenticated_redirect_start_url: config.authenticated_redirect_start_url,\n      authenticated_redirect_redirect_urls: config.authenticated_redirect_redirect_urls,\n    }\n  },\n})\n\nexport default spec\n"]}