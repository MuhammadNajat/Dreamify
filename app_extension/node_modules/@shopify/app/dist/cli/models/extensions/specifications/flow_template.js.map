{"version":3,"file":"flow_template.js","sourceRoot":"","sources":["../../../../../src/cli/models/extensions/specifications/flow_template.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,oBAAoB,EAAC,MAAM,eAAe,CAAA;AAClD,OAAO,EAAC,4BAA4B,EAAC,MAAM,qBAAqB,CAAA;AAChE,OAAO,EAAC,iBAAiB,EAAC,MAAM,wDAAwD,CAAA;AACxF,OAAO,EAAC,QAAQ,EAAC,MAAM,4BAA4B,CAAA;AACnD,OAAO,EAAC,GAAG,EAAC,MAAM,8BAA8B,CAAA;AAChD,OAAO,EAAC,UAAU,EAAC,MAAM,6BAA6B,CAAA;AACtD,OAAO,EAAC,IAAI,EAAC,MAAM,0BAA0B,CAAA;AAC7C,OAAO,EAAE,MAAM,IAAI,CAAA;AAEnB,MAAM,2BAA2B,GAAG,oBAAoB,CAAC,MAAM,CAAC;IAC9D,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,eAAe,CAAC;IAClC,WAAW,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC;IACnC,QAAQ,EAAE,GAAG,CAAC,MAAM,CAAC;QACnB,UAAU,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QACnC,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE;QACpB,WAAW,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;QACrC,YAAY,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;QACtC,wBAAwB,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;QAClD,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;KAClC,CAAC;CACH,CAAC,CAAA;AAEF,MAAM,IAAI,GAAG,4BAA4B,CAAC;IACxC,UAAU,EAAE,eAAe;IAC3B,MAAM,EAAE,2BAA2B;IACnC,iBAAiB,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC;IACtC,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,EAAE,EAAE;QAC5C,OAAO;YACL,eAAe,EAAE,MAAM,CAAC,MAAM;YAC9B,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,WAAW,EAAE,MAAM,CAAC,WAAW;YAC/B,UAAU,EAAE,MAAM,CAAC,QAAQ,CAAC,UAAU;YACtC,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,WAAW;YACxC,YAAY,EAAE,MAAM,CAAC,QAAQ,CAAC,YAAY;YAC1C,wBAAwB,EAAE,MAAM,CAAC,QAAQ,CAAC,wBAAwB;YAClE,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,OAAO;YAChC,UAAU,EAAE,MAAM,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;YACrE,YAAY,EAAE,MAAM,iBAAiB,CAAC,aAAa,EAAE,MAAM,CAAC,IAAI,CAAC;SAClE,CAAA;IACH,CAAC;CACF,CAAC,CAAA;AAEF,KAAK,UAAU,YAAY,CAAC,IAAY,EAAE,YAAoB;IAC5D,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAA;IAC9D,MAAM,YAAY,GAAG,aAAa,CAAC,CAAC,CAAC,CAAA;IACrC,IAAI,CAAC,YAAY,EAAE;QACjB,MAAM,IAAI,UAAU,CAAC,mCAAmC,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,EAAE,CAAC,CAAA;KACxF;IACD,OAAO,EAAE,CAAC,YAAY,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAA;AAChD,CAAC;AAED,eAAe,IAAI,CAAA","sourcesContent":["import {BaseSchemaWithHandle} from '../schemas.js'\nimport {createExtensionSpecification} from '../specification.js'\nimport {loadLocalesConfig} from '../../../utilities/extensions/locales-configuration.js'\nimport {joinPath} from '@shopify/cli-kit/node/path'\nimport {zod} from '@shopify/cli-kit/node/schema'\nimport {AbortError} from '@shopify/cli-kit/node/error'\nimport {glob} from '@shopify/cli-kit/node/fs'\nimport fs from 'fs'\n\nconst FlowTemplateExtensionSchema = BaseSchemaWithHandle.extend({\n  type: zod.literal('flow_template'),\n  description: zod.string().max(1024),\n  template: zod.object({\n    categories: zod.array(zod.string()),\n    module: zod.string(),\n    require_app: zod.boolean().optional(),\n    discoverable: zod.boolean().optional(),\n    allow_one_click_activate: zod.boolean().optional(),\n    enabled: zod.boolean().optional(),\n  }),\n})\n\nconst spec = createExtensionSpecification({\n  identifier: 'flow_template',\n  schema: FlowTemplateExtensionSchema,\n  appModuleFeatures: (_) => ['bundling'],\n  deployConfig: async (config, extensionPath) => {\n    return {\n      template_handle: config.handle,\n      handle: config.handle,\n      name: config.name,\n      description: config.description,\n      categories: config.template.categories,\n      require_app: config.template.require_app,\n      discoverable: config.template.discoverable,\n      allow_one_click_activate: config.template.allow_one_click_activate,\n      enabled: config.template.enabled,\n      definition: await loadWorkflow(extensionPath, config.template.module),\n      localization: await loadLocalesConfig(extensionPath, config.name),\n    }\n  },\n})\n\nasync function loadWorkflow(path: string, workflowPath: string) {\n  const flowFilePaths = await glob(joinPath(path, workflowPath))\n  const flowFilePath = flowFilePaths[0]\n  if (!flowFilePath) {\n    throw new AbortError(`Missing flow file with the path ${joinPath(path, workflowPath)}`)\n  }\n  return fs.readFileSync(flowFilePath, 'base64')\n}\n\nexport default spec\n"]}