{"version":3,"file":"extension-instance.js","sourceRoot":"","sources":["../../../../src/cli/models/extensions/extension-instance.ts"],"names":[],"mappings":"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","sourcesContent":["import {BaseConfigType} from './schemas.js'\nimport {FunctionConfigType} from './specifications/function.js'\nimport {ExtensionFeature, ExtensionSpecification} from './specification.js'\nimport {\n  ExtensionBuildOptions,\n  buildFunctionExtension,\n  buildThemeExtension,\n  buildUIExtension,\n} from '../../services/build/extension.js'\nimport {bundleThemeExtension} from '../../services/extensions/bundle.js'\nimport {Identifiers} from '../app/identifiers.js'\nimport {uploadWasmBlob} from '../../services/deploy/upload.js'\nimport {ok} from '@shopify/cli-kit/node/result'\nimport {constantize, slugify} from '@shopify/cli-kit/common/string'\nimport {randomUUID} from '@shopify/cli-kit/node/crypto'\nimport {partnersFqdn} from '@shopify/cli-kit/node/context/fqdn'\nimport {joinPath} from '@shopify/cli-kit/node/path'\nimport {useThemebundling} from '@shopify/cli-kit/node/context/local'\nimport {touchFile, writeFile} from '@shopify/cli-kit/node/fs'\n\n/**\n * Class that represents an instance of a local extension\n * Before creating this class we've validated that:\n * - There is a spec for this type of extension\n * - The Schema for that spec is followed by the extension config toml file\n * - We were able to find an entry point file for that extension\n *\n * It supports extension points, making this Class compatible with both new ui-extension\n * and legacy extension types. Extension points are optional and this class will handle them if present.\n *\n * This class holds the public interface to interact with extensions\n */\nexport class ExtensionInstance<TConfiguration extends BaseConfigType = BaseConfigType> {\n  entrySourceFilePath: string\n  devUUID: string\n  localIdentifier: string\n  idEnvironmentVariableName: string\n  directory: string\n  configuration: TConfiguration & {path: string}\n  outputPath: string\n  handle: string\n  specification: ExtensionSpecification\n\n  get graphQLType() {\n    return (this.specification.graphQLType ?? this.specification.identifier).toUpperCase()\n  }\n\n  get type() {\n    return this.configuration.type\n  }\n\n  get humanName() {\n    return this.specification.externalName\n  }\n\n  get name() {\n    return this.configuration.name\n  }\n\n  get dependency() {\n    return this.specification.dependency\n  }\n\n  get externalType() {\n    return this.specification.externalIdentifier\n  }\n\n  get surface() {\n    return this.specification.surface\n  }\n\n  get isPreviewable() {\n    return this.features.includes('ui_preview')\n  }\n\n  get isThemeExtension() {\n    return this.features.includes('theme')\n  }\n\n  get isFunctionExtension() {\n    return this.features.includes('function')\n  }\n\n  get isESBuildExtension() {\n    return this.features.includes('esbuild')\n  }\n\n  get features(): ExtensionFeature[] {\n    return this.specification.appModuleFeatures(this.configuration)\n  }\n\n  get outputFileName() {\n    return `${this.handle}.js`\n  }\n\n  constructor(options: {\n    configuration: TConfiguration\n    configurationPath: string\n    entryPath?: string\n    directory: string\n    specification: ExtensionSpecification\n  }) {\n    this.configuration = {...options.configuration, path: options.configurationPath}\n    this.entrySourceFilePath = options.entryPath ?? ''\n    this.directory = options.directory\n    this.specification = options.specification\n    this.devUUID = `dev-${randomUUID()}`\n    this.handle = this.configuration.handle ?? slugify(this.configuration.name ?? '')\n    this.localIdentifier = this.handle\n    this.idEnvironmentVariableName = `SHOPIFY_${constantize(this.localIdentifier)}_ID`\n    this.outputPath = this.directory\n\n    if (this.features.includes('esbuild') || this.type === 'tax_calculation') {\n      this.outputPath = joinPath(this.directory, 'dist', `${this.outputFileName}`)\n    }\n\n    if (this.isFunctionExtension) {\n      const config = this.configuration as unknown as FunctionConfigType\n      this.outputPath = joinPath(this.directory, config.build.path ?? joinPath('dist', 'index.wasm'))\n    }\n  }\n\n  isDraftable() {\n    return !this.isThemeExtension\n  }\n\n  async deployConfig({apiKey, token}: ExtensionDeployConfigOptions): Promise<{[key: string]: unknown} | undefined> {\n    if (this.isFunctionExtension) {\n      const {moduleId} = await uploadWasmBlob(this.localIdentifier, this.outputPath, apiKey, token)\n      return this.specification.deployConfig?.(this.configuration, this.directory, apiKey, moduleId)\n    }\n\n    return (\n      // module id param is not necessary for non-Function extensions\n      this.specification.deployConfig?.(this.configuration, this.directory, apiKey, undefined) ??\n      Promise.resolve(undefined)\n    )\n  }\n\n  validate() {\n    if (!this.specification.validate) return Promise.resolve(ok(undefined))\n    return this.specification.validate(this.configuration, this.directory)\n  }\n\n  preDeployValidation(): Promise<void> {\n    if (!this.specification.preDeployValidation) return Promise.resolve()\n    return this.specification.preDeployValidation(this)\n  }\n\n  buildValidation(): Promise<void> {\n    if (!this.specification.buildValidation) return Promise.resolve()\n    return this.specification.buildValidation(this)\n  }\n\n  async publishURL(options: {orgId: string; appId: string; extensionId?: string}) {\n    const fqdn = await partnersFqdn()\n    const parnersPath = this.specification.partnersWebIdentifier\n    return `https://${fqdn}/${options.orgId}/apps/${options.appId}/extensions/${parnersPath}/${options.extensionId}`\n  }\n\n  // UI Specific properties\n  getBundleExtensionStdinContent() {\n    if (this.specification.getBundleExtensionStdinContent) {\n      return this.specification.getBundleExtensionStdinContent(this.configuration)\n    }\n    const relativeImportPath = this.entrySourceFilePath?.replace(this.directory, '')\n    return `import '.${relativeImportPath}';`\n  }\n\n  shouldFetchCartUrl(): boolean {\n    return this.features.includes('cart_url')\n  }\n\n  hasExtensionPointTarget(target: string): boolean {\n    return this.specification.hasExtensionPointTarget?.(this.configuration, target) || false\n  }\n\n  // Functions specific properties\n  get buildCommand() {\n    const config = this.configuration as unknown as FunctionConfigType\n    return config.build.command\n  }\n\n  get watchPaths() {\n    if (this.isFunctionExtension) {\n      const config = this.configuration as unknown as FunctionConfigType\n      const configuredPaths = config.build.watch ? [config.build.watch].flat() : []\n\n      if (!this.isJavaScript && configuredPaths.length === 0) {\n        return null\n      }\n\n      const watchPaths: string[] = configuredPaths ?? []\n      if (this.isJavaScript && configuredPaths.length === 0) {\n        watchPaths.push(joinPath('src', '**', '*.{js,ts}'))\n      }\n      watchPaths.push(joinPath('**', '!(.)*.graphql'))\n\n      return watchPaths.map((path) => joinPath(this.directory, path))\n    } else if (this.isESBuildExtension) {\n      return [joinPath(this.directory, 'src', '**', '*.{ts,tsx,js,jsx}')]\n    } else {\n      return []\n    }\n  }\n\n  get inputQueryPath() {\n    return joinPath(this.directory, 'input.graphql')\n  }\n\n  get isJavaScript() {\n    return Boolean(this.entrySourceFilePath?.endsWith('.js') || this.entrySourceFilePath?.endsWith('.ts'))\n  }\n\n  async build(options: ExtensionBuildOptions): Promise<void> {\n    if (this.isThemeExtension) {\n      return buildThemeExtension(this, options)\n    } else if (this.isFunctionExtension) {\n      return buildFunctionExtension(this, options)\n    } else if (this.features.includes('esbuild')) {\n      return buildUIExtension(this, options)\n    }\n\n    // Workaround for tax_calculations because they remote spec NEEDS a valid js file to be included.\n    if (this.type === 'tax_calculation') {\n      await touchFile(this.outputPath)\n      await writeFile(this.outputPath, '(()=>{})();')\n    }\n  }\n\n  async buildForBundle(options: ExtensionBuildOptions, identifiers: Identifiers, bundleDirectory: string) {\n    const extensionId = identifiers.extensions[this.localIdentifier]!\n    const outputFile = this.isThemeExtension ? '' : joinPath('dist', `${this.outputFileName}`)\n\n    if (this.features.includes('bundling')) {\n      // Modules that are going to be inclued in the bundle should be built in the bundle directory\n      this.outputPath = joinPath(bundleDirectory, extensionId, outputFile)\n    }\n\n    await this.build(options)\n\n    if (this.isThemeExtension && useThemebundling()) {\n      await bundleThemeExtension(this, options)\n    }\n  }\n\n  async bundleConfig({identifiers, token, apiKey}: ExtensionBundleConfigOptions) {\n    const configValue = await this.deployConfig({apiKey, token})\n    if (!configValue) return undefined\n\n    const {handle, ...remainingConfigs} = configValue\n    const contextValue = (handle as string) || ''\n\n    return {\n      uuid: identifiers.extensions[this.localIdentifier]!,\n      config: JSON.stringify(remainingConfigs),\n      context: contextValue,\n      handle: this.handle,\n    }\n  }\n}\n\nexport interface ExtensionDeployConfigOptions {\n  apiKey: string\n  token: string\n}\n\nexport interface ExtensionBundleConfigOptions {\n  identifiers: Identifiers\n  token: string\n  apiKey: string\n}\n"]}