{"version":3,"file":"app.js","sourceRoot":"","sources":["../../../../src/cli/models/app/app.ts"],"names":[],"mappings":"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","sourcesContent":["import {AppErrors, isWebType} from './loader.js'\nimport {ExtensionInstance} from '../extensions/extension-instance.js'\nimport {isType} from '../../utilities/types.js'\nimport {FunctionConfigType} from '../extensions/specifications/function.js'\nimport {\n  TEMP_OMIT_DECLARATIVE_WEBHOOKS_SCHEMA,\n  validateInnerSubscriptions,\n  validateTopLevelSubscriptions,\n  httpsRegex,\n} from '../../utilities/app/config/webhooks.js'\nimport {zod} from '@shopify/cli-kit/node/schema'\nimport {DotEnvFile} from '@shopify/cli-kit/node/dot-env'\nimport {getDependencies, PackageManager, readAndParsePackageJson} from '@shopify/cli-kit/node/node-package-manager'\nimport {fileRealPath, findPathUp} from '@shopify/cli-kit/node/fs'\nimport {joinPath} from '@shopify/cli-kit/node/path'\nimport {AbortError} from '@shopify/cli-kit/node/error'\n\nexport const LegacyAppSchema = zod\n  .object({\n    client_id: zod.number().optional(),\n    name: zod.string().optional(),\n    scopes: zod.string().default(''),\n    extension_directories: zod.array(zod.string()).optional(),\n    web_directories: zod.array(zod.string()).optional(),\n  })\n  .strict()\n\n// example PubSub URI - pubsub://{project}:{topic}\nconst pubSubRegex = /^pubsub:\\/\\/(?<gcp_project_id>[^:]+):(?<gcp_topic>.+)$/\n// example Eventbridge ARN - arn:aws:events:{region}::event-source/aws.partner/shopify.com/{app_id}/{path}\nconst arnRegex =\n  /^arn:aws:events:(?<aws_region>[a-z]{2}-[a-z]+-[0-9]+)::event-source\\/aws\\.partner\\/shopify\\.com(\\.test)?\\/(?<api_client_id>\\d+)\\/(?<event_source_name>.+)$/\n\n// adding http or https presence and absence of new lines to url validation\nconst validateUrl = (zodType: zod.ZodString, {httpsOnly = false, message = 'Invalid url'} = {}) => {\n  const regex = httpsOnly ? httpsRegex : /^(https?:\\/\\/)/\n  return zodType\n    .url()\n    .refine((value) => Boolean(value.match(regex)), {message})\n    .refine((value) => !value.includes('\\n'), {message})\n}\n\nconst ensurePathStartsWithSlash = (arg: unknown) => (typeof arg === 'string' && !arg.startsWith('/') ? `/${arg}` : arg)\nconst removeTrailingSlash = (arg: unknown) =>\n  typeof arg === 'string' && arg.endsWith('/') ? arg.replace(/\\/+$/, '') : arg\nconst ensureHttpsOnlyUrl = validateUrl(zod.string(), {\n  httpsOnly: true,\n  message: 'Only https urls are allowed',\n}).refine((url) => !url.endsWith('/'), {message: 'URL can’t end with a forward slash'})\n\nconst EndpointValidation = zod\n  .union([zod.string().regex(httpsRegex), zod.string().regex(pubSubRegex), zod.string().regex(arnRegex)])\n  .optional()\n\nexport const WebhookSubscriptionSchema = zod.object({\n  topic: zod.string(),\n  sub_topic: zod.string().optional(),\n  include_fields: zod.array(zod.string()).optional(),\n  metafield_namespaces: zod.array(zod.string()).optional(),\n  endpoint: zod.preprocess(removeTrailingSlash, EndpointValidation),\n  path: zod\n    .string()\n    .refine((path) => path.startsWith('/') && path.length > 1, {\n      message: 'Path must start with a forward slash and be longer than 1 character',\n    })\n    .optional(),\n})\n\nconst WebhooksSchema = zod.object({\n  api_version: zod.string(),\n  privacy_compliance: zod\n    .object({\n      customer_deletion_url: ensureHttpsOnlyUrl.optional(),\n      customer_data_request_url: ensureHttpsOnlyUrl.optional(),\n      shop_deletion_url: ensureHttpsOnlyUrl.optional(),\n    })\n    .optional(),\n})\n\nconst WebhooksSchemaWithDeclarative = WebhooksSchema.extend({\n  topics: zod.array(zod.string()).nonempty().optional(),\n  endpoint: zod.preprocess(removeTrailingSlash, EndpointValidation),\n  subscriptions: zod.array(WebhookSubscriptionSchema).optional(),\n}).superRefine((schema, ctx) => {\n  // eslint-disable-next-line no-warning-comments\n  // TODO - remove once declarative webhooks are live, don't validate properties we are not using yet\n  if (TEMP_OMIT_DECLARATIVE_WEBHOOKS_SCHEMA) return\n\n  const topLevelSubscriptionErrors = validateTopLevelSubscriptions(schema)\n  if (topLevelSubscriptionErrors) {\n    ctx.addIssue(topLevelSubscriptionErrors)\n    return zod.NEVER\n  }\n\n  const innerSubscriptionErrors = validateInnerSubscriptions(schema)\n  if (innerSubscriptionErrors) {\n    ctx.addIssue(innerSubscriptionErrors)\n    return zod.NEVER\n  }\n})\n\nexport const AppSchema = zod\n  .object({\n    name: zod.string().max(30),\n    client_id: zod.string(),\n    application_url: validateUrl(zod.string()),\n    embedded: zod.boolean(),\n    access_scopes: zod\n      .object({\n        scopes: zod.string().optional(),\n        use_legacy_install_flow: zod.boolean().optional(),\n      })\n      .optional(),\n    auth: zod\n      .object({\n        redirect_urls: zod.array(validateUrl(zod.string())),\n      })\n      .optional(),\n    webhooks: WebhooksSchemaWithDeclarative,\n    app_proxy: zod\n      .object({\n        url: validateUrl(zod.string()),\n        subpath: zod.string(),\n        prefix: zod.string(),\n      })\n      .optional(),\n    pos: zod\n      .object({\n        embedded: zod.boolean(),\n      })\n      .optional(),\n    app_preferences: zod\n      .object({\n        url: validateUrl(zod.string().max(255)),\n      })\n      .optional(),\n    build: zod\n      .object({\n        automatically_update_urls_on_dev: zod.boolean().optional(),\n        dev_store_url: zod.string().optional(),\n      })\n      .optional(),\n    extension_directories: zod.array(zod.string()).optional(),\n    web_directories: zod.array(zod.string()).optional(),\n  })\n  .strict()\n\nexport const AppConfigurationSchema = zod.union([LegacyAppSchema, AppSchema])\n\n/**\n * Check whether a shopify.app.toml schema is valid against the legacy schema definition.\n * @param item - the item to validate\n */\nexport function isLegacyAppSchema(item: AppConfiguration): item is LegacyAppConfiguration {\n  const {path, ...rest} = item\n  return isType(LegacyAppSchema, rest)\n}\n\n/**\n * Check whether a shopify.app.toml schema is valid against the current schema definition.\n * @param item - the item to validate\n */\nexport function isCurrentAppSchema(item: AppConfiguration): item is CurrentAppConfiguration {\n  const {path, ...rest} = item\n  return isType(AppSchema, rest)\n}\n\n/**\n * Get scopes from a given app.toml config file.\n * @param config - a configuration file\n */\nexport function getAppScopes(config: AppConfiguration) {\n  if (isLegacyAppSchema(config)) {\n    return config.scopes\n  } else {\n    return config.access_scopes?.scopes ?? ''\n  }\n}\n\n/**\n * Get scopes as an array from a given app.toml config file.\n * @param config - a configuration file\n */\nexport function getAppScopesArray(config: AppConfiguration) {\n  const scopes = getAppScopes(config)\n  return scopes.length ? scopes.split(',').map((scope) => scope.trim()) : []\n}\n\nexport function usesLegacyScopesBehavior(config: AppConfiguration) {\n  if (isLegacyAppSchema(config)) return true\n  return Boolean(config.access_scopes?.use_legacy_install_flow)\n}\n\nexport function appIsLaunchable(app: AppInterface) {\n  const frontendConfig = app?.webs?.find((web) => isWebType(web, WebType.Frontend))\n  const backendConfig = app?.webs?.find((web) => isWebType(web, WebType.Backend))\n\n  return Boolean(frontendConfig || backendConfig)\n}\n\nexport enum WebType {\n  Frontend = 'frontend',\n  Backend = 'backend',\n  Background = 'background',\n}\n\nconst WebConfigurationAuthCallbackPathSchema = zod.preprocess(ensurePathStartsWithSlash, zod.string())\n\nconst baseWebConfigurationSchema = zod.object({\n  auth_callback_path: zod\n    .union([WebConfigurationAuthCallbackPathSchema, WebConfigurationAuthCallbackPathSchema.array()])\n    .optional(),\n  webhooks_path: zod.preprocess(ensurePathStartsWithSlash, zod.string()).optional(),\n  port: zod.number().max(65536).min(0).optional(),\n  commands: zod.object({\n    build: zod.string().optional(),\n    dev: zod.string(),\n  }),\n  name: zod.string().optional(),\n  hmr_server: zod.object({http_paths: zod.string().array()}).optional(),\n})\nconst webTypes = zod.enum([WebType.Frontend, WebType.Backend, WebType.Background]).default(WebType.Frontend)\nexport const WebConfigurationSchema = zod.union([\n  baseWebConfigurationSchema.extend({roles: zod.array(webTypes)}),\n  baseWebConfigurationSchema.extend({type: webTypes}),\n])\nexport const ProcessedWebConfigurationSchema = baseWebConfigurationSchema.extend({roles: zod.array(webTypes)})\n\nexport type AppConfiguration = zod.infer<typeof AppConfigurationSchema> & {path: string}\nexport type CurrentAppConfiguration = zod.infer<typeof AppSchema> & {path: string}\nexport type LegacyAppConfiguration = zod.infer<typeof LegacyAppSchema> & {path: string}\nexport type WebConfiguration = zod.infer<typeof WebConfigurationSchema>\nexport type ProcessedWebConfiguration = zod.infer<typeof ProcessedWebConfigurationSchema>\nexport type WebConfigurationCommands = keyof WebConfiguration['commands']\nexport type WebhookConfig = Partial<zod.infer<typeof AppSchema>['webhooks']>\nexport type NormalizedWebhookSubscriptions = Partial<zod.infer<typeof WebhookSubscriptionSchema>>[]\n\nexport interface Web {\n  directory: string\n  configuration: ProcessedWebConfiguration\n  framework?: string\n}\n\nexport interface AppConfigurationInterface {\n  directory: string\n  configuration: AppConfiguration\n}\n\nexport interface AppInterface extends AppConfigurationInterface {\n  name: string\n  idEnvironmentVariableName: string\n  packageManager: PackageManager\n  nodeDependencies: {[key: string]: string}\n  webs: Web[]\n  usesWorkspaces: boolean\n  dotenv?: DotEnvFile\n  allExtensions: ExtensionInstance[]\n  errors?: AppErrors\n  hasExtensions: () => boolean\n  updateDependencies: () => Promise<void>\n  extensionsForType: (spec: {identifier: string; externalIdentifier: string}) => ExtensionInstance[]\n  updateExtensionUUIDS: (uuids: {[key: string]: string}) => void\n  preDeployValidation: () => Promise<void>\n}\n\nexport class App implements AppInterface {\n  name: string\n  idEnvironmentVariableName: string\n  directory: string\n  packageManager: PackageManager\n  configuration: AppConfiguration\n  nodeDependencies: {[key: string]: string}\n  webs: Web[]\n  usesWorkspaces: boolean\n  dotenv?: DotEnvFile\n  errors?: AppErrors\n  allExtensions: ExtensionInstance[]\n\n  // eslint-disable-next-line max-params\n  constructor(\n    name: string,\n    idEnvironmentVariableName: string,\n    directory: string,\n    packageManager: PackageManager,\n    configuration: AppConfiguration,\n    nodeDependencies: {[key: string]: string},\n    webs: Web[],\n    extensions: ExtensionInstance[],\n    usesWorkspaces: boolean,\n    dotenv?: DotEnvFile,\n    errors?: AppErrors,\n  ) {\n    this.name = name\n    this.idEnvironmentVariableName = idEnvironmentVariableName\n    this.directory = directory\n    this.packageManager = packageManager\n    this.configuration = configuration\n    this.nodeDependencies = nodeDependencies\n    this.webs = webs\n    this.dotenv = dotenv\n    this.allExtensions = extensions\n    this.errors = errors\n    this.usesWorkspaces = usesWorkspaces\n  }\n\n  async updateDependencies() {\n    const nodeDependencies = await getDependencies(joinPath(this.directory, 'package.json'))\n    this.nodeDependencies = nodeDependencies\n  }\n\n  async preDeployValidation() {\n    const functionExtensionsWithUiHandle = this.allExtensions.filter(\n      (ext) => ext.isFunctionExtension && (ext.configuration as unknown as FunctionConfigType).ui?.handle,\n    ) as ExtensionInstance<FunctionConfigType>[]\n\n    if (functionExtensionsWithUiHandle.length > 0) {\n      const errors = validateFunctionExtensionsWithUiHandle(functionExtensionsWithUiHandle, this.allExtensions)\n      if (errors) {\n        throw new AbortError('Invalid function configuration', errors.join('\\n'))\n      }\n    }\n\n    await Promise.all([this.allExtensions.map((ext) => ext.preDeployValidation())])\n  }\n\n  hasExtensions(): boolean {\n    return this.allExtensions.length > 0\n  }\n\n  extensionsForType(specification: {identifier: string; externalIdentifier: string}): ExtensionInstance[] {\n    return this.allExtensions.filter(\n      (extension) => extension.type === specification.identifier || extension.type === specification.externalIdentifier,\n    )\n  }\n\n  updateExtensionUUIDS(uuids: {[key: string]: string}) {\n    this.allExtensions.forEach((extension) => {\n      extension.devUUID = uuids[extension.localIdentifier] ?? extension.devUUID\n    })\n  }\n}\n\nexport function validateFunctionExtensionsWithUiHandle(\n  functionExtensionsWithUiHandle: ExtensionInstance<FunctionConfigType>[],\n  allExtensions: ExtensionInstance[],\n): string[] | undefined {\n  const errors: string[] = []\n\n  functionExtensionsWithUiHandle.forEach((extension) => {\n    const uiHandle = extension.configuration.ui!.handle!\n\n    const matchingExtension = findExtensionByHandle(allExtensions, uiHandle)\n    if (!matchingExtension) {\n      errors.push(`[${extension.name}] - Local app must contain a ui_extension with handle '${uiHandle}'`)\n    } else if (matchingExtension.configuration.type !== 'ui_extension') {\n      errors.push(\n        `[${extension.name}] - Local app must contain one extension of type 'ui_extension' and handle '${uiHandle}'`,\n      )\n    }\n  })\n\n  return errors.length > 0 ? errors : undefined\n}\n\nfunction findExtensionByHandle(allExtensions: ExtensionInstance[], handle: string): ExtensionInstance | undefined {\n  return allExtensions.find((ext) => ext.handle === handle)\n}\n\nexport class EmptyApp extends App {\n  constructor() {\n    const configuration = {scopes: '', extension_directories: [], path: ''}\n    super('', '', '', 'npm', configuration, {}, [], [], false)\n  }\n}\n\ntype RendererVersionResult = {name: string; version: string} | undefined | 'not_found'\n\n/**\n * Given a UI extension, it returns the version of the renderer package.\n * Looks for `/node_modules/@shopify/{renderer-package-name}/package.json` to find the real version used.\n * @param extension - UI extension whose renderer version will be obtained.\n * @returns The version if the dependency exists.\n */\nexport async function getUIExtensionRendererVersion(extension: ExtensionInstance): Promise<RendererVersionResult> {\n  // Look for the vanilla JS version of the dependency (the react one depends on it, will always be present)\n  const rendererDependency = extension.dependency\n  if (!rendererDependency) return undefined\n  return getDependencyVersion(rendererDependency, extension.directory)\n}\n\nexport async function getDependencyVersion(dependency: string, directory: string): Promise<RendererVersionResult> {\n  // Split the dependency name to avoid using \"/\" in windows. Only look for non react dependencies.\n  const dependencyName = dependency.replace('-react', '').split('/')\n  const pattern = joinPath('node_modules', dependencyName[0]!, dependencyName[1]!, 'package.json')\n\n  let packagePath = await findPathUp(pattern, {\n    cwd: directory,\n    type: 'file',\n    allowSymlinks: true,\n  })\n  if (!packagePath) return 'not_found'\n  packagePath = await fileRealPath(packagePath)\n\n  // Load the package.json and extract the version\n  const packageContent = await readAndParsePackageJson(packagePath)\n  if (!packageContent.version) return 'not_found'\n  return {name: dependency, version: packageContent.version}\n}\n"]}