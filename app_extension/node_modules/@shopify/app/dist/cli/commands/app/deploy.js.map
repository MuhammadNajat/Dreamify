{"version":3,"file":"deploy.js","sourceRoot":"","sources":["../../../../src/cli/commands/app/deploy.ts"],"names":[],"mappings":"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","sourcesContent":["import {appFlags} from '../../flags.js'\nimport {deploy} from '../../services/deploy.js'\nimport {AppInterface} from '../../models/app/app.js'\nimport {loadApp} from '../../models/app/loader.js'\nimport {validateVersion} from '../../validations/version-name.js'\nimport Command from '../../utilities/app-command.js'\nimport {loadLocalExtensionsSpecifications} from '../../models/extensions/load-specifications.js'\nimport {showApiKeyDeprecationWarning} from '../../prompts/deprecation-warnings.js'\nimport {validateMessage} from '../../validations/message.js'\nimport metadata from '../../metadata.js'\nimport {Flags} from '@oclif/core'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\nimport {addPublicMetadata} from '@shopify/cli-kit/node/metadata'\n\nexport default class Deploy extends Command {\n  static description = 'Deploy your Shopify app.'\n\n  static flags = {\n    ...globalFlags,\n    ...appFlags,\n    'api-key': Flags.string({\n      hidden: true,\n      description: 'The API key of your app.',\n      env: 'SHOPIFY_FLAG_APP_API_KEY',\n      exclusive: ['config'],\n    }),\n    'client-id': Flags.string({\n      hidden: false,\n      description: 'The Client ID of your app.',\n      env: 'SHOPIFY_FLAG_CLIENT_ID',\n      exclusive: ['config'],\n    }),\n    reset: Flags.boolean({\n      hidden: false,\n      description: 'Reset all your settings.',\n      env: 'SHOPIFY_FLAG_RESET',\n      default: false,\n      exclusive: ['config'],\n    }),\n    force: Flags.boolean({\n      hidden: false,\n      description: 'Deploy without asking for confirmation.',\n      env: 'SHOPIFY_FLAG_FORCE',\n      char: 'f',\n    }),\n    'no-release': Flags.boolean({\n      hidden: false,\n      description: \"Creates a version but doesn't release it - it's not made available to merchants.\",\n      env: 'SHOPIFY_FLAG_NO_RELEASE',\n      default: false,\n    }),\n    message: Flags.string({\n      hidden: false,\n      description:\n        \"Optional message that will be associated with this version. This is for internal use only and won't be available externally.\",\n      env: 'SHOPIFY_FLAG_MESSAGE',\n    }),\n    version: Flags.string({\n      hidden: false,\n      description:\n        'Optional version tag that will be associated with this app version. If not provided, an auto-generated identifier will be generated for this app version.',\n      env: 'SHOPIFY_FLAG_VERSION',\n    }),\n    'source-control-url': Flags.string({\n      hidden: false,\n      description: 'URL associated with the new app version.',\n      env: 'SHOPIFY_FLAG_SOURCE_CONTROL_URL',\n    }),\n  }\n\n  async run(): Promise<void> {\n    const {flags} = await this.parse(Deploy)\n\n    await metadata.addPublicMetadata(() => ({\n      cmd_deploy_flag_message_used: Boolean(flags.message),\n      cmd_deploy_flag_version_used: Boolean(flags.version),\n      cmd_deploy_flag_source_url_used: Boolean(flags['source-control-url']),\n    }))\n\n    validateVersion(flags.version)\n    validateMessage(flags.message)\n\n    if (!flags['api-key']) {\n      if (process.env.SHOPIFY_API_KEY) {\n        flags['api-key'] = process.env.SHOPIFY_API_KEY\n      }\n    }\n    if (flags['api-key']) {\n      await showApiKeyDeprecationWarning()\n    }\n    const apiKey = flags['client-id'] || flags['api-key']\n\n    await addPublicMetadata(() => ({\n      cmd_app_reset_used: flags.reset,\n    }))\n\n    const specifications = await loadLocalExtensionsSpecifications(this.config)\n    const app: AppInterface = await loadApp({specifications, directory: flags.path, configName: flags.config})\n\n    const requiredNonTTYFlags = ['force']\n    if (!apiKey && !app.configuration.client_id) requiredNonTTYFlags.push('client-id')\n    this.failMissingNonTTYFlags(flags, requiredNonTTYFlags)\n\n    await deploy({\n      app,\n      apiKey,\n      reset: flags.reset,\n      force: flags.force,\n      noRelease: flags['no-release'],\n      message: flags.message,\n      version: flags.version,\n      commitReference: flags['source-control-url'],\n      commandConfig: this.config,\n    })\n  }\n}\n"]}