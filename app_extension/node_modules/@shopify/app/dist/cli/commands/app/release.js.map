{"version":3,"file":"release.js","sourceRoot":"","sources":["../../../../src/cli/commands/app/release.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,EAAC,MAAM,gBAAgB,CAAA;AAEvC,OAAO,EAAC,OAAO,EAAC,MAAM,4BAA4B,CAAA;AAClD,OAAO,OAAO,MAAM,gCAAgC,CAAA;AACpD,OAAO,EAAC,iCAAiC,EAAC,MAAM,gDAAgD,CAAA;AAChG,OAAO,EAAC,OAAO,EAAC,MAAM,2BAA2B,CAAA;AACjD,OAAO,EAAC,4BAA4B,EAAC,MAAM,uCAAuC,CAAA;AAClF,OAAO,EAAC,KAAK,EAAC,MAAM,aAAa,CAAA;AACjC,OAAO,EAAC,WAAW,EAAC,MAAM,2BAA2B,CAAA;AACrD,OAAO,EAAC,iBAAiB,EAAC,MAAM,gCAAgC,CAAA;AAEhE,MAAqB,OAAQ,SAAQ,OAAO;IAgC1C,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;QACzC,IAAI,KAAK,CAAC,SAAS,CAAC,EAAE;YACpB,MAAM,4BAA4B,EAAE,CAAA;SACrC;QACD,MAAM,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,CAAA;QAErD,MAAM,iBAAiB,CAAC,GAAG,EAAE,CAAC,CAAC;YAC7B,kBAAkB,EAAE,KAAK,CAAC,KAAK;SAChC,CAAC,CAAC,CAAA;QAEH,MAAM,cAAc,GAAG,MAAM,iCAAiC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAC3E,MAAM,GAAG,GAAiB,MAAM,OAAO,CAAC,EAAC,cAAc,EAAE,SAAS,EAAE,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,MAAM,EAAC,CAAC,CAAA;QAC1G,MAAM,OAAO,CAAC;YACZ,GAAG;YACH,MAAM;YACN,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,aAAa,EAAE,IAAI,CAAC,MAAM;SAC3B,CAAC,CAAA;IACJ,CAAC;;AApDM,mBAAW,GAAG,yBAAyB,CAAA;AAEvC,aAAK,GAAG;IACb,GAAG,WAAW;IACd,GAAG,QAAQ;IACX,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC;QACtB,MAAM,EAAE,IAAI;QACZ,WAAW,EAAE,0BAA0B;QACvC,GAAG,EAAE,0BAA0B;QAC/B,SAAS,EAAE,CAAC,QAAQ,CAAC;KACtB,CAAC;IACF,WAAW,EAAE,KAAK,CAAC,MAAM,CAAC;QACxB,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,4BAA4B;QACzC,GAAG,EAAE,wBAAwB;QAC7B,SAAS,EAAE,CAAC,QAAQ,CAAC;KACtB,CAAC;IACF,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC;QACnB,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,0BAA0B;QACvC,GAAG,EAAE,oBAAoB;QACzB,OAAO,EAAE,KAAK;KACf,CAAC;IACF,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC;QACpB,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,yCAAyC;QACtD,GAAG,EAAE,sBAAsB;QAC3B,QAAQ,EAAE,IAAI;KACf,CAAC;CACH,CAAA;eA9BkB,OAAO","sourcesContent":["import {appFlags} from '../../flags.js'\nimport {AppInterface} from '../../models/app/app.js'\nimport {loadApp} from '../../models/app/loader.js'\nimport Command from '../../utilities/app-command.js'\nimport {loadLocalExtensionsSpecifications} from '../../models/extensions/load-specifications.js'\nimport {release} from '../../services/release.js'\nimport {showApiKeyDeprecationWarning} from '../../prompts/deprecation-warnings.js'\nimport {Flags} from '@oclif/core'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\nimport {addPublicMetadata} from '@shopify/cli-kit/node/metadata'\n\nexport default class Release extends Command {\n  static description = 'Release an app version.'\n\n  static flags = {\n    ...globalFlags,\n    ...appFlags,\n    'api-key': Flags.string({\n      hidden: true,\n      description: 'The API key of your app.',\n      env: 'SHOPIFY_FLAG_APP_API_KEY',\n      exclusive: ['config'],\n    }),\n    'client-id': Flags.string({\n      hidden: false,\n      description: 'The Client ID of your app.',\n      env: 'SHOPIFY_FLAG_CLIENT_ID',\n      exclusive: ['config'],\n    }),\n    reset: Flags.boolean({\n      hidden: false,\n      description: 'Reset all your settings.',\n      env: 'SHOPIFY_FLAG_RESET',\n      default: false,\n    }),\n    version: Flags.string({\n      hidden: false,\n      description: 'The name of the app version to release.',\n      env: 'SHOPIFY_FLAG_VERSION',\n      required: true,\n    }),\n  }\n\n  async run(): Promise<void> {\n    const {flags} = await this.parse(Release)\n    if (flags['api-key']) {\n      await showApiKeyDeprecationWarning()\n    }\n    const apiKey = flags['client-id'] || flags['api-key']\n\n    await addPublicMetadata(() => ({\n      cmd_app_reset_used: flags.reset,\n    }))\n\n    const specifications = await loadLocalExtensionsSpecifications(this.config)\n    const app: AppInterface = await loadApp({specifications, directory: flags.path, configName: flags.config})\n    await release({\n      app,\n      apiKey,\n      reset: flags.reset,\n      force: flags.force,\n      version: flags.version,\n      commandConfig: this.config,\n    })\n  }\n}\n"]}