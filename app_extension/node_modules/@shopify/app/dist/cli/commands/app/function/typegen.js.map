{"version":3,"file":"typegen.js","sourceRoot":"","sources":["../../../../../src/cli/commands/app/function/typegen.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,aAAa,EAAE,iBAAiB,EAAC,MAAM,sCAAsC,CAAA;AACrF,OAAO,EAAC,iBAAiB,EAAC,MAAM,qCAAqC,CAAA;AACrE,OAAO,EAAC,QAAQ,EAAC,MAAM,mBAAmB,CAAA;AAC1C,OAAO,OAAO,MAAM,oCAAoC,CAAA;AACxD,OAAO,EAAC,WAAW,EAAC,MAAM,2BAA2B,CAAA;AACrD,OAAO,EAAC,aAAa,EAAC,MAAM,0BAA0B,CAAA;AAEtD,MAAqB,eAAgB,SAAQ,OAAO;IAS3C,KAAK,CAAC,GAAG;QACd,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAA;QACjD,MAAM,iBAAiB,CAAC;YACtB,aAAa,EAAE,IAAI,CAAC,MAAM;YAC1B,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,UAAU,EAAE,KAAK,CAAC,UAAU;YAC5B,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE,EAAE;gBACnC,MAAM,iBAAiB,CAAC,WAAW,EAAE,EAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,GAAG,EAAC,CAAC,CAAA;gBAC3F,aAAa,CAAC,EAAC,QAAQ,EAAE,uCAAuC,EAAC,CAAC,CAAA;YACpE,CAAC;SACF,CAAC,CAAA;IACJ,CAAC;;AAnBM,2BAAW,GAAG,mDAAmD,CAAA;AAEjE,qBAAK,GAAG;IACb,GAAG,WAAW;IACd,GAAG,QAAQ;IACX,GAAG,aAAa;CACjB,CAAA;eAPkB,eAAe","sourcesContent":["import {functionFlags, inFunctionContext} from '../../../services/function/common.js'\nimport {buildGraphqlTypes} from '../../../services/function/build.js'\nimport {appFlags} from '../../../flags.js'\nimport Command from '@shopify/cli-kit/node/base-command'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\nimport {renderSuccess} from '@shopify/cli-kit/node/ui'\n\nexport default class FunctionTypegen extends Command {\n  static description = 'Generate GraphQL types for a JavaScript function.'\n\n  static flags = {\n    ...globalFlags,\n    ...appFlags,\n    ...functionFlags,\n  }\n\n  public async run() {\n    const {flags} = await this.parse(FunctionTypegen)\n    await inFunctionContext({\n      commandConfig: this.config,\n      path: flags.path,\n      configName: flags.configName,\n      callback: async (app, ourFunction) => {\n        await buildGraphqlTypes(ourFunction, {stdout: process.stdout, stderr: process.stderr, app})\n        renderSuccess({headline: 'GraphQL types generated successfully.'})\n      },\n    })\n  }\n}\n"]}