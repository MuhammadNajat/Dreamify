{"version":3,"file":"info.js","sourceRoot":"","sources":["../../../../src/cli/commands/app/info.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,EAAC,MAAM,gBAAgB,CAAA;AAEvC,OAAO,EAAS,IAAI,EAAC,MAAM,wBAAwB,CAAA;AACnD,OAAO,EAAC,OAAO,EAAC,MAAM,4BAA4B,CAAA;AAClD,OAAO,OAAO,MAAM,gCAAgC,CAAA;AACpD,OAAO,EAAC,iCAAiC,EAAC,MAAM,gDAAgD,CAAA;AAChG,OAAO,EAAC,KAAK,EAAC,MAAM,aAAa,CAAA;AACjC,OAAO,EAAC,WAAW,EAAC,MAAM,2BAA2B,CAAA;AACrD,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAA;AAEvD,MAAqB,OAAQ,SAAQ,OAAO;IAmBnC,KAAK,CAAC,GAAG;QACd,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;QACzC,MAAM,cAAc,GAAG,MAAM,iCAAiC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAC3E,MAAM,GAAG,GAAiB,MAAM,OAAO,CAAC;YACtC,cAAc;YACd,SAAS,EAAE,KAAK,CAAC,IAAI;YACrB,UAAU,EAAE,KAAK,CAAC,MAAM;YACxB,IAAI,EAAE,QAAQ;SACf,CAAC,CAAA;QACF,UAAU,CACR,MAAM,IAAI,CAAC,GAAG,EAAE;YACd,MAAM,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAW;YAChD,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC;YACxB,UAAU,EAAE,KAAK,CAAC,MAAM;SACzB,CAAC,CACH,CAAA;QACD,IAAI,GAAG,CAAC,MAAM;YAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACjC,CAAC;;AAnCM,mBAAW,GAAG,wDAAwD,CAAA;AAEtE,aAAK,GAAG;IACb,GAAG,WAAW;IACd,GAAG,QAAQ;IACX,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC;QAClB,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,uBAAuB;QACpC,GAAG,EAAE,mBAAmB;KACzB,CAAC;IACF,SAAS,EAAE,KAAK,CAAC,OAAO,CAAC;QACvB,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,yEAAyE;QACtF,GAAG,EAAE,6BAA6B;QAClC,OAAO,EAAE,KAAK;KACf,CAAC;CACH,CAAA;eAjBkB,OAAO","sourcesContent":["import {appFlags} from '../../flags.js'\nimport {AppInterface} from '../../models/app/app.js'\nimport {Format, info} from '../../services/info.js'\nimport {loadApp} from '../../models/app/loader.js'\nimport Command from '../../utilities/app-command.js'\nimport {loadLocalExtensionsSpecifications} from '../../models/extensions/load-specifications.js'\nimport {Flags} from '@oclif/core'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\nimport {outputInfo} from '@shopify/cli-kit/node/output'\n\nexport default class AppInfo extends Command {\n  static description = 'Print basic information about your app and extensions.'\n\n  static flags = {\n    ...globalFlags,\n    ...appFlags,\n    json: Flags.boolean({\n      hidden: false,\n      description: 'format output as JSON',\n      env: 'SHOPIFY_FLAG_JSON',\n    }),\n    'web-env': Flags.boolean({\n      hidden: false,\n      description: 'Outputs environment variables necessary for running and deploying web/.',\n      env: 'SHOPIFY_FLAG_OUTPUT_WEB_ENV',\n      default: false,\n    }),\n  }\n\n  public async run(): Promise<void> {\n    const {flags} = await this.parse(AppInfo)\n    const specifications = await loadLocalExtensionsSpecifications(this.config)\n    const app: AppInterface = await loadApp({\n      specifications,\n      directory: flags.path,\n      configName: flags.config,\n      mode: 'report',\n    })\n    outputInfo(\n      await info(app, {\n        format: (flags.json ? 'json' : 'text') as Format,\n        webEnv: flags['web-env'],\n        configName: flags.config,\n      }),\n    )\n    if (app.errors) process.exit(2)\n  }\n}\n"]}