{"version":3,"file":"show.js","sourceRoot":"","sources":["../../../../../src/cli/commands/app/env/show.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,EAAC,MAAM,mBAAmB,CAAA;AAE1C,OAAO,EAAC,OAAO,EAAC,MAAM,+BAA+B,CAAA;AACrD,OAAO,EAAC,OAAO,EAAC,MAAM,mCAAmC,CAAA;AACzD,OAAO,OAAO,MAAM,mCAAmC,CAAA;AACvD,OAAO,EAAC,iCAAiC,EAAC,MAAM,mDAAmD,CAAA;AACnG,OAAO,EAAC,WAAW,EAAC,MAAM,2BAA2B,CAAA;AACrD,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAA;AAEvD,MAAqB,OAAQ,SAAQ,OAAO;IAQnC,KAAK,CAAC,GAAG;QACd,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;QACzC,MAAM,cAAc,GAAG,MAAM,iCAAiC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAC3E,MAAM,GAAG,GAAiB,MAAM,OAAO,CAAC;YACtC,cAAc;YACd,SAAS,EAAE,KAAK,CAAC,IAAI;YACrB,UAAU,EAAE,KAAK,CAAC,MAAM;YACxB,IAAI,EAAE,QAAQ;SACf,CAAC,CAAA;QACF,UAAU,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,CAAA;IAChC,CAAC;;AAjBM,mBAAW,GAAG,mDAAmD,CAAA;AAEjE,aAAK,GAAG;IACb,GAAG,WAAW;IACd,GAAG,QAAQ;CACZ,CAAA;eANkB,OAAO","sourcesContent":["import {appFlags} from '../../../flags.js'\nimport {AppInterface} from '../../../models/app/app.js'\nimport {loadApp} from '../../../models/app/loader.js'\nimport {showEnv} from '../../../services/app/env/show.js'\nimport Command from '../../../utilities/app-command.js'\nimport {loadLocalExtensionsSpecifications} from '../../../models/extensions/load-specifications.js'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\nimport {outputInfo} from '@shopify/cli-kit/node/output'\n\nexport default class EnvShow extends Command {\n  static description = 'Display app and extensions environment variables.'\n\n  static flags = {\n    ...globalFlags,\n    ...appFlags,\n  }\n\n  public async run(): Promise<void> {\n    const {flags} = await this.parse(EnvShow)\n    const specifications = await loadLocalExtensionsSpecifications(this.config)\n    const app: AppInterface = await loadApp({\n      specifications,\n      directory: flags.path,\n      configName: flags.config,\n      mode: 'report',\n    })\n    outputInfo(await showEnv(app))\n  }\n}\n"]}