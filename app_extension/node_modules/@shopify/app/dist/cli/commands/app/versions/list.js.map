{"version":3,"file":"list.js","sourceRoot":"","sources":["../../../../../src/cli/commands/app/versions/list.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,EAAC,MAAM,mBAAmB,CAAA;AAC1C,OAAO,OAAO,MAAM,mCAAmC,CAAA;AACvD,OAAO,WAAW,MAAM,oCAAoC,CAAA;AAC5D,OAAO,EAAC,iCAAiC,EAAC,MAAM,mDAAmD,CAAA;AAEnG,OAAO,EAAC,OAAO,EAAC,MAAM,+BAA+B,CAAA;AACrD,OAAO,EAAC,4BAA4B,EAAC,MAAM,0CAA0C,CAAA;AACrF,OAAO,EAAC,WAAW,EAAC,MAAM,2BAA2B,CAAA;AACrD,OAAO,EAAC,IAAI,EAAE,KAAK,EAAC,MAAM,aAAa,CAAA;AAEvC,MAAqB,YAAa,SAAQ,OAAO;IA8BxC,KAAK,CAAC,GAAG;QACd,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA;QAC9C,IAAI,KAAK,CAAC,SAAS,CAAC,EAAE;YACpB,MAAM,4BAA4B,EAAE,CAAA;SACrC;QACD,MAAM,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,CAAA;QACrD,MAAM,cAAc,GAAG,MAAM,iCAAiC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAC3E,MAAM,GAAG,GAAiB,MAAM,OAAO,CAAC,EAAC,cAAc,EAAE,SAAS,EAAE,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,MAAM,EAAC,CAAC,CAAA;QAE1G,MAAM,WAAW,CAAC;YAChB,GAAG;YACH,MAAM;YACN,KAAK,EAAE,KAAK;YACZ,aAAa,EAAE,IAAI,CAAC,MAAM;YAC1B,IAAI,EAAE,KAAK,CAAC,IAAI;SACjB,CAAC,CAAA;IACJ,CAAC;;AA7CM,wBAAW,GAAG,qCAAqC,CAAA;AACnD,qBAAQ,GAAG,CAAC,qCAAqC,CAAC,CAAA;AAElD,kBAAK,GAAG;IACb,GAAG,WAAW;IACd,GAAG,QAAQ;IACX,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC;QACtB,MAAM,EAAE,IAAI;QACZ,WAAW,EAAE,8CAA8C;QAC3D,GAAG,EAAE,sBAAsB;QAC3B,SAAS,EAAE,CAAC,QAAQ,CAAC;KACtB,CAAC;IACF,WAAW,EAAE,KAAK,CAAC,MAAM,CAAC;QACxB,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,sCAAsC;QACnD,GAAG,EAAE,wBAAwB;QAC7B,SAAS,EAAE,CAAC,QAAQ,CAAC;KACtB,CAAC;IACF,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC;QAClB,WAAW,EAAE,mCAAmC;QAChD,OAAO,EAAE,KAAK;QACd,GAAG,EAAE,mBAAmB;KACzB,CAAC;CACH,CAAA;AAEM,iBAAI,GAAG;IACZ,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE;CACpB,CAAA;eA5BkB,YAAY","sourcesContent":["import {appFlags} from '../../../flags.js'\nimport Command from '../../../utilities/app-command.js'\nimport versionList from '../../../services/versions-list.js'\nimport {loadLocalExtensionsSpecifications} from '../../../models/extensions/load-specifications.js'\nimport {AppInterface} from '../../../models/app/app.js'\nimport {loadApp} from '../../../models/app/loader.js'\nimport {showApiKeyDeprecationWarning} from '../../../prompts/deprecation-warnings.js'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\nimport {Args, Flags} from '@oclif/core'\n\nexport default class VersionsList extends Command {\n  static description = 'List deployed versions of your app.'\n  static examples = ['<%= config.bin %> <%= command.id %>']\n\n  static flags = {\n    ...globalFlags,\n    ...appFlags,\n    'api-key': Flags.string({\n      hidden: true,\n      description: \"Application's API key to fetch versions for.\",\n      env: 'SHOPIFY_FLAG_API_KEY',\n      exclusive: ['config'],\n    }),\n    'client-id': Flags.string({\n      hidden: false,\n      description: 'The Client ID to fetch versions for.',\n      env: 'SHOPIFY_FLAG_CLIENT_ID',\n      exclusive: ['config'],\n    }),\n    json: Flags.boolean({\n      description: 'Output the versions list as JSON.',\n      default: false,\n      env: 'SHOPIFY_FLAG_JSON',\n    }),\n  }\n\n  static args = {\n    file: Args.string(),\n  }\n\n  public async run(): Promise<void> {\n    const {flags} = await this.parse(VersionsList)\n    if (flags['api-key']) {\n      await showApiKeyDeprecationWarning()\n    }\n    const apiKey = flags['client-id'] || flags['api-key']\n    const specifications = await loadLocalExtensionsSpecifications(this.config)\n    const app: AppInterface = await loadApp({specifications, directory: flags.path, configName: flags.config})\n\n    await versionList({\n      app,\n      apiKey,\n      reset: false,\n      commandConfig: this.config,\n      json: flags.json,\n    })\n  }\n}\n"]}