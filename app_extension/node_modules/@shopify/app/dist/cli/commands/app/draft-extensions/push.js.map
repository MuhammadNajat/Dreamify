{"version":3,"file":"push.js","sourceRoot":"","sources":["../../../../../src/cli/commands/app/draft-extensions/push.ts"],"names":[],"mappings":";AAAA,OAAO,OAAO,MAAM,mCAAmC,CAAA;AACvD,OAAO,EAAC,mBAAmB,EAAC,MAAM,4CAA4C,CAAA;AAE9E,OAAO,EAAC,GAAG,EAAE,WAAW,EAAC,MAAM,4BAA4B,CAAA;AAC3D,OAAO,EAAC,KAAK,EAAC,MAAM,aAAa,CAAA;AAEjC,MAAqB,mBAAoB,SAAQ,OAAO;IA0CtD,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,EAAmB,CAAC,CAAA;QAErD,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAA;QAEjC,MAAM,0BAA0B,GAA+B;YAC7D,SAAS,EAAE,KAAK,CAAC,IAAI;YACrB,MAAM,EAAE,KAAK,CAAC,WAAW,CAAC;YAC1B,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,aAAa;YACb,MAAM,EAAE,KAAK,CAAC,MAAM;YACpB,sBAAsB,EAAE,KAAK,CAAC,oBAAoB,CAAC;SACpD,CAAA;QAED,MAAM,mBAAmB,CAAC,0BAA0B,CAAC,CAAA;IACvD,CAAC;;;AAxDM,+BAAW,GAAG,+CAA+C,AAAlD,CAAkD;AAC7D,0BAAM,GAAG,IAAI,AAAP,CAAO;AAEb,yBAAK,GAAG;IACb,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC;QACrB,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,qCAAqC;QAClD,GAAG,EAAE,sBAAsB;KAC5B,CAAC;IACF,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC;QACjB,WAAW,EAAE,iCAAiC;QAC9C,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC;QAC1C,OAAO,EAAE,KAAK,IAAI,EAAE,CAAC,GAAG,EAAE;QAC1B,GAAG,EAAE,mBAAmB;KACzB,CAAC;IACF,WAAW,EAAE,KAAK,CAAC,MAAM,CAAC;QACxB,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,4BAA4B;QACzC,GAAG,EAAE,wBAAwB;QAC7B,SAAS,EAAE,CAAC,QAAQ,CAAC;KACtB,CAAC;IACF,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC;QACnB,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,0BAA0B;QACvC,GAAG,EAAE,oBAAoB;QACzB,OAAO,EAAE,KAAK;KACf,CAAC;IACF,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;QACnB,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG;QACT,WAAW,EAAE,oCAAoC;QACjD,GAAG,EAAE,yBAAyB;KAC/B,CAAC;IACF,oBAAoB,EAAE,KAAK,CAAC,OAAO,CAAC;QAClC,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,wDAAwD;QACrE,GAAG,EAAE,iCAAiC;QACtC,OAAO,EAAE,KAAK;KACf,CAAC;CACH,AApCW,CAoCX;eAxCkB,mBAAmB","sourcesContent":["import Command from '../../../utilities/app-command.js'\nimport {draftExtensionsPush} from '../../../services/draft-extensions/push.js'\nimport {DraftExtensionsPushOptions} from '../../../services/context.js'\nimport {cwd, resolvePath} from '@shopify/cli-kit/node/path'\nimport {Flags} from '@oclif/core'\n\nexport default class DraftExtensionsPush extends Command {\n  static description = 'Updates the content of the app draft version.'\n  static hidden = true\n\n  static flags = {\n    verbose: Flags.boolean({\n      hidden: false,\n      description: 'Increase the verbosity of the logs.',\n      env: 'SHOPIFY_FLAG_VERBOSE',\n    }),\n    path: Flags.string({\n      description: 'The path to your app directory.',\n      parse: async (input) => resolvePath(input),\n      default: async () => cwd(),\n      env: 'SHOPIFY_FLAG_PATH',\n    }),\n    'client-id': Flags.string({\n      hidden: false,\n      description: 'The Client ID of your app.',\n      env: 'SHOPIFY_FLAG_CLIENT_ID',\n      exclusive: ['config'],\n    }),\n    reset: Flags.boolean({\n      hidden: false,\n      description: 'Reset all your settings.',\n      env: 'SHOPIFY_FLAG_RESET',\n      default: false,\n    }),\n    config: Flags.string({\n      hidden: false,\n      char: 'c',\n      description: 'The name of the app configuration.',\n      env: 'SHOPIFY_FLAG_APP_CONFIG',\n    }),\n    'enable-dev-preview': Flags.boolean({\n      hidden: false,\n      description: 'Enable dev preview after the draft content is updated.',\n      env: 'SHOPIFY_FLAG_ENABLE_DEV_PREVIEW',\n      default: false,\n    }),\n  }\n\n  async run(): Promise<void> {\n    const {flags} = await this.parse(DraftExtensionsPush)\n\n    const commandConfig = this.config\n\n    const pushDraftExtensionsOptions: DraftExtensionsPushOptions = {\n      directory: flags.path,\n      apiKey: flags['client-id'],\n      reset: flags.reset,\n      commandConfig,\n      config: flags.config,\n      enableDeveloperPreview: flags['enable-dev-preview'],\n    }\n\n    await draftExtensionsPush(pushDraftExtensionsOptions)\n  }\n}\n"]}