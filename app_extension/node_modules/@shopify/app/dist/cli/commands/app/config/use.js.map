{"version":3,"file":"use.js","sourceRoot":"","sources":["../../../../../src/cli/commands/app/config/use.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,EAAC,MAAM,mBAAmB,CAAA;AAC1C,OAAO,EAAC,oBAAoB,EAAC,MAAM,+BAA+B,CAAA;AAClE,OAAO,GAAG,MAAM,qCAAqC,CAAA;AACrD,OAAO,OAAO,MAAM,mCAAmC,CAAA;AACvD,OAAO,EAAC,IAAI,EAAE,KAAK,EAAC,MAAM,aAAa,CAAA;AACvC,OAAO,EAAC,WAAW,EAAC,MAAM,2BAA2B,CAAA;AAErD,wDAAwD;AACxD,4DAA4D;AAC5D,MAAM,EAAC,MAAM,EAAE,GAAG,qBAAqB,EAAC,GAAG,QAAQ,CAAA;AAEnD,MAAqB,SAAU,SAAQ,OAAO;IAsBrC,KAAK,CAAC,GAAG;QACd,MAAM,EAAC,KAAK,EAAE,IAAI,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAA;QACjD,yEAAyE;QACzE,MAAM,QAAQ,GAAG,MAAM,oBAAoB,CAAC;YAC1C,SAAS,EAAE,KAAK,CAAC,IAAI;SACtB,CAAC,CAAA;QAEF,MAAM,GAAG,CAAC,EAAC,SAAS,EAAE,QAAQ,CAAC,SAAS,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAC,CAAC,CAAA;IACzF,CAAC;;AA7BM,qBAAW,GAAG,gCAAgC,CAAA;AAE9C,eAAK,GAAG;IACb,GAAG,WAAW;IACd,GAAG,qBAAqB;IACxB,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC;QACnB,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,8BAA8B;QAC3C,GAAG,EAAE,oBAAoB;QACzB,OAAO,EAAE,KAAK;KACf,CAAC;CACH,CAAA;AAEM,cAAI,GAAG;IACZ,2DAA2D;IAC3D,4DAA4D;IAC5D,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC;QAClB,WAAW,EAAE,2FAA2F;KACzG,CAAC;CACH,CAAA;eApBkB,SAAS","sourcesContent":["import {appFlags} from '../../../flags.js'\nimport {loadAppConfiguration} from '../../../models/app/loader.js'\nimport use from '../../../services/app/config/use.js'\nimport Command from '../../../utilities/app-command.js'\nimport {Args, Flags} from '@oclif/core'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\n\n// This is one of the few commands where we don't need a\n// `--config` flag, because we're passing it as an argument.\nconst {config, ...appFlagsWithoutConfig} = appFlags\n\nexport default class ConfigUse extends Command {\n  static description = 'Activate an app configuration.'\n\n  static flags = {\n    ...globalFlags,\n    ...appFlagsWithoutConfig,\n    reset: Flags.boolean({\n      hidden: false,\n      description: 'Reset current configuration.',\n      env: 'SHOPIFY_FLAG_RESET',\n      default: false,\n    }),\n  }\n\n  static args = {\n    // we want to this argument to be optional so that the user\n    // can also select one from the list of available app tomls.\n    config: Args.string({\n      description: \"The name of the app configuration. Can be 'shopify.app.staging.toml' or simply 'staging'.\",\n    }),\n  }\n\n  public async run(): Promise<void> {\n    const {flags, args} = await this.parse(ConfigUse)\n    // eslint-disable-next-line @shopify/cli/required-fields-when-loading-app\n    const localApp = await loadAppConfiguration({\n      directory: flags.path,\n    })\n\n    await use({directory: localApp.directory, configName: args.config, reset: flags.reset})\n  }\n}\n"]}