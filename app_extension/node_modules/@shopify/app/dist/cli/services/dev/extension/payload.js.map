{"version":3,"file":"payload.js","sourceRoot":"","sources":["../../../../../src/cli/services/dev/extension/payload.ts"],"names":[],"mappings":"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","sourcesContent":["import {getLocalization} from './localization.js'\nimport {DevNewExtensionPointSchema, UIExtensionPayload} from './payload/models.js'\nimport {getExtensionPointTargetSurface} from './utilities.js'\nimport {getUIExtensionResourceURL} from '../../../utilities/extensions/configuration.js'\nimport {ExtensionDevOptions} from '../extension.js'\nimport {getUIExtensionRendererVersion} from '../../../models/app/app.js'\nimport {ExtensionInstance} from '../../../models/extensions/extension-instance.js'\nimport {fileLastUpdatedTimestamp} from '@shopify/cli-kit/node/fs'\n\nexport type GetUIExtensionPayloadOptions = ExtensionDevOptions & {\n  currentDevelopmentPayload?: Partial<UIExtensionPayload['development']>\n  currentLocalizationPayload?: UIExtensionPayload['localization']\n}\n\nexport async function getUIExtensionPayload(\n  extension: ExtensionInstance,\n  options: GetUIExtensionPayloadOptions,\n): Promise<UIExtensionPayload> {\n  const url = `${options.url}/extensions/${extension.devUUID}`\n  const {localization, status: localizationStatus} = await getLocalization(extension, options)\n\n  const renderer = await getUIExtensionRendererVersion(extension)\n  const defaultConfig = {\n    assets: {\n      main: {\n        name: 'main',\n        url: `${url}/assets/${extension.outputFileName}`,\n        lastUpdated: (await fileLastUpdatedTimestamp(extension.outputPath)) ?? 0,\n      },\n    },\n    capabilities: {\n      blockProgress: extension.configuration.capabilities?.block_progress || false,\n      networkAccess: extension.configuration.capabilities?.network_access || false,\n      apiAccess: extension.configuration.capabilities?.api_access || false,\n      collectBuyerConsent: {\n        smsMarketing: extension.configuration.capabilities?.collect_buyer_consent?.sms_marketing || false,\n      },\n    },\n    development: {\n      ...options.currentDevelopmentPayload,\n      resource: getUIExtensionResourceURL(extension.configuration.type, options),\n      root: {\n        url,\n      },\n      hidden: options.currentDevelopmentPayload?.hidden || false,\n      localizationStatus,\n      status: options.currentDevelopmentPayload?.status || 'success',\n      ...(options.currentDevelopmentPayload || {status: 'success'}),\n    },\n    extensionPoints: getExtensionPoints(extension.configuration.extension_points, url),\n    localization: localization ?? null,\n    categories: extension.configuration.categories ?? null,\n    metafields: extension.configuration.metafields.length === 0 ? null : extension.configuration.metafields,\n    type: extension.configuration.type,\n\n    externalType: extension.externalType,\n    uuid: extension.devUUID,\n\n    surface: extension.surface,\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    version: renderer?.version,\n    title: extension.configuration.name,\n    handle: extension.handle,\n    name: extension.configuration.name,\n    description: extension.configuration.description,\n    apiVersion: extension.configuration.api_version,\n    approvalScopes: options.grantedScopes,\n    settings: extension.configuration.settings,\n  }\n  return defaultConfig\n}\n\nfunction getExtensionPoints(extensionPoints: ExtensionInstance['configuration']['extension_points'], url: string) {\n  if (isNewExtensionPointsSchema(extensionPoints)) {\n    return extensionPoints.map((extensionPoint) => {\n      const {target, resource} = extensionPoint\n\n      return {\n        ...extensionPoint,\n        surface: getExtensionPointTargetSurface(target),\n        root: {\n          url: `${url}/${target}`,\n        },\n        resource: resource || {url: ''},\n      }\n    })\n  }\n\n  return extensionPoints\n}\n\nexport function isNewExtensionPointsSchema(extensionPoints: unknown): extensionPoints is DevNewExtensionPointSchema[] {\n  return (\n    Array.isArray(extensionPoints) &&\n    extensionPoints.every((extensionPoint: unknown) => typeof extensionPoint === 'object')\n  )\n}\n"]}