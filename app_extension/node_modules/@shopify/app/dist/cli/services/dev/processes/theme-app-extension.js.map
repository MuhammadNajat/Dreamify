{"version":3,"file":"theme-app-extension.js","sourceRoot":"","sources":["../../../../../src/cli/services/dev/processes/theme-app-extension.ts"],"names":[],"mappings":"AAEA,OAAO,EAAC,gBAAgB,EAAC,MAAM,0CAA0C,CAAA;AACzE,OAAO,EAAC,kBAAkB,EAAC,MAAM,4BAA4B,CAAA;AAC7D,OAAO,EAAC,QAAQ,EAAC,MAAM,4BAA4B,CAAA;AACnD,OAAO,EAAe,wBAAwB,EAAE,6BAA6B,EAAC,MAAM,+BAA+B,CAAA;AAanH,MAAM,CAAC,MAAM,2BAA2B,GAAyD,KAAK,EACpG,EAAC,MAAM,EAAE,MAAM,EAAE,WAAW,EAAC,EAC7B,EAAC,YAAY,EAAE,wBAAwB,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAC,EACtE,EAAE;IACF,MAAM,QAAQ,CAAC,CAAC,WAAW,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,EAAE;QAC9C,KAAK,EAAE,YAAY,CAAC,SAAS;QAC7B,UAAU,EAAE,YAAY,CAAC,KAAK;QAC9B,eAAe;QACf,KAAK;QACL,MAAM;QACN,MAAM;QACN,MAAM,EAAE,WAAW;KACpB,CAAC,CAAA;AACJ,CAAC,CAAA;AAED,MAAM,CAAC,KAAK,UAAU,qCAAqC,CAAC,EAC1D,aAAa,EACb,MAAM,EACN,SAAS,EACT,KAAK,EACL,kBAAkB,EAClB,MAAM,EACN,KAAK,GAQN;IACC,MAAM,eAAe,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAA;IAC3E,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;QAChC,OAAM;KACP;IAED,MAAM,YAAY,GAAG,MAAM,wBAAwB,CAAC,SAAS,CAAC,CAAA;IAC9D,MAAM,SAAS,GAAG,eAAe,CAAC,CAAC,CAAE,CAAA;IACrC,IAAI,kBAAkB,GAAG,EAAE,CAAA;IAC3B,IAAI,CAAC,KAAK,EAAE;QACV,MAAM,KAAK,GAAG,MAAM,IAAI,gBAAgB,CAAC,YAAY,CAAC,CAAC,YAAY,EAAE,CAAA;QACrE,kBAAkB,GAAG;YACnB,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE;YAC1B,gBAAgB,EAAE,IAAI;SACvB,CAAA;KACF;IACD,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;QAChD,6BAA6B,EAAE;QAC/B,kBAAkB,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE;YAC3C,KAAK;YACL,kBAAkB;YAClB,MAAM;YACN,GAAG,kBAAkB;SACtB,CAAC;KACH,CAAC,CAAA;IAEF,OAAO;QACL,IAAI,EAAE,sBAAsB;QAC5B,MAAM,EAAE,YAAY;QACpB,QAAQ,EAAE,2BAA2B;QACrC,OAAO,EAAE;YACP,YAAY;YACZ,wBAAwB,EAAE,IAAI;YAC9B,eAAe;YACf,KAAK;SACN;KACF,CAAA;AACH,CAAC","sourcesContent":["import {BaseProcess, DevProcessFunction} from './types.js'\nimport {ExtensionInstance} from '../../../models/extensions/extension-instance.js'\nimport {HostThemeManager} from '../../../utilities/host-theme-manager.js'\nimport {themeExtensionArgs} from '../theme-extension-args.js'\nimport {execCLI2} from '@shopify/cli-kit/node/ruby'\nimport {AdminSession, ensureAuthenticatedAdmin, ensureAuthenticatedStorefront} from '@shopify/cli-kit/node/session'\n\nexport interface PreviewThemeAppExtensionsOptions {\n  adminSession: AdminSession\n  themeExtensionServerArgs: string[]\n  storefrontToken: string\n  token: string\n}\n\nexport interface PreviewThemeAppExtensionsProcess extends BaseProcess<PreviewThemeAppExtensionsOptions> {\n  type: 'theme-app-extensions'\n}\n\nexport const runThemeAppExtensionsServer: DevProcessFunction<PreviewThemeAppExtensionsOptions> = async (\n  {stdout, stderr, abortSignal},\n  {adminSession, themeExtensionServerArgs: args, storefrontToken, token},\n) => {\n  await execCLI2(['extension', 'serve', ...args], {\n    store: adminSession.storeFqdn,\n    adminToken: adminSession.token,\n    storefrontToken,\n    token,\n    stdout,\n    stderr,\n    signal: abortSignal,\n  })\n}\n\nexport async function setupPreviewThemeAppExtensionsProcess({\n  allExtensions,\n  apiKey,\n  storeFqdn,\n  theme,\n  themeExtensionPort,\n  notify,\n  token,\n}: Pick<PreviewThemeAppExtensionsOptions, 'token'> & {\n  allExtensions: ExtensionInstance[]\n  apiKey: string\n  storeFqdn: string\n  theme?: string\n  notify?: string\n  themeExtensionPort?: number\n}): Promise<PreviewThemeAppExtensionsProcess | undefined> {\n  const themeExtensions = allExtensions.filter((ext) => ext.isThemeExtension)\n  if (themeExtensions.length === 0) {\n    return\n  }\n\n  const adminSession = await ensureAuthenticatedAdmin(storeFqdn)\n  const extension = themeExtensions[0]!\n  let optionsToOverwrite = {}\n  if (!theme) {\n    const theme = await new HostThemeManager(adminSession).findOrCreate()\n    optionsToOverwrite = {\n      theme: theme.id.toString(),\n      generateTmpTheme: true,\n    }\n  }\n  const [storefrontToken, args] = await Promise.all([\n    ensureAuthenticatedStorefront(),\n    themeExtensionArgs(extension, apiKey, token, {\n      theme,\n      themeExtensionPort,\n      notify,\n      ...optionsToOverwrite,\n    }),\n  ])\n\n  return {\n    type: 'theme-app-extensions',\n    prefix: 'extensions',\n    function: runThemeAppExtensionsServer,\n    options: {\n      adminSession,\n      themeExtensionServerArgs: args,\n      storefrontToken,\n      token,\n    },\n  }\n}\n"]}