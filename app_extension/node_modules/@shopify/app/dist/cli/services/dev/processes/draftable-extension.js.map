{"version":3,"file":"draftable-extension.js","sourceRoot":"","sources":["../../../../../src/cli/services/dev/processes/draftable-extension.ts"],"names":[],"mappings":"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","sourcesContent":["import {BaseProcess, DevProcessFunction} from './types.js'\nimport {updateExtensionDraft} from '../update-extension.js'\nimport {setupExtensionWatcher} from '../extension/bundler.js'\nimport {ExtensionInstance} from '../../../models/extensions/extension-instance.js'\nimport {AppInterface} from '../../../models/app/app.js'\nimport {PartnersAppForIdentifierMatching, ensureDeploymentIdsPresence} from '../../context/identifiers.js'\nimport {getAppIdentifiers} from '../../../models/app/identifiers.js'\nimport {installJavy} from '../../function/build.js'\nimport {AbortError} from '@shopify/cli-kit/node/error'\n\nexport interface DraftableExtensionOptions {\n  extensions: ExtensionInstance[]\n  token: string\n  apiKey: string\n  remoteExtensionIds: {[key: string]: string}\n  proxyUrl: string\n  localApp: AppInterface\n}\n\nexport interface DraftableExtensionProcess extends BaseProcess<DraftableExtensionOptions> {\n  type: 'draftable-extension'\n}\n\nexport const pushUpdatesForDraftableExtensions: DevProcessFunction<DraftableExtensionOptions> = async (\n  {stderr, stdout, abortSignal: signal},\n  {extensions, token, apiKey, remoteExtensionIds: remoteExtensions, proxyUrl, localApp: app},\n) => {\n  // Force the download of the javy binary in advance to avoid later problems,\n  // as it might be done multiple times in parallel. https://github.com/Shopify/cli/issues/2877\n  await installJavy(app)\n\n  await Promise.all(\n    extensions.map(async (extension) => {\n      await extension.build({app, stdout, stderr, useTasks: false, signal, environment: 'development'})\n      const registrationId = remoteExtensions[extension.localIdentifier]\n      if (!registrationId) throw new AbortError(`Extension ${extension.localIdentifier} not found on remote app.`)\n      // Initial draft update for each extension\n      await updateExtensionDraft({extension, token, apiKey, registrationId, stdout, stderr})\n      // Watch for changes\n      return setupExtensionWatcher({\n        extension,\n        app,\n        url: proxyUrl,\n        stdout,\n        stderr,\n        signal,\n        onChange: async () => {\n          // At this point the extension has alreday been built and is ready to be updated\n          await updateExtensionDraft({extension, token, apiKey, registrationId, stdout, stderr})\n        },\n      })\n    }),\n  )\n}\n\nexport async function setupDraftableExtensionsProcess({\n  localApp,\n  apiKey,\n  token,\n  remoteApp,\n  ...options\n}: Omit<DraftableExtensionOptions, 'remoteExtensionIds' | 'extensions'> & {\n  remoteApp: PartnersAppForIdentifierMatching\n}): Promise<DraftableExtensionProcess | undefined> {\n  // it would be good if this process didn't require the full local & remote app instances\n  const draftableExtensions = localApp.allExtensions.filter((ext) => ext.isDraftable())\n  if (draftableExtensions.length === 0) {\n    return\n  }\n  const prodEnvIdentifiers = getAppIdentifiers({app: localApp})\n\n  const {extensionIds: remoteExtensionIds, extensions: extensionsUuids} = await ensureDeploymentIdsPresence({\n    app: localApp,\n    partnersApp: remoteApp,\n    appId: apiKey,\n    appName: remoteApp.title,\n    force: true,\n    release: true,\n    token,\n    envIdentifiers: prodEnvIdentifiers,\n  })\n\n  // Update the local app with the remote extension UUIDs.\n  // Extensions are initialized with a random dev UUID when running the dev command\n  // which is sent over WS messages for live reload in dev preview of UI Extensions.\n  localApp.updateExtensionUUIDS(extensionsUuids)\n\n  return {\n    type: 'draftable-extension',\n    prefix: 'extensions',\n    function: pushUpdatesForDraftableExtensions,\n    options: {\n      localApp,\n      apiKey,\n      token,\n      ...options,\n      extensions: draftableExtensions,\n      remoteExtensionIds,\n    },\n  }\n}\n"]}