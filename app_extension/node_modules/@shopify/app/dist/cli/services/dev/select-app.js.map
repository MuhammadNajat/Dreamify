{"version":3,"file":"select-app.js","sourceRoot":"","sources":["../../../../src/cli/services/dev/select-app.ts"],"names":[],"mappings":"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","sourcesContent":["import {appNamePrompt, createAsNewAppPrompt, selectAppPrompt} from '../../prompts/dev.js'\nimport {Organization, OrganizationApp} from '../../models/organization.js'\nimport {fetchAppDetailsFromApiKey, OrganizationAppsResponse} from '../dev/fetch.js'\nimport {CreateAppQuery, CreateAppQuerySchema} from '../../api/graphql/create_app.js'\nimport {getCachedCommandInfo, setCachedCommandInfo} from '../local-storage.js'\nimport {PartnersSession} from '../context/partner-account-info.js'\nimport {partnersRequest} from '@shopify/cli-kit/node/api/partners'\nimport {AbortError} from '@shopify/cli-kit/node/error'\nimport {outputInfo} from '@shopify/cli-kit/node/output'\n\n/**\n * Select an app from env, list or create a new one:\n * If there is no valid app yet, prompt the user to select one from the list or create a new one.\n * If no apps exists, we automatically prompt the user to create a new one.\n * @param app - Current local app information\n * @param apps - List of remote available apps\n * @param orgId - Current Organization\n * @returns The selected (or created) app\n */\nexport async function selectOrCreateApp(\n  localAppName: string,\n  apps: OrganizationAppsResponse,\n  org: Organization,\n  partnersSession: PartnersSession,\n  options?: {\n    isLaunchable?: boolean\n    scopesArray?: string[]\n    directory?: string\n  },\n): Promise<OrganizationApp> {\n  let createNewApp = apps.nodes.length === 0\n  if (!createNewApp) {\n    outputInfo(`\\nBefore proceeding, your project needs to be associated with an app.\\n`)\n    createNewApp = await createAsNewAppPrompt()\n  }\n  if (createNewApp) {\n    return createApp(org, localAppName, partnersSession.token, options)\n  } else {\n    const selectedAppApiKey = await selectAppPrompt(apps, org.id, partnersSession, {directory: options?.directory})\n\n    const data = getCachedCommandInfo()\n    const tomls = (data?.tomls as {[key: string]: unknown}) ?? {}\n\n    if (tomls[selectedAppApiKey]) setCachedCommandInfo({selectedToml: tomls[selectedAppApiKey], askConfigName: false})\n\n    const fullSelectedApp = await fetchAppDetailsFromApiKey(selectedAppApiKey, partnersSession.token)\n    return fullSelectedApp!\n  }\n}\n\n// this is a temporary solution for editions to support https://vault.shopify.io/gsd/projects/31406\n// read more here: https://vault.shopify.io/gsd/projects/31406\nconst MAGIC_URL = 'https://shopify.dev/apps/default-app-home'\nconst MAGIC_REDIRECT_URL = 'https://shopify.dev/apps/default-app-home/api/auth'\n\ninterface AppVars {\n  org: number\n  title: string\n  appUrl: string\n  redir: string[]\n  requestedAccessScopes: string[]\n  type: string\n}\n\nfunction getAppVars(org: Organization, name: string, isLaunchable = true, scopesArray?: string[]): AppVars {\n  if (isLaunchable) {\n    return {\n      org: parseInt(org.id, 10),\n      title: `${name}`,\n      appUrl: 'https://example.com',\n      redir: ['https://example.com/api/auth'],\n      requestedAccessScopes: scopesArray ?? [],\n      type: 'undecided',\n    }\n  } else {\n    return {\n      org: parseInt(org.id, 10),\n      title: `${name}`,\n      appUrl: MAGIC_URL,\n      redir: [MAGIC_REDIRECT_URL],\n      requestedAccessScopes: [],\n      type: 'undecided',\n    }\n  }\n}\n\nexport async function createApp(\n  org: Organization,\n  appName: string,\n  token: string,\n  options?: {\n    isLaunchable?: boolean\n    scopesArray?: string[]\n    directory?: string\n  },\n): Promise<OrganizationApp> {\n  const name = await appNamePrompt(appName)\n\n  const variables = getAppVars(org, name, options?.isLaunchable, options?.scopesArray)\n\n  const query = CreateAppQuery\n  const result: CreateAppQuerySchema = await partnersRequest(query, token, variables)\n  if (result.appCreate.userErrors.length > 0) {\n    const errors = result.appCreate.userErrors.map((error) => error.message).join(', ')\n    throw new AbortError(errors)\n  }\n\n  const createdApp: OrganizationApp = result.appCreate.app\n  createdApp.organizationId = org.id\n  createdApp.newApp = true\n  return createdApp\n}\n"]}