{"version":3,"file":"build.js","sourceRoot":"","sources":["../../../src/cli/services/build.ts"],"names":[],"mappings":"AAAA,OAAO,QAAQ,MAAM,UAAU,CAAA;AAC/B,OAAO,EAAC,sBAAsB,EAAC,MAAM,mBAAmB,CAAA;AACxD,OAAO,EAAC,WAAW,EAAC,MAAM,qBAAqB,CAAA;AAE/C,OAAO,EAAC,gBAAgB,EAAE,aAAa,EAAC,MAAM,0BAA0B,CAAA;AAUxE,KAAK,UAAU,KAAK,CAAC,OAAqB;IACxC,IAAI,CAAC,OAAO,CAAC,4BAA4B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE;QACxE,MAAM,sBAAsB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;KAC1C;IAED,MAAM,GAAG,GAA+B,EAAE,CAAA;IAC1C,IAAI,OAAO,CAAC,MAAM,EAAE;QAClB,GAAG,CAAC,eAAe,GAAG,OAAO,CAAC,MAAM,CAAA;KACrC;IAED,4EAA4E;IAC5E,6FAA6F;IAC7F,MAAM,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IAE9B,MAAM,gBAAgB,CAAC;QACrB,SAAS,EAAE;YACT,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACnC,OAAO;oBACL,MAAM,EAAE,CAAC,KAAK,EAAE,GAAG,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;oBACrD,MAAM,EAAE,KAAK,EAAE,MAAgB,EAAE,MAAgB,EAAE,MAAmB,EAAE,EAAE;wBACxE,MAAM,QAAQ,CAAC,OAAO,EAAE,EAAC,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAC,CAAC,CAAA;oBAC7D,CAAC;iBACF,CAAA;YACH,CAAC,CAAC;YACF,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;gBACvC,OAAO;oBACL,MAAM,EAAE,GAAG,CAAC,eAAe;oBAC3B,MAAM,EAAE,KAAK,EAAE,MAAgB,EAAE,MAAgB,EAAE,MAAmB,EAAE,EAAE;wBACxE,MAAM,GAAG,CAAC,KAAK,CAAC,EAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,WAAW,EAAE,YAAY,EAAC,CAAC,CAAA;oBACxF,CAAC;iBACF,CAAA;YACH,CAAC,CAAC;SACH;QACD,cAAc,EAAE,KAAK;KACtB,CAAC,CAAA;IAEF,aAAa,CAAC,EAAC,QAAQ,EAAE,CAAC,EAAC,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,EAAC,EAAE,QAAQ,CAAC,EAAC,CAAC,CAAA;AACtE,CAAC;AAED,eAAe,KAAK,CAAA","sourcesContent":["import buildWeb from './web.js'\nimport {installAppDependencies} from './dependencies.js'\nimport {installJavy} from './function/build.js'\nimport {AppInterface, Web} from '../models/app/app.js'\nimport {renderConcurrent, renderSuccess} from '@shopify/cli-kit/node/ui'\nimport {AbortSignal} from '@shopify/cli-kit/node/abort'\nimport {Writable} from 'stream'\n\ninterface BuildOptions {\n  app: AppInterface\n  skipDependenciesInstallation: boolean\n  apiKey?: string\n}\n\nasync function build(options: BuildOptions) {\n  if (!options.skipDependenciesInstallation && !options.app.usesWorkspaces) {\n    await installAppDependencies(options.app)\n  }\n\n  const env: {SHOPIFY_API_KEY?: string} = {}\n  if (options.apiKey) {\n    env.SHOPIFY_API_KEY = options.apiKey\n  }\n\n  // Force the download of the javy binary in advance to avoid later problems,\n  // as it might be done multiple times in parallel. https://github.com/Shopify/cli/issues/2877\n  await installJavy(options.app)\n\n  await renderConcurrent({\n    processes: [\n      ...options.app.webs.map((web: Web) => {\n        return {\n          prefix: ['web', ...web.configuration.roles].join('-'),\n          action: async (stdout: Writable, stderr: Writable, signal: AbortSignal) => {\n            await buildWeb('build', {web, stdout, stderr, signal, env})\n          },\n        }\n      }),\n      ...options.app.allExtensions.map((ext) => {\n        return {\n          prefix: ext.localIdentifier,\n          action: async (stdout: Writable, stderr: Writable, signal: AbortSignal) => {\n            await ext.build({stdout, stderr, signal, app: options.app, environment: 'production'})\n          },\n        }\n      }),\n    ],\n    showTimestamps: false,\n  })\n\n  renderSuccess({headline: [{userInput: options.app.name}, 'built!']})\n}\n\nexport default build\n"]}