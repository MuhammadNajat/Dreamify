{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../../../src/cli/services/flow/constants.ts"],"names":[],"mappings":"AAAA,4CAA4C;AAC5C,MAAM,CAAC,MAAM,0BAA0B,GAAG;IACxC,kBAAkB,EAAE,oBAAoB;IACxC,eAAe,EAAE,iBAAiB;IAClC,iBAAiB,EAAE,mBAAmB;IACtC,4BAA4B,EAAE,8BAA8B;IAC5D,qBAAqB,EAAE,uBAAuB;IAC9C,iBAAiB,EAAE,mBAAmB;IACtC,yBAAyB,EAAE,2BAA2B;CACvD,CAAA;AAED,MAAM,CAAC,MAAM,yBAAyB,GAAG;IACvC,UAAU;IACV,OAAO;IACP,SAAS;IACT,oBAAoB;IACpB,aAAa;IACb,SAAS;IACT,iBAAiB;CAClB,CAAA;AAED,MAAM,CAAC,MAAM,kCAAkC,GAAG;IAChD,0BAA0B,CAAC,kBAAkB;IAC7C,0BAA0B,CAAC,eAAe;IAC1C,0BAA0B,CAAC,iBAAiB;IAC5C,0BAA0B,CAAC,iBAAiB;IAC5C,0BAA0B,CAAC,yBAAyB;CACrD,CAAA;AAED,MAAM,CAAC,MAAM,iCAAiC,GAAG;IAC/C,0BAA0B,CAAC,kBAAkB;IAC7C,0BAA0B,CAAC,eAAe;IAC1C,0BAA0B,CAAC,iBAAiB;IAC5C,0BAA0B,CAAC,4BAA4B;IACvD,0BAA0B,CAAC,qBAAqB;IAChD,0BAA0B,CAAC,iBAAiB;IAC5C,0BAA0B,CAAC,yBAAyB;CACrD,CAAA;AAED,MAAM,QAAQ,GAAG;IACf,OAAO,EAAE,SAAS;IAClB,KAAK,EAAE,OAAO;IACd,aAAa,EAAE,uBAAuB;IACtC,GAAG,EAAE,gBAAgB;IACrB,cAAc,EAAE,wBAAwB;IACxC,GAAG,EAAE,KAAK;IACV,OAAO,EAAE,gBAAgB;IACzB,mBAAmB,EAAE,uBAAuB;CAC7C,CAAA;AAED,oEAAoE;AACpE,0DAA0D;AAC1D,6EAA6E;AAC7E,6DAA6D;AAC7D,MAAM,CAAC,MAAM,UAAU,GAAuB;IAC5C,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAU,CAAC;IAC9B,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC;IACzB,CAAC,QAAQ,CAAC,aAAa,EAAE,iBAAiB,CAAC;IAC3C,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC;IACrB,CAAC,QAAQ,CAAC,cAAc,EAAE,kBAAkB,CAAC;IAC7C,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC;IACrB,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC;IAC5B,CAAC,QAAQ,CAAC,mBAAmB,EAAE,uBAAuB,CAAC;CACxD,CAAA;AAED,MAAM,oBAAoB,GAAa;IACrC,QAAQ,CAAC,OAAO;IAChB,QAAQ,CAAC,KAAK;IACd,QAAQ,CAAC,aAAa;IACtB,QAAQ,CAAC,GAAG;IACZ,QAAQ,CAAC,cAAc;IACvB,QAAQ,CAAC,GAAG;IACZ,QAAQ,CAAC,OAAO;CACjB,CAAA;AACD,MAAM,qBAAqB,GAAa;IACtC,QAAQ,CAAC,OAAO;IAChB,QAAQ,CAAC,KAAK;IACd,QAAQ,CAAC,cAAc;IACvB,QAAQ,CAAC,GAAG;IACZ,QAAQ,CAAC,OAAO;IAChB,QAAQ,CAAC,mBAAmB;CAC7B,CAAA;AAED,MAAM,CAAC,MAAM,gBAAgB,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,oBAAoB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAA;AAChG,MAAM,CAAC,MAAM,iBAAiB,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,qBAAqB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAA","sourcesContent":["// Metafield-like types for commerce objects\nexport const SUPPORTED_COMMERCE_OBJECTS = {\n  customer_reference: 'customer_reference',\n  order_reference: 'order_reference',\n  product_reference: 'product_reference',\n  marketing_activity_reference: 'marketing_activity_reference',\n  abandonment_reference: 'abandonment_reference',\n  company_reference: 'company_reference',\n  company_contact_reference: 'company_contact_reference',\n}\n\nexport const PARTNERS_COMMERCE_OBJECTS = [\n  'customer',\n  'order',\n  'product',\n  'marketing_activity',\n  'abandonment',\n  'company',\n  'company_contact',\n]\n\nexport const TRIGGER_SUPPORTED_COMMERCE_OBJECTS = [\n  SUPPORTED_COMMERCE_OBJECTS.customer_reference,\n  SUPPORTED_COMMERCE_OBJECTS.order_reference,\n  SUPPORTED_COMMERCE_OBJECTS.product_reference,\n  SUPPORTED_COMMERCE_OBJECTS.company_reference,\n  SUPPORTED_COMMERCE_OBJECTS.company_contact_reference,\n]\n\nexport const ACTION_SUPPORTED_COMMERCE_OBJECTS = [\n  SUPPORTED_COMMERCE_OBJECTS.customer_reference,\n  SUPPORTED_COMMERCE_OBJECTS.order_reference,\n  SUPPORTED_COMMERCE_OBJECTS.product_reference,\n  SUPPORTED_COMMERCE_OBJECTS.marketing_activity_reference,\n  SUPPORTED_COMMERCE_OBJECTS.abandonment_reference,\n  SUPPORTED_COMMERCE_OBJECTS.company_reference,\n  SUPPORTED_COMMERCE_OBJECTS.company_contact_reference,\n]\n\nconst UI_TYPES = {\n  boolean: 'boolean',\n  email: 'email',\n  multiLineText: 'multi_line_text_field',\n  int: 'number_integer',\n  singleLineText: 'single_line_text_field',\n  url: 'url',\n  decimal: 'number_decimal',\n  schemaTypeReference: 'schema_type_reference',\n}\n\n// Mapping of metafield types to Flow's Partner's Dashboard UI types\n// Contains all types supported by actions and/or triggers\n// Only the `email` type was added since it doesn't exist as a metafield type\n// https://shopify.dev/docs/apps/custom-data/metafields/types\nexport const uiTypesMap: [string, string][] = [\n  [UI_TYPES.boolean, 'checkbox'],\n  [UI_TYPES.email, 'email'],\n  [UI_TYPES.multiLineText, 'text-multi-line'],\n  [UI_TYPES.int, 'int'],\n  [UI_TYPES.singleLineText, 'text-single-line'],\n  [UI_TYPES.url, 'url'],\n  [UI_TYPES.decimal, 'number'],\n  [UI_TYPES.schemaTypeReference, 'schema-type-reference'],\n]\n\nconst supportedActionTypes: string[] = [\n  UI_TYPES.boolean,\n  UI_TYPES.email,\n  UI_TYPES.multiLineText,\n  UI_TYPES.int,\n  UI_TYPES.singleLineText,\n  UI_TYPES.url,\n  UI_TYPES.decimal,\n]\nconst supportedTriggerTypes: string[] = [\n  UI_TYPES.boolean,\n  UI_TYPES.email,\n  UI_TYPES.singleLineText,\n  UI_TYPES.url,\n  UI_TYPES.decimal,\n  UI_TYPES.schemaTypeReference,\n]\n\nexport const actionUiTypesMap = uiTypesMap.filter(([key]) => supportedActionTypes.includes(key))\nexport const triggerUiTypesMap = uiTypesMap.filter(([key]) => supportedTriggerTypes.includes(key))\n"]}