import { RenderAlertOptions } from '@shopify/cli-kit/node/ui';
export interface UseOptions {
    directory: string;
    configName?: string;
    reset?: boolean;
    warningContent?: RenderAlertOptions;
    shouldRenderSuccess?: boolean;
}
export default function use({ directory, configName, warningContent, shouldRenderSuccess, reset, }: UseOptions): Promise<string | undefined>;
interface SaveCurrentConfigOptions {
    configFileName: string;
    directory: string;
}
export declare function saveCurrentConfig({ configFileName, directory }: SaveCurrentConfigOptions): Promise<{
    name: string;
    client_id: string;
    application_url: string;
    embedded: boolean;
    webhooks: {
        api_version: string;
        privacy_compliance?: {
            customer_deletion_url?: string | undefined;
            customer_data_request_url?: string | undefined;
            shop_deletion_url?: string | undefined;
        } | undefined;
        topics?: [string, ...string[]] | undefined;
        endpoint?: string | undefined;
        subscriptions?: {
            topic: string;
            sub_topic?: string | undefined;
            include_fields?: string[] | undefined;
            metafield_namespaces?: string[] | undefined;
            endpoint?: string | undefined;
            path?: string | undefined;
        }[] | undefined;
    };
    access_scopes?: {
        scopes?: string | undefined;
        use_legacy_install_flow?: boolean | undefined;
    } | undefined;
    auth?: {
        redirect_urls: string[];
    } | undefined;
    app_proxy?: {
        url: string;
        subpath: string;
        prefix: string;
    } | undefined;
    pos?: {
        embedded: boolean;
    } | undefined;
    app_preferences?: {
        url: string;
    } | undefined;
    build?: {
        automatically_update_urls_on_dev?: boolean | undefined;
        dev_store_url?: string | undefined;
    } | undefined;
    extension_directories?: string[] | undefined;
    web_directories?: string[] | undefined;
} & {
    path: string;
}>;
export {};
