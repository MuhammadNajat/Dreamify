{"version":3,"file":"version-diff.js","sourceRoot":"","sources":["../../../../src/cli/services/release/version-diff.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,oBAAoB,EAAwB,MAAM,wCAAwC,CAAA;AAClG,OAAO,EAAC,oBAAoB,EAAwB,MAAM,yCAAyC,CAAA;AACnG,OAAO,EAAC,eAAe,EAAC,MAAM,oCAAoC,CAAA;AAClE,OAAO,EAAC,WAAW,EAAC,MAAM,0BAA0B,CAAA;AACpD,OAAO,EAAC,gBAAgB,EAAC,MAAM,6BAA6B,CAAA;AAE5D,MAAM,CAAC,KAAK,UAAU,oBAAoB,CACxC,MAAc,EACd,OAAe,EACf,KAAa;IAKb,MAAM,cAAc,GAAG,MAAM,uBAAuB,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,CAAA;IAC5E,MAAM,EACJ,GAAG,EAAE,EAAC,YAAY,EAAC,GACpB,GAA0B,MAAM,eAAe,CAAC,oBAAoB,EAAE,KAAK,EAAE;QAC5E,MAAM;QACN,SAAS,EAAE,cAAc,CAAC,EAAE;KAC7B,CAAC,CAAA;IAEF,OAAO,EAAC,YAAY,EAAE,cAAc,EAAC,CAAA;AACvC,CAAC;AAED,KAAK,UAAU,uBAAuB,CAAC,MAAc,EAAE,OAAe,EAAE,KAAa;IACnF,IAAI;QACF,MAAM,EACJ,GAAG,EAAE,EAAC,UAAU,EAAC,GAClB,GAA0B,MAAM,eAAe,CAAC,oBAAoB,EAAE,KAAK,EAAE;YAC5E,MAAM;YACN,UAAU,EAAE,OAAO;SACpB,CAAC,CAAA;QACF,OAAO,UAAU,CAAA;KAClB;IAAC,OAAO,GAAG,EAAE;QACZ,WAAW,CAAC;YACV,QAAQ,EAAE,+BAA+B;YACzC,IAAI,EAAE,CAAC,SAAS,EAAE,EAAC,SAAS,EAAE,OAAO,EAAC,EAAE,qBAAqB,CAAC;SAC/D,CAAC,CAAA;QACF,MAAM,IAAI,gBAAgB,EAAE,CAAA;KAC7B;AACH,CAAC","sourcesContent":["import {AppVersionsDiffQuery, AppVersionsDiffSchema} from '../../api/graphql/app_versions_diff.js'\nimport {AppVersionByTagQuery, AppVersionByTagSchema} from '../../api/graphql/app_version_by_tag.js'\nimport {partnersRequest} from '@shopify/cli-kit/node/api/partners'\nimport {renderError} from '@shopify/cli-kit/node/ui'\nimport {AbortSilentError} from '@shopify/cli-kit/node/error'\n\nexport async function versionDiffByVersion(\n  apiKey: string,\n  version: string,\n  token: string,\n): Promise<{\n  versionsDiff: AppVersionsDiffSchema['app']['versionsDiff']\n  versionDetails: AppVersionByTagSchema['app']['appVersion']\n}> {\n  const versionDetails = await versionDetailsByVersion(apiKey, version, token)\n  const {\n    app: {versionsDiff},\n  }: AppVersionsDiffSchema = await partnersRequest(AppVersionsDiffQuery, token, {\n    apiKey,\n    versionId: versionDetails.id,\n  })\n\n  return {versionsDiff, versionDetails}\n}\n\nasync function versionDetailsByVersion(apiKey: string, version: string, token: string) {\n  try {\n    const {\n      app: {appVersion},\n    }: AppVersionByTagSchema = await partnersRequest(AppVersionByTagQuery, token, {\n      apiKey,\n      versionTag: version,\n    })\n    return appVersion\n  } catch (err) {\n    renderError({\n      headline: \"Version couldn't be released.\",\n      body: ['Version', {userInput: version}, 'could not be found.'],\n    })\n    throw new AbortSilentError()\n  }\n}\n"]}