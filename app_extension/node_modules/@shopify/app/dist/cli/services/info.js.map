{"version":3,"file":"info.js","sourceRoot":"","sources":["../../../src/cli/services/info.ts"],"names":[],"mappings":"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","sourcesContent":["import {outputEnv} from './app/env/show.js'\nimport {getAppContext} from './context.js'\nimport {fetchPartnersSession, isServiceAccount, isUserAccount} from './context/partner-account-info.js'\nimport {AppInterface, getAppScopes} from '../models/app/app.js'\nimport {configurationFileNames} from '../constants.js'\nimport {ExtensionInstance} from '../models/extensions/extension-instance.js'\nimport {platformAndArch} from '@shopify/cli-kit/node/os'\nimport {checkForNewVersion} from '@shopify/cli-kit/node/node-package-manager'\nimport {linesToColumns} from '@shopify/cli-kit/common/string'\nimport {relativePath} from '@shopify/cli-kit/node/path'\nimport {\n  OutputMessage,\n  outputContent,\n  outputToken,\n  formatSection,\n  stringifyMessage,\n  getOutputUpdateCLIReminder,\n} from '@shopify/cli-kit/node/output'\n\nexport type Format = 'json' | 'text'\nexport interface InfoOptions {\n  format: Format\n  configName?: string\n  /** When true the command outputs the env. variables necessary to deploy and run web/ */\n  webEnv: boolean\n}\ninterface Configurable {\n  type: string\n  externalType: string\n}\n\nexport async function info(app: AppInterface, options: InfoOptions): Promise<OutputMessage> {\n  if (options.webEnv) {\n    return infoWeb(app, options)\n  } else {\n    return infoApp(app, options)\n  }\n}\n\nexport async function infoWeb(app: AppInterface, {format}: InfoOptions): Promise<OutputMessage> {\n  return outputEnv(app, format)\n}\n\nexport async function infoApp(app: AppInterface, options: InfoOptions): Promise<OutputMessage> {\n  if (options.format === 'json') {\n    return outputContent`${JSON.stringify(app, null, 2)}`\n  } else {\n    const appInfo = new AppInfo(app, options)\n    return appInfo.output()\n  }\n}\n\nconst UNKNOWN_TEXT = outputContent`${outputToken.italic('unknown')}`.value\nconst NOT_CONFIGURED_TEXT = outputContent`${outputToken.italic('Not yet configured')}`.value\n\nclass AppInfo {\n  private app: AppInterface\n  private options: InfoOptions\n\n  constructor(app: AppInterface, options: InfoOptions) {\n    this.app = app\n    this.options = options\n  }\n\n  async output(): Promise<string> {\n    const sections: [string, string][] = [\n      await this.devConfigsSection(),\n      this.projectSettingsSection(),\n      await this.appComponentsSection(),\n      await this.systemInfoSection(),\n    ]\n    return sections.map((sectionContents: [string, string]) => formatSection(...sectionContents)).join('\\n\\n')\n  }\n\n  async devConfigsSection(): Promise<[string, string]> {\n    const title = `Current app configuration`\n    const partnersSession = await fetchPartnersSession()\n    const {cachedInfo} = await getAppContext({\n      partnersSession,\n      directory: this.app.directory,\n      reset: false,\n      configName: this.options.configName,\n      promptLinkingApp: false,\n    })\n\n    const postscript = outputContent`💡 To change these, run ${outputToken.packagejsonScript(\n      this.app.packageManager,\n      'dev',\n      '--reset',\n    )}`.value\n\n    let updateUrls\n    if (cachedInfo?.updateURLs === undefined) {\n      updateUrls = NOT_CONFIGURED_TEXT\n    } else {\n      updateUrls = cachedInfo.updateURLs ? 'Yes' : 'No'\n    }\n\n    let partnersAccountInfo = ['Partners account', 'unknown']\n    if (isServiceAccount(partnersSession.accountInfo)) {\n      partnersAccountInfo = ['Service account', partnersSession.accountInfo.orgName]\n    } else if (isUserAccount(partnersSession.accountInfo)) {\n      partnersAccountInfo = ['Partners account', partnersSession.accountInfo.email]\n    }\n\n    const lines = [\n      ['Configuration file', cachedInfo?.configFile || configurationFileNames.app],\n      ['App name', cachedInfo?.title || NOT_CONFIGURED_TEXT],\n      ['Client ID', cachedInfo?.appId || NOT_CONFIGURED_TEXT],\n      ['Access scopes', getAppScopes(this.app.configuration)],\n      ['Dev store', cachedInfo?.storeFqdn || NOT_CONFIGURED_TEXT],\n      ['Update URLs', updateUrls],\n      partnersAccountInfo,\n    ]\n    return [title, `${linesToColumns(lines)}\\n\\n${postscript}`]\n  }\n\n  projectSettingsSection(): [string, string] {\n    const title = 'Your Project'\n    const lines = [['Root location', this.app.directory]]\n    return [title, linesToColumns(lines)]\n  }\n\n  async appComponentsSection(): Promise<[string, string]> {\n    const title = 'Directory Components'\n\n    let body = this.webComponentsSection()\n\n    function augmentWithExtensions<TExtension extends Configurable>(\n      extensions: TExtension[],\n      outputFormatter: (extension: TExtension) => string,\n    ) {\n      const types = new Set(extensions.map((ext) => ext.type))\n      types.forEach((extensionType: string) => {\n        const relevantExtensions = extensions.filter((extension: TExtension) => extension.type === extensionType)\n        if (relevantExtensions[0]) {\n          body += `\\n\\n${outputContent`${outputToken.subheading(relevantExtensions[0].externalType)}`.value}`\n          relevantExtensions.forEach((extension: TExtension) => {\n            body += `${outputFormatter(extension)}`\n          })\n        }\n      })\n    }\n\n    augmentWithExtensions(this.app.allExtensions, this.extensionSubSection.bind(this))\n\n    if (this.app.errors?.isEmpty() === false) {\n      body += `\\n\\n${outputContent`${outputToken.subheading('Extensions with errors')}`.value}`\n      this.app.allExtensions.forEach((extension) => {\n        body += `${this.invalidExtensionSubSection(extension)}`\n      })\n    }\n    return [title, body]\n  }\n\n  webComponentsSection(): string {\n    const errors: OutputMessage[] = []\n    const subtitle = [outputContent`${outputToken.subheading('web')}`.value]\n    const toplevel = ['📂 web', '']\n    const sublevels: [string, string][] = []\n    this.app.webs.forEach((web) => {\n      if (web.configuration) {\n        if (web.configuration.name) {\n          const {name, roles} = web.configuration\n          sublevels.push([`    📂 ${name} (${roles.join(',')})`, relativePath(this.app.directory, web.directory)])\n        } else {\n          web.configuration.roles.forEach((role) => {\n            sublevels.push([`    📂 ${role}`, relativePath(this.app.directory, web.directory)])\n          })\n        }\n      } else {\n        sublevels.push([`  📂 ${UNKNOWN_TEXT}`, relativePath(this.app.directory, web.directory)])\n      }\n      if (this.app.errors) {\n        const error = this.app.errors.getError(`${web.directory}/${configurationFileNames.web}`)\n        if (error) errors.push(error)\n      }\n    })\n    let errorContent = `\\n${errors.map(this.formattedError).join('\\n')}`\n    if (errorContent.trim() === '') errorContent = ''\n\n    return `${subtitle}\\n${linesToColumns([toplevel, ...sublevels])}${errorContent}`\n  }\n\n  extensionSubSection(extension: ExtensionInstance): string {\n    const config = extension.configuration\n    const details = [\n      [`📂 ${extension.handle}`, relativePath(this.app.directory, extension.directory)],\n      ['     config file', relativePath(extension.directory, extension.configuration.path)],\n    ]\n    if (config && config.metafields?.length) {\n      details.push(['     metafields', `${config.metafields.length}`])\n    }\n\n    return `\\n${linesToColumns(details)}`\n  }\n\n  invalidExtensionSubSection(extension: ExtensionInstance): string {\n    const error = this.app.errors?.getError(extension.configuration.path)\n    if (!error) return ''\n    const details = [\n      [`📂 ${extension.handle}`, relativePath(this.app.directory, extension.directory)],\n      ['     config file', relativePath(extension.directory, extension.configuration.path)],\n    ]\n    const formattedError = this.formattedError(error)\n    return `\\n${linesToColumns(details)}\\n${formattedError}`\n  }\n\n  formattedError(str: OutputMessage): string {\n    const [errorFirstLine, ...errorRemainingLines] = stringifyMessage(str).split('\\n')\n    const errorLines = [`! ${errorFirstLine}`, ...errorRemainingLines.map((line) => `  ${line}`)]\n    return outputContent`${outputToken.errorText(errorLines.join('\\n'))}`.value\n  }\n\n  async systemInfoSection(): Promise<[string, string]> {\n    const title = 'Tooling and System'\n    const {platform, arch} = platformAndArch()\n    const versionUpgradeMessage = await this.versionUpgradeMessage()\n    const cliVersionInfo = [this.currentCliVersion(), versionUpgradeMessage].join(' ').trim()\n    const lines: string[][] = [\n      ['Shopify CLI', cliVersionInfo],\n      ['Package manager', this.app.packageManager],\n      ['OS', `${platform}-${arch}`],\n      ['Shell', process.env.SHELL || 'unknown'],\n      ['Node version', process.version],\n    ]\n    return [title, `${linesToColumns(lines)}`]\n  }\n\n  currentCliVersion(): string {\n    return this.app.nodeDependencies['@shopify/cli']!\n  }\n\n  async versionUpgradeMessage(): Promise<string> {\n    const cliDependency = '@shopify/cli'\n    const newestVersion = await checkForNewVersion(cliDependency, this.currentCliVersion())\n    if (newestVersion) {\n      return getOutputUpdateCLIReminder(this.app.packageManager, newestVersion)\n    }\n    return ''\n  }\n}\n"]}