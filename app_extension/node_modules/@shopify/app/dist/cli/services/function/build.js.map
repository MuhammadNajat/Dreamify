{"version":3,"file":"build.js","sourceRoot":"","sources":["../../../../src/cli/services/function/build.ts"],"names":[],"mappings":"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","sourcesContent":["import {ExtensionInstance} from '../../models/extensions/extension-instance.js'\nimport {FunctionConfigType} from '../../models/extensions/specifications/function.js'\nimport {AppInterface} from '../../models/app/app.js'\nimport {EsbuildEnvVarRegex} from '../../constants.js'\nimport {hyphenate, camelize} from '@shopify/cli-kit/common/string'\nimport {outputDebug} from '@shopify/cli-kit/node/output'\nimport {exec} from '@shopify/cli-kit/node/system'\nimport {joinPath} from '@shopify/cli-kit/node/path'\nimport {build as esBuild, BuildResult, BuildOptions} from 'esbuild'\nimport {findPathUp, inTemporaryDirectory, writeFile} from '@shopify/cli-kit/node/fs'\nimport {AbortSignal} from '@shopify/cli-kit/node/abort'\nimport {renderTasks} from '@shopify/cli-kit/node/ui'\nimport {pickBy} from '@shopify/cli-kit/common/object'\nimport {runWithTimer} from '@shopify/cli-kit/node/metadata'\nimport {Writable} from 'stream'\n\ninterface JSFunctionBuildOptions {\n  stdout: Writable\n  stderr: Writable\n  signal?: AbortSignal\n  app: AppInterface\n  // we want to use tasks when this is a primary command, i.e. 'shopify app function build',\n  // but we don't want the fancy UI when this is running as part of 'shopify app build'.\n  useTasks?: boolean\n}\n\nexport async function buildJSFunction(fun: ExtensionInstance<FunctionConfigType>, options: JSFunctionBuildOptions) {\n  const exports = jsExports(fun)\n  const javyBuilder: JavyBuilder = exports.length === 0 ? DefaultJavyBuilder : new ExportJavyBuilder(exports)\n\n  if (options.useTasks) {\n    return buildJSFunctionWithTasks(fun, options, javyBuilder)\n  } else {\n    return buildJSFunctionWithoutTasks(fun, options, javyBuilder)\n  }\n}\n\nasync function buildJSFunctionWithoutTasks(\n  fun: ExtensionInstance<FunctionConfigType>,\n  options: JSFunctionBuildOptions,\n  builder: JavyBuilder,\n) {\n  if (!options.signal?.aborted) {\n    options.stdout.write(`Building function ${fun.localIdentifier}...`)\n    options.stdout.write(`Building GraphQL types...\\n`)\n    await buildGraphqlTypes(fun, options)\n  }\n  if (!options.signal?.aborted) {\n    options.stdout.write(`Bundling JS function...\\n`)\n    await builder.bundle(fun, options)\n  }\n  if (!options.signal?.aborted) {\n    options.stdout.write(`Running javy...\\n`)\n    await builder.compile(fun, options)\n  }\n  if (!options.signal?.aborted) {\n    options.stdout.write(`Done!\\n`)\n  }\n}\n\nexport async function buildJSFunctionWithTasks(\n  fun: ExtensionInstance<FunctionConfigType>,\n  options: JSFunctionBuildOptions,\n  builder: JavyBuilder,\n) {\n  await renderTasks([\n    {\n      title: 'Building GraphQL types',\n      task: async () => {\n        await buildGraphqlTypes(fun, options)\n      },\n    },\n    {\n      title: 'Bundling JS function',\n      task: async () => {\n        await builder.bundle(fun, options)\n      },\n    },\n    {\n      title: 'Running javy',\n      task: async () => {\n        await builder.compile(fun, options)\n      },\n    },\n  ])\n}\n\nexport async function buildGraphqlTypes(\n  fun: {directory: string; isJavaScript: boolean},\n  options: JSFunctionBuildOptions,\n) {\n  if (!fun.isJavaScript) {\n    throw new Error('GraphQL types can only be built for JavaScript functions')\n  }\n\n  return runWithTimer('cmd_all_timing_network_ms')(async () => {\n    return exec('npm', ['exec', '--', 'graphql-code-generator', '--config', 'package.json'], {\n      cwd: fun.directory,\n      stderr: options.stderr,\n      signal: options.signal,\n    })\n  })\n}\n\nexport async function bundleExtension(\n  fun: ExtensionInstance<FunctionConfigType>,\n  options: JSFunctionBuildOptions,\n  processEnv = process.env,\n) {\n  const entryPoint = await findPathUp('node_modules/@shopify/shopify_function/index.ts', {\n    type: 'file',\n    cwd: fun.directory,\n  })\n  if (!entryPoint) {\n    throw new Error(\n      \"Could not find the Shopify Function runtime. Make sure you have '@shopify/shopify_function' installed\",\n    )\n  }\n  if (!fun.entrySourceFilePath) {\n    throw new Error('Could not find your function entry point. It must be in src/index.js or src/index.ts')\n  }\n\n  const esbuildOptions = {\n    ...getESBuildOptions(fun.directory, fun.entrySourceFilePath, options.app.dotenv?.variables ?? {}, processEnv),\n    entryPoints: [entryPoint],\n  }\n\n  return esBuild(esbuildOptions)\n}\n\nfunction getESBuildOptions(\n  directory: string,\n  userFunction: string,\n  appEnv: {[variable: string]: string | undefined},\n  processEnv = process.env,\n): Parameters<typeof esBuild>[0] {\n  const validEnvs = pickBy(processEnv, (value, key) => EsbuildEnvVarRegex.test(key) && value)\n\n  const env: {[variable: string]: string | undefined} = {...appEnv, ...validEnvs}\n  const define = Object.keys(env || {}).reduce(\n    (acc, key) => ({\n      ...acc,\n      [`process.env.${key}`]: JSON.stringify(env[key]),\n    }),\n    {},\n  )\n\n  const esbuildOptions: Parameters<typeof esBuild>[0] = {\n    outfile: joinPath(directory, 'dist/function.js'),\n    alias: {\n      'user-function': userFunction,\n    },\n    define,\n    logLevel: 'silent',\n    bundle: true,\n    legalComments: 'none',\n    target: 'es2022',\n    format: 'esm',\n  }\n  return esbuildOptions\n}\n\nexport async function runJavy(\n  fun: ExtensionInstance<FunctionConfigType>,\n  options: JSFunctionBuildOptions,\n  extra: string[] = [],\n) {\n  const args = ['exec', '--', 'javy', 'compile', '-d', '-o', fun.outputPath, 'dist/function.js', ...extra]\n\n  return exec('npm', args, {\n    cwd: fun.directory,\n    stdout: 'inherit',\n    stderr: 'inherit',\n    signal: options.signal,\n  })\n}\n\nexport async function installJavy(app: AppInterface) {\n  const javyRequired = app.allExtensions.some((ext) => ext.features.includes('function') && ext.isJavaScript)\n  if (javyRequired) {\n    await exec('npm', ['exec', '--', 'javy', '--version'], {cwd: app.directory})\n  }\n}\n\ninterface FunctionRunnerOptions {\n  input?: string\n  json: boolean\n  export?: string\n}\n\nexport async function runFunctionRunner(fun: ExtensionInstance<FunctionConfigType>, options: FunctionRunnerOptions) {\n  const outputAsJson = options.json ? ['--json'] : []\n  const withInput = options.input ? ['--input', options.input] : []\n  const exportName = options.export ? ['--export', options.export] : []\n  return exec(\n    'npm',\n    ['exec', '--', 'function-runner', '-f', fun.outputPath, ...withInput, ...outputAsJson, ...exportName],\n    {\n      cwd: fun.directory,\n      stdin: 'inherit',\n      stdout: 'inherit',\n      stderr: 'inherit',\n    },\n  )\n}\n\nexport interface JavyBuilder {\n  bundle(\n    fun: ExtensionInstance<FunctionConfigType>,\n    options: JSFunctionBuildOptions,\n  ): Promise<BuildResult<BuildOptions>>\n  compile(fun: ExtensionInstance<FunctionConfigType>, options: JSFunctionBuildOptions): Promise<void>\n}\n\nexport const DefaultJavyBuilder: JavyBuilder = {\n  async bundle(fun: ExtensionInstance<FunctionConfigType>, options: JSFunctionBuildOptions) {\n    return bundleExtension(fun, options)\n  },\n\n  async compile(fun: ExtensionInstance<FunctionConfigType>, options: JSFunctionBuildOptions) {\n    return runJavy(fun, options)\n  },\n}\n\nconst JAVY_WORLD = 'shopify-function'\nexport class ExportJavyBuilder implements JavyBuilder {\n  exports: string[]\n\n  constructor(exports: string[]) {\n    this.exports = exports\n  }\n\n  async bundle(fun: ExtensionInstance<FunctionConfigType>, options: JSFunctionBuildOptions, processEnv = process.env) {\n    if (!fun.entrySourceFilePath) {\n      throw new Error('Could not find your function entry point. It must be in src/index.js or src/index.ts')\n    }\n\n    const contents = this.entrypointContents\n    outputDebug('Generating dist/function.js using generated module:')\n    outputDebug(contents)\n\n    const esbuildOptions: Parameters<typeof esBuild>[0] = {\n      ...getESBuildOptions(fun.directory, fun.entrySourceFilePath, options.app.dotenv?.variables ?? {}, processEnv),\n      stdin: {\n        contents,\n        loader: 'ts',\n        resolveDir: fun.directory,\n      },\n    }\n    return esBuild(esbuildOptions)\n  }\n\n  async compile(fun: ExtensionInstance<FunctionConfigType>, options: JSFunctionBuildOptions) {\n    const witContent = this.wit\n    outputDebug('Generating world to use with Javy:')\n    outputDebug(witContent)\n\n    return inTemporaryDirectory(async (dir) => {\n      const witPath = joinPath(dir, 'javy-world.wit')\n      await writeFile(witPath, witContent)\n\n      return runJavy(fun, options, ['--wit', witPath, '-n', JAVY_WORLD])\n    })\n  }\n\n  get wit() {\n    // % escapes the name to avoid conflict with reserved words, if any\n    const witExports = this.exports.map((name) => `export %${hyphenate(name)}: func()`)\n    return `package function:impl\n\nworld ${JAVY_WORLD} {\n  ${witExports.join('\\n  ')}\n}`\n  }\n\n  get entrypointContents() {\n    const prelude = `\nimport __runFunction from \"@shopify/shopify_function/run\"`\n\n    const exports = this.exports.map((name) => {\n      const identifier = camelize(name)\n      const alias = camelize(`run-${name}`)\n      return `\nimport { ${identifier} as ${alias} } from \"user-function\"\nexport function ${identifier}() { return __runFunction(${alias}) }`\n    })\n\n    return `${prelude}\\n${exports.join('\\n')}`\n  }\n}\n\nexport function jsExports(fun: ExtensionInstance<FunctionConfigType>) {\n  const targets = fun.configuration.targeting || []\n  const withoutExport = targets.filter((target) => !target.export)\n  const withExport = targets.filter((target) => Boolean(target.export))\n\n  if (targets.length > 1 && withoutExport.length > 0) {\n    throw new Error(`Can't infer export name for targets:\n${withoutExport.map(({target}) => `- '${target}'`).join('\\n')}\nAll targets must have an export when multiple targets are present.`)\n  }\n\n  const withInvalidExportName = withExport.filter((target) => !target.export!.match(/^[a-z0-9-]+$/))\n  if (withInvalidExportName.length > 0) {\n    const message = []\n    const invalidExportNames = withInvalidExportName.map((target) => `'${target.export!}'`)\n    message.push(`Invalid export names: ${invalidExportNames.join(', ')}.\n\nThe TOML's exports must be kebab-case (lowercase, hyphen or numbers) to comply with WebAssembly's Component Model.\n\nJavaScript exports with camelCase names are automatically mapped to kebab-case Wasm exports.\\n`)\n    message.push('Suggested TOML changes:')\n    withInvalidExportName.forEach((target) => {\n      const name = target.export!\n      message.push(`- Change export for '${target.target}' to '${hyphenate(name)}'.`)\n    })\n    throw new Error(message.join('\\n'))\n  }\n\n  return withExport.map((target) => target.export!)\n}\n"]}