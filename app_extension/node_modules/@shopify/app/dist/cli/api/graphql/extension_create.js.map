{"version":3,"file":"extension_create.js","sourceRoot":"","sources":["../../../../src/cli/api/graphql/extension_create.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,GAAG,EAAC,MAAM,iBAAiB,CAAA;AAEnC,MAAM,CAAC,MAAM,oBAAoB,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAiCtC,CAAA","sourcesContent":["import {gql} from 'graphql-request'\n\nexport const ExtensionCreateQuery = gql`\n  mutation ExtensionCreate(\n    $apiKey: String!\n    $type: ExtensionType!\n    $title: String!\n    $config: JSON!\n    $context: String\n    $handle: String\n  ) {\n    extensionCreate(\n      input: {apiKey: $apiKey, type: $type, title: $title, config: $config, context: $context, handle: $handle}\n    ) {\n      extensionRegistration {\n        id\n        uuid\n        type\n        title\n        draftVersion {\n          config\n          registrationId\n          lastUserInteractionAt\n          validationErrors {\n            field\n            message\n          }\n        }\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`\n\nexport interface ExtensionCreateVariables {\n  apiKey: string\n  type: string\n  title: string\n  config: string\n  context?: string | null\n  handle: string\n}\n\nexport interface ExtensionCreateSchema {\n  extensionCreate: {\n    extensionRegistration: {\n      id: string\n      uuid: string\n      type: string\n      title: string\n      draftVersion: {\n        config: string\n        registrationId: string\n        lastUserInteractionAt: string\n        validationErrors: {\n          field: string[]\n          message: string\n        }[]\n      }\n    }\n    userErrors: {\n      field: string[]\n      message: string\n    }[]\n  }\n}\n"]}