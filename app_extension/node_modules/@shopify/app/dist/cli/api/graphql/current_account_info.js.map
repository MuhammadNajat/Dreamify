{"version":3,"file":"current_account_info.js","sourceRoot":"","sources":["../../../../src/cli/api/graphql/current_account_info.ts"],"names":[],"mappings":"AACA,OAAO,EAAC,eAAe,EAAC,MAAM,oCAAoC,CAAA;AAClE,OAAO,EAAC,UAAU,EAAC,MAAM,6BAA6B,CAAA;AACtD,OAAO,EAAC,GAAG,EAAC,MAAM,iBAAiB,CAAA;AAEnC,MAAM,uBAAuB,GAAG,GAAG,CAAA;;;;;;;;;;;;CAYlC,CAAA;AAWD,MAAM,CAAC,KAAK,UAAU,oBAAoB,CAAC,KAAa;IACtD,MAAM,EAAC,kBAAkB,EAAC,GAAG,MAAM,eAAe,CAA2B,uBAAuB,EAAE,KAAK,CAAC,CAAA;IAE5G,IAAI,CAAC,kBAAkB,EAAE;QACvB,MAAM,IAAI,UAAU,CAAC,oCAAoC,CAAC,CAAA;KAC3D;IAED,OAAO,cAAc,CAAC,kBAAkB,CAAC,CAAA;AAC3C,CAAC;AAED,SAAS,cAAc,CAAC,WAA8B;IACpD,IAAI,WAAW,CAAC,UAAU,KAAK,aAAa,EAAE;QAC5C,OAAO;YACL,IAAI,EAAE,aAAa;YACnB,KAAK,EAAE,WAAW,CAAC,KAAM;SAC1B,CAAA;KACF;SAAM,IAAI,WAAW,CAAC,UAAU,KAAK,gBAAgB,EAAE;QACtD,OAAO;YACL,IAAI,EAAE,gBAAgB;YACtB,OAAO,EAAE,WAAW,CAAC,OAAQ;SAC9B,CAAA;KACF;SAAM;QACL,OAAO,EAAC,IAAI,EAAE,gBAAgB,EAAC,CAAA;KAChC;AACH,CAAC","sourcesContent":["import {AccountInfo} from '../../services/context/partner-account-info.js'\nimport {partnersRequest} from '@shopify/cli-kit/node/api/partners'\nimport {AbortError} from '@shopify/cli-kit/node/error'\nimport {gql} from 'graphql-request'\n\nconst CurrentAccountInfoQuery = gql`\n  query currentAccountInfo {\n    currentAccountInfo {\n      __typename\n      ... on ServiceAccount {\n        orgName\n      }\n      ... on UserAccount {\n        email\n      }\n    }\n  }\n`\ninterface AccountInfoSchema {\n  __typename: string\n  email?: string\n  orgName?: string\n}\n\ninterface CurrentAccountInfoSchema {\n  currentAccountInfo: AccountInfoSchema\n}\n\nexport async function geCurrentAccountInfo(token: string) {\n  const {currentAccountInfo} = await partnersRequest<CurrentAccountInfoSchema>(CurrentAccountInfoQuery, token)\n\n  if (!currentAccountInfo) {\n    throw new AbortError('Unable to get current user account')\n  }\n\n  return mapAccountInfo(currentAccountInfo)\n}\n\nfunction mapAccountInfo(accountInfo: AccountInfoSchema): AccountInfo {\n  if (accountInfo.__typename === 'UserAccount') {\n    return {\n      type: 'UserAccount',\n      email: accountInfo.email!,\n    }\n  } else if (accountInfo.__typename === 'ServiceAccount') {\n    return {\n      type: 'ServiceAccount',\n      orgName: accountInfo.orgName!,\n    }\n  } else {\n    return {type: 'UnknownAccount'}\n  }\n}\n"]}