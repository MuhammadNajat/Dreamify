{"version":3,"file":"release.js","sourceRoot":"","sources":["../../../src/cli/prompts/release.ts"],"names":[],"mappings":"AACA,OAAO,QAAQ,MAAM,gBAAgB,CAAA;AACrC,OAAO,EAAC,gBAAgB,EAAC,MAAM,6BAA6B,CAAA;AAC5D,OAAO,EAAC,wBAAwB,EAAE,iCAAiC,EAAC,MAAM,0BAA0B,CAAA;AAEpG,MAAM,CAAC,KAAK,UAAU,oBAAoB,CACxC,OAAe,EACf,YAA0D;IAE1D,MAAM,SAAS,GAAG,EAAE,CAAA;IACpB,MAAM,UAAU,GAAG,CAAC,GAAG,YAAY,CAAC,KAAK,EAAE,GAAG,YAAY,CAAC,OAAO,CAAC,CAAA;IAEnE,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;QACzB,SAAS,CAAC,IAAI,CAAC;YACb,MAAM,EAAE,WAAW;YACnB,KAAK,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,iBAAiB,CAAC;YACjE,MAAM,EAAE,GAAG;SACZ,CAAC,CAAA;KACH;IAED,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;QACnC,SAAS,CAAC,IAAI,CAAC;YACb,MAAM,EAAE,UAAU;YAClB,UAAU,EAAE,4CAA4C;YACxD,KAAK,EAAE,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,iBAAiB,CAAC;YAC3E,MAAM,EAAE,GAAG;SACZ,CAAC,CAAA;KACH;IACD,IAAI,OAAgB,CAAA;IACpB,MAAM,OAAO,GAAG,2BAA2B,OAAO,GAAG,CAAA;IACrD,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;QACnC,OAAO,GAAG,MAAM,iCAAiC,CAAC,EAAC,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,OAAO,EAAC,CAAC,CAAA;KAC/F;SAAM;QACL,OAAO,GAAG,MAAM,wBAAwB,CAAC;YACvC,OAAO;YACP,SAAS;YACT,mBAAmB,EAAE,2BAA2B;YAChD,mBAAmB,EAAE,YAAY;SAClC,CAAC,CAAA;KACH;IAED,MAAM,QAAQ,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC,CAAC;QACtC,6BAA6B,EAAE,CAAC,OAAO;KACxC,CAAC,CAAC,CAAA;IAEH,IAAI,CAAC,OAAO,EAAE;QACZ,MAAM,IAAI,gBAAgB,EAAE,CAAA;KAC7B;AACH,CAAC","sourcesContent":["import {AppVersionsDiffSchema} from '../api/graphql/app_versions_diff.js'\nimport metadata from '../metadata.js'\nimport {AbortSilentError} from '@shopify/cli-kit/node/error'\nimport {renderConfirmationPrompt, renderDangerousConfirmationPrompt} from '@shopify/cli-kit/node/ui'\n\nexport async function confirmReleasePrompt(\n  appName: string,\n  versionsDiff: AppVersionsDiffSchema['app']['versionsDiff'],\n) {\n  const infoTable = []\n  const extensions = [...versionsDiff.added, ...versionsDiff.updated]\n\n  if (extensions.length > 0) {\n    infoTable.push({\n      header: 'Includes:',\n      items: extensions.map((extension) => extension.registrationTitle),\n      bullet: '+',\n    })\n  }\n\n  if (versionsDiff.removed.length > 0) {\n    infoTable.push({\n      header: 'Removes:',\n      helperText: 'This can permanently delete app user data.',\n      items: versionsDiff.removed.map((extension) => extension.registrationTitle),\n      bullet: '-',\n    })\n  }\n  let confirm: boolean\n  const message = `Release this version of ${appName}?`\n  if (versionsDiff.removed.length > 0) {\n    confirm = await renderDangerousConfirmationPrompt({message, infoTable, confirmation: appName})\n  } else {\n    confirm = await renderConfirmationPrompt({\n      message,\n      infoTable,\n      confirmationMessage: 'Yes, release this version',\n      cancellationMessage: 'No, cancel',\n    })\n  }\n\n  await metadata.addPublicMetadata(() => ({\n    cmd_release_confirm_cancelled: !confirm,\n  }))\n\n  if (!confirm) {\n    throw new AbortSilentError()\n  }\n}\n"]}