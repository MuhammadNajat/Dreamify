{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../src/cli/prompts/config.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-await-in-loop */\nimport {PushOptions} from '../services/app/config/push.js'\nimport {AppSchema, CurrentAppConfiguration, getAppScopesArray} from '../models/app/app.js'\nimport {mergeAppConfiguration} from '../services/app/config/link.js'\nimport {OrganizationApp} from '../models/organization.js'\nimport {App} from '../api/graphql/get_config.js'\nimport {rewriteConfiguration} from '../services/app/write-app-configuration-file.js'\nimport {\n  RenderTextPromptOptions,\n  renderConfirmationPrompt,\n  renderInfo,\n  renderSelectPrompt,\n  renderTextPrompt,\n} from '@shopify/cli-kit/node/ui'\nimport {fileExists, glob} from '@shopify/cli-kit/node/fs'\nimport {basename, joinPath} from '@shopify/cli-kit/node/path'\nimport {slugify} from '@shopify/cli-kit/common/string'\nimport {err, ok, Result} from '@shopify/cli-kit/node/result'\nimport {encodeToml} from '@shopify/cli-kit/node/toml'\nimport {deepCompare, deepDifference} from '@shopify/cli-kit/common/object'\nimport colors from '@shopify/cli-kit/node/colors'\n\nexport async function selectConfigName(directory: string, defaultName = ''): Promise<string> {\n  const namePromptOptions = buildTextPromptOptions(defaultName)\n  let configName = slugify(await renderTextPrompt(namePromptOptions))\n\n  while (await fileExists(joinPath(directory, `shopify.app.${configName}.toml`))) {\n    const askAgain = await renderConfirmationPrompt({\n      message: `Configuration file shopify.app.${configName}.toml already exists. Do you want to choose a different configuration name?`,\n      confirmationMessage: \"Yes, I'll choose a different name\",\n      cancellationMessage: 'No, overwrite my existing configuration file',\n    })\n\n    if (askAgain) {\n      configName = slugify(await renderTextPrompt(namePromptOptions))\n    } else {\n      break\n    }\n  }\n\n  return configName\n}\n\nexport async function selectConfigFile(directory: string): Promise<Result<string, string>> {\n  const files = (await glob(joinPath(directory, 'shopify.app*.toml'))).map((path) => basename(path))\n\n  if (files.length === 0) return err('Could not find any shopify.app.toml file in the directory.')\n  if (files.length === 1) return ok(files[0]!)\n\n  const chosen = await renderSelectPrompt({\n    message: 'Configuration file',\n    choices: files.map((file) => {\n      return {label: file, value: file}\n    }),\n  })\n\n  return ok(chosen)\n}\n\nfunction buildTextPromptOptions(defaultValue: string): RenderTextPromptOptions {\n  return {\n    message: 'Configuration file name:',\n    defaultValue,\n    validate,\n    preview: (value) => `shopify.app.${colors.cyan(slugify(value))}.toml will be generated in your root directory`,\n  }\n}\n\nexport function validate(value: string): string | undefined {\n  const result = slugify(value)\n  if (result.length === 0) return `The file name can't be empty.`\n  // Max filename size for Windows/Mac including the prefix/postfix\n  if (result.length > 238) return 'The file name is too long.'\n}\n\nexport async function confirmPushChanges(options: PushOptions, app: App) {\n  if (options.force) return true\n\n  const configuration = options.configuration as CurrentAppConfiguration\n  const remoteConfiguration = mergeAppConfiguration(configuration, app as OrganizationApp)\n\n  if (configuration.access_scopes?.scopes)\n    configuration.access_scopes.scopes = getAppScopesArray(configuration).join(',')\n\n  const [updated, baseline] = deepDifference(\n    {...(rewriteConfiguration(AppSchema, configuration) as object), build: undefined},\n    {...(rewriteConfiguration(AppSchema, remoteConfiguration) as object), build: undefined},\n  )\n\n  if (deepCompare(updated, baseline)) {\n    renderInfo({headline: 'No changes to update.'})\n    return false\n  }\n\n  const baselineContent = encodeToml(baseline)\n  const updatedContent = encodeToml(updated)\n\n  return renderConfirmationPrompt({\n    message: ['Make the following changes to your remote configuration?'],\n    gitDiff: {\n      baselineContent,\n      updatedContent,\n    },\n    defaultValue: true,\n    confirmationMessage: 'Yes, confirm changes',\n    cancellationMessage: 'No, cancel',\n  })\n}\n"]}