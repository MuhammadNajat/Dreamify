.Polaris-CheckableButton_1a7z5 { color: var(--p-color-text); font-size: var(--p-font-size-300); font-weight: var(--p-font-weight-medium); line-height: var(--p-font-line-height-400); letter-spacing: initial; display: flex; align-items: center; gap: calc(var(--p-space-300) + var(--p-space-025)); margin: 0; cursor: pointer; -webkit-user-select: none; user-select: none; text-decoration: none; text-align: left; border-radius: var(--p-border-radius-100); width: auto; min-height: auto; min-width: auto; height: 100%; }

.Polaris-CheckableButton_1a7z5 svg { fill: var(--p-color-text-brand-on-bg-fill); }

.Polaris-CheckableButton_1a7z5:hover, .Polaris-CheckableButton_1a7z5:active { background: transparent; }

.Polaris-CheckableButton_1a7z5:focus { outline: none; }

.Polaris-CheckableButton__Checkbox_1d6zr { pointer-events: none; /* We do not want to worry about setting the height and width explicitly. We want to inherits the height and width of its child (in this case the Checkbox component). We do this using flexbox because "the cross size of each flex container is the minimum size necessary to contain the flex items" as per the spec. https://www.w3.org/TR/css-flexbox-1/#flex-lines */ display: flex; }

.Polaris-CheckableButton__Label_2vd36 { flex: 1 1; white-space: nowrap; overflow: hidden; max-width: 100%; text-overflow: ellipsis; padding: var(--p-space-025) 0; line-height: 1.125rem; }
