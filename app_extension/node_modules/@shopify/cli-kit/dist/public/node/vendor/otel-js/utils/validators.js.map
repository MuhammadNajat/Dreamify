{"version":3,"file":"validators.js","sourceRoot":"","sources":["../../../../../../src/public/node/vendor/otel-js/utils/validators.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,IAAI,EAAC,MAAM,oBAAoB,CAAA;AAEvC,MAAM,gBAAgB,GAAG,IAAI,MAAM,CAAC,0BAA0B,CAAC,CAAA;AAE/D,MAAM,UAAU,iBAAiB,CAAC,KAAa;IAC7C,IAAI,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;QAChC,IAAI,CAAC,IAAI,CACP,eAAe,KAAK;gGACsE,EAC1F,WAAW,CACZ,CAAA;QACD,OAAO,KAAK,CAAA;KACb;IAED,OAAO,IAAI,CAAA;AACb,CAAC","sourcesContent":["import {diag} from '@opentelemetry/api'\n\nconst validMetricRegex = new RegExp('[^a-zA-Z_][^a-zA-Z0-9_]*')\n\nexport function isValidMetricName(value: string): boolean {\n  if (validMetricRegex.test(value)) {\n    diag.warn(\n      `Metric name ${value} contains invalid characters and will be dropped.\n    Service Names and metric names must conform to the following regex %c[a-zA-Z_][a-zA-Z0-9_]*`,\n      'color:red',\n    )\n    return false\n  }\n\n  return true\n}\n"]}