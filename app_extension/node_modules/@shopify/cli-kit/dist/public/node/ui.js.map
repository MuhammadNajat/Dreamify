{"version":3,"file":"ui.js","sourceRoot":"","sources":["../../../src/public/node/ui.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable tsdoc/syntax */\nimport {AbortError, AbortSilentError, FatalError as Fatal, FatalErrorType} from './error.js'\nimport {\n  collectLog,\n  consoleError,\n  consoleLog,\n  Logger,\n  LogLevel,\n  outputContent,\n  outputDebug,\n  outputToken,\n  outputWhereAppropriate,\n} from './output.js'\nimport {isUnitTest} from './context/local.js'\nimport {terminalSupportsRawMode} from './system.js'\nimport {AbortController} from './abort.js'\nimport {runWithTimer} from './metadata.js'\nimport {ConcurrentOutput, ConcurrentOutputProps} from '../../private/node/ui/components/ConcurrentOutput.js'\nimport {handleCtrlC, render, renderOnce} from '../../private/node/ui.js'\nimport {alert, AlertOptions} from '../../private/node/ui/alert.js'\nimport {CustomSection} from '../../private/node/ui/components/Alert.js'\nimport {FatalError} from '../../private/node/ui/components/FatalError.js'\nimport ScalarDict from '../../private/node/ui/components/Table/ScalarDict.js'\nimport {Table, TableColumn, TableProps} from '../../private/node/ui/components/Table/Table.js'\nimport {\n  tokenItemToString,\n  InlineToken,\n  LinkToken,\n  ListToken,\n  TokenItem,\n} from '../../private/node/ui/components/TokenizedText.js'\nimport {\n  DangerousConfirmationPrompt,\n  DangerousConfirmationPromptProps,\n} from '../../private/node/ui/components/DangerousConfirmationPrompt.js'\nimport {SelectPrompt, SelectPromptProps} from '../../private/node/ui/components/SelectPrompt.js'\nimport {Tasks, Task} from '../../private/node/ui/components/Tasks.js'\nimport {TextPrompt, TextPromptProps} from '../../private/node/ui/components/TextPrompt.js'\nimport {AutocompletePromptProps, AutocompletePrompt} from '../../private/node/ui/components/AutocompletePrompt.js'\nimport {InfoTableSection} from '../../private/node/ui/components/Prompts/InfoTable.js'\nimport {recordUIEvent, resetRecordedSleep} from '../../private/node/demo-recorder.js'\nimport {InfoMessageProps} from '../../private/node/ui/components/Prompts/InfoMessage.js'\nimport React from 'react'\nimport {Key as InkKey, RenderOptions} from 'ink'\n\ntype PartialBy<T, TKey extends keyof T> = Omit<T, TKey> & Partial<Pick<T, TKey>>\n\ninterface UIDebugOptions {\n  /** If true, don't check if the current terminal is interactive or not */\n  skipTTYCheck: boolean\n}\nconst defaultUIDebugOptions: UIDebugOptions = {\n  skipTTYCheck: false,\n}\n\nexport interface RenderConcurrentOptions extends PartialBy<ConcurrentOutputProps, 'abortSignal'> {\n  renderOptions?: RenderOptions\n}\n\n/**\n * Renders output from concurrent processes to the terminal with {@link ConcurrentOutput}.\n * @example\n * 00:00:00 │ backend  │ first backend message\n * 00:00:00 │ backend  │ second backend message\n * 00:00:00 │ backend  │ third backend message\n * 00:00:00 │ frontend │ first frontend message\n * 00:00:00 │ frontend │ second frontend message\n * 00:00:00 │ frontend │ third frontend message\n *\n */\nexport async function renderConcurrent({renderOptions, ...props}: RenderConcurrentOptions) {\n  const abortSignal = props.abortSignal ?? new AbortController().signal\n\n  return render(<ConcurrentOutput {...props} abortSignal={abortSignal} />, renderOptions)\n}\n\nexport type AlertCustomSection = CustomSection\nexport type RenderAlertOptions = Omit<AlertOptions, 'type'>\n\n/**\n * Renders an information banner to the console.\n * @example Basic\n * ╭─ info ───────────────────────────────────────────────────╮\n * │                                                          │\n * │  CLI update available.                                   │\n * │                                                          │\n * │  Run `npm run shopify upgrade`.                          │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n *\n * @example Complete\n * ╭─ info ───────────────────────────────────────────────────╮\n * │                                                          │\n * │  my-app initialized and ready to build.                  │\n * │                                                          │\n * │  Next steps                                              │\n * │    • Run `cd verification-app`                           │\n * │    • To preview your project, run `npm app dev`          │\n * │    • To add extensions, run `npm generate extension`     │\n * │                                                          │\n * │  Reference                                               │\n * │    • Run `npm shopify help`                              │\n * │    • Dev docs [1]                                        │\n * │                                                          │\n * │  Custom section                                          │\n * │    • Item 1 [2]                                          │\n * │    • Item 2                                              │\n * │    • Item 3 [3]                                          │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * [1] https://shopify.dev\n * [2] https://www.google.com/search?q=jh56t9l34kpo35tw8s28hn7s\n * 9s2xvzla01d8cn6j7yq&rlz=1C1GCEU_enUS832US832&oq=jh56t9l34kpo\n * 35tw8s28hn7s9s2xvzla01d8cn6j7yq&aqs=chrome.0.35i39l2j0l4j46j\n * 69i60.2711j0j7&sourceid=chrome&ie=UTF-8\n * [3] https://shopify.com\n *\n */\nexport function renderInfo(options: RenderAlertOptions) {\n  return alert({...options, type: 'info'})\n}\n\n/**\n * Renders a success banner to the console.\n * @example Basic\n * ╭─ success ────────────────────────────────────────────────╮\n * │                                                          │\n * │  CLI updated.                                            │\n * │                                                          │\n * │  You are now running version 3.47.                       │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n *\n * @example Complete\n * ╭─ success ────────────────────────────────────────────────╮\n * │                                                          │\n * │  Deployment successful.                                  │\n * │                                                          │\n * │  Your extensions have been uploaded to your Shopify      │\n * │  Partners Dashboard.                                     │\n * │                                                          │\n * │  Next steps                                              │\n * │    • See your deployment and set it live [1]             │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * [1] https://partners.shopify.com/1797046/apps/4523695/deploy\n * ments\n *\n */\nexport function renderSuccess(options: RenderAlertOptions) {\n  return alert({...options, type: 'success'})\n}\n\n/**\n * Renders a warning banner to the console.\n * @example Basic\n * ╭─ warning ────────────────────────────────────────────────╮\n * │                                                          │\n * │  You have reached your limit of checkout extensions for  │\n * │   this app.                                              │\n * │                                                          │\n * │  You can free up space for a new one by deleting an      │\n * │  existing one.                                           │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n *\n * @example Complete\n * ╭─ warning ────────────────────────────────────────────────╮\n * │                                                          │\n * │  Required access scope update.                           │\n * │                                                          │\n * │  The deadline for re-selecting your app scopes is May    │\n * │  1, 2022.                                                │\n * │                                                          │\n * │  Reference                                               │\n * │    • Dev docs [1]                                        │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * [1] https://shopify.dev/app/scopes\n *\n */\nexport function renderWarning(options: RenderAlertOptions) {\n  return alert({...options, type: 'warning'})\n}\n\n/**\n * Renders an error banner to the console.\n * @example\n * ╭─ error ──────────────────────────────────────────────────╮\n * │                                                          │\n * │  Version couldn't be released.                           │\n * │                                                          │\n * │  This version needs to be submitted for review and       │\n * │  approved by Shopify before it can be released.          │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n *\n */\nexport function renderError(options: RenderAlertOptions) {\n  return alert({...options, type: 'error'})\n}\n\ninterface RenderFatalErrorOptions {\n  renderOptions?: RenderOptions\n}\n\n/**\n * Renders a Fatal error to the console inside a banner.\n * @example Basic\n * ╭─ error ──────────────────────────────────────────────────╮\n * │                                                          │\n * │  Something went wrong.                                   │\n * │                                                          │\n * │  To investigate the issue, examine this stack trace:     │\n * │    at _compile (internal/modules/cjs/loader.js:1137)     │\n * │    at js (internal/modules/cjs/loader.js:1157)           │\n * │    at load (internal/modules/cjs/loader.js:985)          │\n * │    at _load (internal/modules/cjs/loader.js:878)         │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n *\n * @example Complete\n * ╭─ error ──────────────────────────────────────────────────╮\n * │                                                          │\n * │  No Organization found                                   │\n * │                                                          │\n * │  Next steps                                              │\n * │    • Have you created a Shopify Partners organization    │\n * │      [1]?                                                │\n * │    • Have you confirmed your accounts from the emails    │\n * │      you received?                                       │\n * │    • Need to connect to a different App or               │\n * │      organization? Run the command again with `--reset`  │\n * │                                                          │\n * │  amortizable-marketplace-ext                             │\n * │    • Some other error                                    │\n * │  Validation errors                                       │\n * │    • Missing expected key(s).                            │\n * │                                                          │\n * │  amortizable-marketplace-ext-2                           │\n * │    • Something was not found                             │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * [1] https://partners.shopify.com/signup\n *\n */\n// eslint-disable-next-line max-params\nexport function renderFatalError(error: Fatal, {renderOptions}: RenderFatalErrorOptions = {}) {\n  recordUIEvent({\n    type: 'fatalError',\n    properties: {...error, errorType: error.type === FatalErrorType.Bug ? 'bug' : 'abort'},\n  })\n\n  return renderOnce(<FatalError error={error} />, {logLevel: 'error', logger: consoleError, renderOptions})\n}\n\nexport interface RenderSelectPromptOptions<T> extends Omit<SelectPromptProps<T>, 'onSubmit'> {\n  isConfirmationPrompt?: boolean\n  renderOptions?: RenderOptions\n}\n\n/**\n * Renders a select prompt to the console.\n * @example\n * ?  Associate your project with the org Castile Ventures?\n *\n *    ┃  Add\n *    ┃  • new-ext\n *    ┃\n *    ┃  Remove\n *    ┃  • integrated-demand-ext\n *    ┃  • order-discount\n *\n *    Automations\n *    >  fifth\n *       sixth\n *\n *    Merchant Admin\n *       eighth\n *       ninth\n *\n *    Other\n *       first\n *       second\n *       third (limit reached)\n *       fourth\n *       seventh\n *       tenth\n *\n *    Press ↑↓ arrows to select, enter to confirm.\n *\n */\n// eslint-disable-next-line max-params\nexport async function renderSelectPrompt<T>(\n  {renderOptions, isConfirmationPrompt, ...props}: RenderSelectPromptOptions<T>,\n  uiDebugOptions: UIDebugOptions = defaultUIDebugOptions,\n): Promise<T> {\n  throwInNonTTY({message: props.message, stdin: renderOptions?.stdin}, uiDebugOptions)\n\n  if (!isConfirmationPrompt) {\n    recordUIEvent({type: 'selectPrompt', properties: {renderOptions, ...props}})\n  }\n\n  return runWithTimer('cmd_all_timing_prompts_ms')(async () => {\n    let selectedValue: T\n    try {\n      await render(\n        <SelectPrompt\n          {...props}\n          onSubmit={(value: T) => {\n            selectedValue = value\n          }}\n        />,\n        {\n          ...renderOptions,\n          exitOnCtrlC: false,\n        },\n      )\n      return selectedValue!\n    } finally {\n      resetRecordedSleep()\n    }\n  })\n}\n\nexport interface RenderConfirmationPromptOptions\n  extends Pick<SelectPromptProps<boolean>, 'message' | 'infoTable' | 'infoMessage' | 'gitDiff' | 'abortSignal'> {\n  confirmationMessage?: string\n  cancellationMessage?: string\n  renderOptions?: RenderOptions\n  defaultValue?: boolean\n}\n\n/**\n * Renders a confirmation prompt to the console.\n * @example\n * ?  Delete the following themes from the store?\n *\n *    ┃  Info message title\n *    ┃\n *    ┃  Info message body\n *    ┃\n *    ┃  • first theme (#1)\n *    ┃  • second theme (#2)\n *\n * >  (y) Yes, confirm changes\n *    (n) Cancel\n *\n *    Press ↑↓ arrows to select, enter or a shortcut to\n *    confirm.\n *\n */\nexport async function renderConfirmationPrompt({\n  message,\n  infoTable,\n  gitDiff,\n  confirmationMessage = 'Yes, confirm',\n  cancellationMessage = 'No, cancel',\n  renderOptions,\n  defaultValue = true,\n  abortSignal,\n  infoMessage,\n}: RenderConfirmationPromptOptions): Promise<boolean> {\n  // eslint-disable-next-line prefer-rest-params\n  recordUIEvent({type: 'confirmationPrompt', properties: arguments[0]})\n\n  const choices = [\n    {\n      label: confirmationMessage,\n      value: true,\n      key: 'y',\n    },\n    {\n      label: cancellationMessage,\n      value: false,\n      key: 'n',\n    },\n  ]\n\n  return renderSelectPrompt({\n    choices,\n    message,\n    infoTable,\n    gitDiff,\n    renderOptions,\n    defaultValue,\n    isConfirmationPrompt: true,\n    abortSignal,\n    infoMessage,\n  })\n}\n\nexport interface RenderAutocompleteOptions<T>\n  extends PartialBy<Omit<AutocompletePromptProps<T>, 'onSubmit'>, 'search'> {\n  renderOptions?: RenderOptions\n}\n\n/**\n * Renders an autocomplete prompt to the console.\n * @example\n * ?  Select a template:   Type to search...\n *\n *    ┃  Info message title\n *    ┃\n *    ┃  Info message body\n *\n * >  first\n *    second\n *    third\n *    fourth\n *    fifth\n *    sixth\n *    seventh\n *    eighth\n *    ninth\n *    tenth\n *    eleventh\n *    twelfth\n *    thirteenth\n *    fourteenth\n *    fifteenth\n *    sixteenth\n *    seventeenth\n *    eighteenth\n *    nineteenth (disabled)\n *    twentieth\n *    twenty-first\n *    twenty-second\n *    twenty-third\n *    twenty-fourth\n *    twenty-fifth\n *\n *    Press ↑↓ arrows to select, enter to confirm.\n *\n */\n// eslint-disable-next-line max-params\nexport async function renderAutocompletePrompt<T>(\n  {renderOptions, ...props}: RenderAutocompleteOptions<T>,\n  uiDebugOptions: UIDebugOptions = defaultUIDebugOptions,\n): Promise<T> {\n  throwInNonTTY({message: props.message, stdin: renderOptions?.stdin}, uiDebugOptions)\n\n  // eslint-disable-next-line prefer-rest-params\n  recordUIEvent({type: 'autocompletePrompt', properties: arguments[0]})\n\n  const newProps = {\n    search(term: string) {\n      const lowerTerm = term.toLowerCase()\n      return Promise.resolve({\n        data: props.choices.filter((item) => {\n          return (\n            item.label.toLowerCase().includes(lowerTerm) || (item.group && item.group.toLowerCase().includes(lowerTerm))\n          )\n        }),\n      })\n    },\n    ...props,\n  }\n\n  return runWithTimer('cmd_all_timing_prompts_ms')(async () => {\n    let selectedValue: T\n    try {\n      await render(\n        <AutocompletePrompt\n          {...newProps}\n          onSubmit={(value: T) => {\n            selectedValue = value\n          }}\n        />,\n        {\n          ...renderOptions,\n          exitOnCtrlC: false,\n        },\n      )\n      return selectedValue!\n    } finally {\n      resetRecordedSleep()\n    }\n  })\n}\n\ninterface RenderTableOptions<T extends ScalarDict> extends TableProps<T> {\n  renderOptions?: RenderOptions\n}\n\n/**\n * Renders a table to the console.\n * @example\n * ID  Name        email\n * ──  ──────────  ─────────────\n * 1   John Doe    jon@doe.com\n * 2   Jane Doe    jane@doe.com\n * 3   John Smith  jon@smith.com\n */\nexport function renderTable<T extends ScalarDict>({renderOptions, ...props}: RenderTableOptions<T>) {\n  // eslint-disable-next-line prefer-rest-params\n  recordUIEvent({type: 'table', properties: arguments[0]})\n\n  return renderOnce(<Table {...props} />, {renderOptions})\n}\n\ninterface RenderTasksOptions {\n  renderOptions?: RenderOptions\n}\n\n/**\n * Runs async tasks and displays their progress to the console.\n * @example\n * ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀\n * Installing dependencies ...\n */\n// eslint-disable-next-line max-params\nexport async function renderTasks<TContext>(tasks: Task<TContext>[], {renderOptions}: RenderTasksOptions = {}) {\n  recordUIEvent({\n    type: 'taskbar',\n    properties: {\n      // Rather than timing exactly, pretend each step takes 2 seconds. This\n      // should be easy to tweak manually.\n      steps: tasks.map((task) => {\n        return {title: task.title, duration: 2}\n      }),\n    },\n  })\n\n  // eslint-disable-next-line max-params\n  return new Promise<TContext>((resolve, reject) => {\n    render(<Tasks tasks={tasks} onComplete={resolve} />, {\n      ...renderOptions,\n      exitOnCtrlC: false,\n    })\n      .then(() => resetRecordedSleep())\n      .catch(reject)\n  })\n}\n\nexport interface RenderTextPromptOptions extends Omit<TextPromptProps, 'onSubmit'> {\n  renderOptions?: RenderOptions\n}\n\n/**\n * Renders a text prompt to the console.\n * @example\n * ?  App project name (can be changed later):\n * >  expansive commerce app\n *    ▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔\n *\n */\n// eslint-disable-next-line max-params\nexport async function renderTextPrompt(\n  {renderOptions, ...props}: RenderTextPromptOptions,\n  uiDebugOptions: UIDebugOptions = defaultUIDebugOptions,\n): Promise<string> {\n  throwInNonTTY({message: props.message, stdin: renderOptions?.stdin}, uiDebugOptions)\n\n  // eslint-disable-next-line prefer-rest-params\n  recordUIEvent({type: 'textPrompt', properties: arguments[0]})\n\n  return runWithTimer('cmd_all_timing_prompts_ms')(async () => {\n    let enteredText = ''\n    try {\n      await render(\n        <TextPrompt\n          {...props}\n          onSubmit={(value: string) => {\n            enteredText = value\n          }}\n        />,\n        {\n          ...renderOptions,\n          exitOnCtrlC: false,\n        },\n      )\n      return enteredText\n    } finally {\n      resetRecordedSleep()\n    }\n  })\n}\n\nexport interface RenderDangerousConfirmationPromptOptions extends Omit<DangerousConfirmationPromptProps, 'onSubmit'> {\n  renderOptions?: RenderOptions\n}\n\n/**\n * Renders a dangerous confirmation prompt to the console, forcing the user to\n * type a confirmation string to proceed.\n * @example\n * ?  Release a new version of nightly-app-2023-06-19?\n *\n *    ┃  Includes:\n *    ┃  + web-px (new)\n *    ┃  + sub-ui-ext\n *    ┃  + theme-app-ext\n *    ┃  + paymentify (from Partner Dashboard)\n *    ┃\n *    ┃  Removes:\n *    ┃  - prod-discount-fun\n *    ┃\n *    ┃  This can permanently delete app user data.\n *\n *    Type nightly-app-2023-06-19 to confirm, or press Escape\n *    to cancel.\n * >  █\n *    ▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔\n *\n */\n// eslint-disable-next-line max-params\nexport async function renderDangerousConfirmationPrompt(\n  {renderOptions, ...props}: RenderDangerousConfirmationPromptOptions,\n  uiDebugOptions: UIDebugOptions = defaultUIDebugOptions,\n): Promise<boolean> {\n  throwInNonTTY({message: props.message, stdin: renderOptions?.stdin}, uiDebugOptions)\n\n  // eslint-disable-next-line prefer-rest-params\n  recordUIEvent({type: 'dangerousConfirmationPrompt', properties: arguments[0]})\n\n  return runWithTimer('cmd_all_timing_prompts_ms')(async () => {\n    let confirmed: boolean\n    try {\n      await render(\n        <DangerousConfirmationPrompt\n          {...props}\n          onSubmit={(value: boolean) => {\n            confirmed = value\n          }}\n        />,\n        {\n          ...renderOptions,\n          exitOnCtrlC: false,\n        },\n      )\n      return confirmed!\n    } finally {\n      resetRecordedSleep()\n    }\n  })\n}\n\ninterface RenderTextOptions {\n  text: string\n  logLevel?: LogLevel\n  logger?: Logger\n}\n\n/** Renders a text string to the console.\n * Using this function makes sure that correct spacing is applied among the various components.\n * @example\n * Hello world!\n *\n */\nexport function renderText({text, logLevel = 'info', logger = consoleLog}: RenderTextOptions) {\n  let textWithLineReturn = text\n  if (!text.endsWith('\\n')) textWithLineReturn += '\\n'\n\n  if (isUnitTest()) collectLog(logLevel, textWithLineReturn)\n  outputWhereAppropriate(logLevel, logger, textWithLineReturn)\n  return textWithLineReturn\n}\n\n/** Waits for any key to be pressed except Ctrl+C which will terminate the process. */\n// eslint-disable-next-line max-params\nexport const keypress = async (stdin = process.stdin, uiDebugOptions: UIDebugOptions = defaultUIDebugOptions) => {\n  throwInNonTTY({message: 'Press any key'}, uiDebugOptions)\n\n  return runWithTimer('cmd_all_timing_prompts_ms')(() => {\n    // eslint-disable-next-line max-params\n    return new Promise((resolve, reject) => {\n      const handler = (buffer: Buffer) => {\n        stdin.setRawMode(false)\n\n        const bytes = Array.from(buffer)\n\n        if (bytes.length && bytes[0] === 3) {\n          outputDebug('Canceled keypress, User pressed CTRL+C')\n          reject(new AbortSilentError())\n        }\n        stdin.unref()\n        process.nextTick(resolve)\n      }\n\n      stdin.setRawMode(true)\n      stdin.once('data', handler)\n\n      // We want to indicate that we're still using stdin, so that the process\n      // doesn't exit early.\n      stdin.ref()\n    })\n  })\n}\n\ninterface ThrowInNonTTYOptions {\n  message: TokenItem\n  stdin?: NodeJS.ReadStream\n}\n\n// eslint-disable-next-line max-params\nfunction throwInNonTTY({message, stdin = undefined}: ThrowInNonTTYOptions, uiDebugOptions: UIDebugOptions) {\n  if (uiDebugOptions.skipTTYCheck || stdin || terminalSupportsRawMode()) return\n\n  const promptText = tokenItemToString(message)\n  const errorMessage = `Failed to prompt:\n\n${outputContent`${outputToken.cyan(promptText)}`.value}\n\nThis usually happens when running a command non-interactively, for example in a CI environment, or when piping input from another process.`\n  throw new AbortError(\n    errorMessage,\n    'To resolve this, specify the option in the command, or run the command in an interactive environment such as your local terminal.',\n  )\n}\n\nexport type Key = InkKey\nexport type InfoMessage = InfoMessageProps['message']\nexport {Task, TokenItem, InlineToken, LinkToken, TableColumn, InfoTableSection, ListToken, render, handleCtrlC}\n"]}