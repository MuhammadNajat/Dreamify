{"version":3,"file":"InfoMessage.js","sourceRoot":"","sources":["../../../../../../src/private/node/ui/components/Prompts/InfoMessage.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAoC,aAAa,EAAiB,MAAM,qBAAqB,CAAA;AACpG,OAAO,EAAC,GAAG,EAAE,IAAI,EAAY,MAAM,KAAK,CAAA;AACxC,OAAO,KAA0B,MAAM,OAAO,CAAA;AAY9C,MAAM,WAAW,GAAwC,CAAC,EACxD,OAAO,EAAE,EACP,KAAK,EAAE,EAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAC,EAC3B,IAAI,GACL,GACF,EAAE,EAAE;IACH,OAAO,CACL,oBAAC,GAAG,IAAC,aAAa,EAAC,QAAQ,EAAC,GAAG,EAAE,CAAC;QAChC,oBAAC,IAAI,IAAC,KAAK,EAAE,KAAK;YAChB,oBAAC,aAAa,IAAC,IAAI,EAAE,KAAK,GAAI,CACzB;QACP,oBAAC,aAAa,IAAC,IAAI,EAAE,IAAI,GAAI,CACzB,CACP,CAAA;AACH,CAAC,CAAA;AAED,OAAO,EAAC,WAAW,EAAC,CAAA","sourcesContent":["import {InlineToken, LinkToken, TokenItem, TokenizedText, UserInputToken} from '../TokenizedText.js'\nimport {Box, Text, TextProps} from 'ink'\nimport React, {FunctionComponent} from 'react'\n\nexport interface InfoMessageProps {\n  message: {\n    title: {\n      color?: TextProps['color']\n      text: TokenItem<Exclude<InlineToken, UserInputToken | LinkToken>>\n    }\n    body: TokenItem\n  }\n}\n\nconst InfoMessage: FunctionComponent<InfoMessageProps> = ({\n  message: {\n    title: {color, text: title},\n    body,\n  },\n}) => {\n  return (\n    <Box flexDirection=\"column\" gap={1}>\n      <Text color={color}>\n        <TokenizedText item={title} />\n      </Text>\n      <TokenizedText item={body} />\n    </Box>\n  )\n}\n\nexport {InfoMessage}\n"]}