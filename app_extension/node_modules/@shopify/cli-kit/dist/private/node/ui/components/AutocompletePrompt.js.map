{"version":3,"file":"AutocompletePrompt.js","sourceRoot":"","sources":["../../../../../src/private/node/ui/components/AutocompletePrompt.tsx"],"names":[],"mappings":"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","sourcesContent":["import {SelectInput, SelectInputProps, Item as SelectItem} from './SelectInput.js'\nimport {InfoTableProps} from './Prompts/InfoTable.js'\nimport {TextInput} from './TextInput.js'\nimport {InfoMessageProps} from './Prompts/InfoMessage.js'\nimport {GitDiffProps} from './Prompts/GitDiff.js'\nimport {Message, PromptLayout} from './Prompts/PromptLayout.js'\nimport {debounce} from '../../../../public/common/function.js'\nimport {AbortSignal} from '../../../../public/node/abort.js'\nimport usePrompt, {PromptState} from '../hooks/use-prompt.js'\nimport React, {ReactElement, useCallback, useEffect, useRef, useState} from 'react'\nimport {Box, useApp} from 'ink'\n\nexport interface SearchResults<T> {\n  data: SelectItem<T>[]\n  meta?: {\n    hasNextPage: boolean\n  }\n}\n\nexport interface AutocompletePromptProps<T> {\n  message: Message\n  choices: SelectInputProps<T>['items']\n  onSubmit: (value: T) => void\n  infoTable?: InfoTableProps['table']\n  hasMorePages?: boolean\n  search: (term: string) => Promise<SearchResults<T>>\n  abortSignal?: AbortSignal\n  infoMessage?: InfoMessageProps['message']\n  gitDiff?: GitDiffProps['gitDiff']\n}\n\nconst MIN_NUMBER_OF_ITEMS_FOR_SEARCH = 5\n\n// eslint-disable-next-line react/function-component-definition\nfunction AutocompletePrompt<T>({\n  message,\n  choices,\n  infoTable,\n  onSubmit,\n  search,\n  hasMorePages: initialHasMorePages = false,\n  abortSignal,\n  infoMessage,\n  gitDiff,\n}: React.PropsWithChildren<AutocompletePromptProps<T>>): ReactElement | null {\n  const {exit: unmountInk} = useApp()\n  const [searchTerm, setSearchTerm] = useState('')\n  const [searchResults, setSearchResults] = useState<SelectItem<T>[]>(choices)\n  const canSearch = choices.length > MIN_NUMBER_OF_ITEMS_FOR_SEARCH\n  const [hasMorePages, setHasMorePages] = useState(initialHasMorePages)\n  const {promptState, setPromptState, answer, setAnswer} = usePrompt<SelectItem<T> | undefined>({\n    initialAnswer: undefined,\n  })\n\n  const paginatedSearch = useCallback(\n    async (term: string) => {\n      const results = await search(term)\n      return results\n    },\n    [search],\n  )\n\n  const submitAnswer = useCallback(\n    (answer: SelectItem<T>) => {\n      if (promptState === PromptState.Idle) {\n        setAnswer(answer)\n        setPromptState(PromptState.Submitted)\n      }\n    },\n    [promptState, setAnswer, setPromptState],\n  )\n\n  useEffect(() => {\n    if (promptState === PromptState.Submitted && answer) {\n      setSearchTerm('')\n      unmountInk()\n      onSubmit(answer.value)\n    }\n  }, [answer, onSubmit, promptState, unmountInk])\n\n  const setLoadingWhenSlow = useRef<NodeJS.Timeout>()\n\n  // we want to set it each time so that searchTermRef always tracks searchTerm,\n  // this is NOT the same as writing useRef(searchTerm)\n  const searchTermRef = useRef('')\n  searchTermRef.current = searchTerm\n\n  // disable exhaustive-deps because we want to memoize the debounce function itself\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceSearch = useCallback(\n    debounce((term: string) => {\n      setLoadingWhenSlow.current = setTimeout(() => {\n        setPromptState(PromptState.Loading)\n      }, 100)\n      paginatedSearch(term)\n        .then((result) => {\n          // while we were waiting for the promise to resolve, the user\n          // has emptied the search term, so we want to show the default\n          // choices instead\n          if (searchTermRef.current.length === 0) {\n            setSearchResults(choices)\n            setHasMorePages(initialHasMorePages)\n          } else {\n            setSearchResults(result.data)\n            setHasMorePages(result.meta?.hasNextPage ?? false)\n          }\n\n          setPromptState(PromptState.Idle)\n        })\n        .catch(() => {\n          setPromptState(PromptState.Error)\n        })\n        .finally(() => {\n          clearTimeout(setLoadingWhenSlow.current)\n        })\n    }, 300),\n    [initialHasMorePages, choices, paginatedSearch, searchResults],\n  )\n\n  return (\n    <PromptLayout\n      message={message}\n      state={promptState}\n      infoTable={infoTable}\n      infoMessage={infoMessage}\n      gitDiff={gitDiff}\n      abortSignal={abortSignal}\n      header={\n        promptState !== PromptState.Submitted && canSearch ? (\n          <Box marginLeft={3}>\n            <TextInput\n              value={searchTerm}\n              onChange={(term) => {\n                setSearchTerm(term)\n\n                if (term.length > 0) {\n                  debounceSearch(term)\n                } else {\n                  debounceSearch.cancel()\n                  setPromptState(PromptState.Idle)\n                  setSearchResults(choices)\n                }\n              }}\n              placeholder=\"Type to search...\"\n            />\n          </Box>\n        ) : null\n      }\n      submittedAnswerLabel={answer?.label}\n      input={\n        <SelectInput\n          items={searchResults}\n          initialItems={choices}\n          enableShortcuts={false}\n          emptyMessage=\"No results found.\"\n          highlightedTerm={searchTerm}\n          loading={promptState === PromptState.Loading}\n          errorMessage={\n            promptState === PromptState.Error\n              ? 'There has been an error while searching. Please try again later.'\n              : undefined\n          }\n          hasMorePages={hasMorePages}\n          morePagesMessage=\"Find what you're looking for by typing its name.\"\n          onSubmit={submitAnswer}\n        />\n      }\n    />\n  )\n}\n\nexport {AutocompletePrompt}\n"]}