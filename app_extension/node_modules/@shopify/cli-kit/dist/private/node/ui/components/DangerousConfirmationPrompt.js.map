{"version":3,"file":"DangerousConfirmationPrompt.js","sourceRoot":"","sources":["../../../../../src/private/node/ui/components/DangerousConfirmationPrompt.tsx"],"names":[],"mappings":"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","sourcesContent":["import {TextInput} from './TextInput.js'\nimport {InlineToken, TokenItem, TokenizedText} from './TokenizedText.js'\nimport {InfoTable, InfoTableProps} from './Prompts/InfoTable.js'\nimport {handleCtrlC} from '../../ui.js'\nimport useLayout from '../hooks/use-layout.js'\nimport {messageWithPunctuation} from '../utilities.js'\nimport {AbortSignal} from '../../../../public/node/abort.js'\nimport useAbortSignal from '../hooks/use-abort-signal.js'\nimport usePrompt, {PromptState} from '../hooks/use-prompt.js'\nimport React, {FunctionComponent, useCallback, useEffect, useState} from 'react'\nimport {Box, useApp, useInput, Text} from 'ink'\nimport figures from 'figures'\n\nexport interface DangerousConfirmationPromptProps {\n  message: string\n  confirmation: string\n  infoTable?: InfoTableProps['table']\n  onSubmit: (value: boolean) => void\n  abortSignal?: AbortSignal\n}\n\nconst DangerousConfirmationPrompt: FunctionComponent<DangerousConfirmationPromptProps> = ({\n  message,\n  confirmation,\n  infoTable,\n  onSubmit,\n  abortSignal,\n}) => {\n  const validateAnswer = useCallback(\n    (value: string): TokenItem<InlineToken> | undefined => {\n      return value === confirmation ? undefined : ['Value must be exactly', {userInput: confirmation}]\n    },\n    [confirmation],\n  )\n\n  const {oneThird, twoThirds} = useLayout()\n  const {promptState, setPromptState, answer, setAnswer} = usePrompt<string>({\n    initialAnswer: '',\n  })\n  const {exit: unmountInk} = useApp()\n  const [error, setError] = useState<TokenItem<InlineToken> | undefined>(undefined)\n  const color = promptState === PromptState.Error ? 'red' : 'cyan'\n  const underline = new Array(oneThird - 3).fill('â–”')\n  const {isAborted} = useAbortSignal(abortSignal)\n\n  useInput((input, key) => {\n    handleCtrlC(input, key)\n\n    if (key.escape) {\n      setPromptState(PromptState.Cancelled)\n      setError(undefined)\n    }\n\n    if (key.return) {\n      const error = validateAnswer(answer)\n\n      if (error) {\n        setPromptState(PromptState.Error)\n        setError(error)\n      } else {\n        setPromptState(PromptState.Submitted)\n      }\n    }\n  })\n\n  useEffect(() => {\n    if (promptState === PromptState.Submitted) {\n      onSubmit(true)\n      unmountInk()\n    } else if (promptState === PromptState.Cancelled) {\n      onSubmit(false)\n      unmountInk()\n    }\n  }, [onSubmit, promptState, unmountInk])\n\n  const completed = promptState === PromptState.Submitted || promptState === PromptState.Cancelled\n\n  return isAborted ? null : (\n    <Box flexDirection=\"column\" marginBottom={1} width={twoThirds}>\n      <Box>\n        <Box marginRight={2}>\n          <Text>?</Text>\n        </Box>\n        <TokenizedText item={messageWithPunctuation(message)} />\n      </Box>\n      {completed ? (\n        <CompletedPrompt {...{cancelled: promptState === PromptState.Cancelled}} />\n      ) : (\n        <>\n          <Box flexDirection=\"column\" gap={1} marginTop={1} marginLeft={3}>\n            {infoTable ? (\n              <Box\n                paddingLeft={2}\n                borderStyle=\"bold\"\n                borderLeft\n                borderRight={false}\n                borderTop={false}\n                borderBottom={false}\n                flexDirection=\"column\"\n                gap={1}\n              >\n                <InfoTable table={infoTable} />\n              </Box>\n            ) : null}\n            <Box>\n              <TokenizedText item={['Type', {userInput: confirmation}, 'to confirm, or press Escape to cancel.']} />\n            </Box>\n          </Box>\n          <Box flexDirection=\"column\" width={oneThird}>\n            <Box>\n              <Box marginRight={2}>\n                <Text color={color}>{`>`}</Text>\n              </Box>\n              <Box flexGrow={1}>\n                <TextInput\n                  value={answer}\n                  onChange={(answer) => {\n                    setAnswer(answer)\n                    setPromptState(PromptState.Idle)\n                  }}\n                  defaultValue=\"\"\n                  color={color}\n                />\n              </Box>\n            </Box>\n            <Box marginLeft={3}>\n              <Text color={color}>{underline}</Text>\n            </Box>\n            {promptState === PromptState.Error && error ? (\n              <Box marginLeft={3}>\n                <Text color={color}>\n                  <TokenizedText item={error} />\n                </Text>\n              </Box>\n            ) : null}\n          </Box>\n        </>\n      )}\n    </Box>\n  )\n}\n\ninterface CompletedPromptProps {\n  cancelled: boolean\n}\n\nconst CompletedPrompt: FunctionComponent<CompletedPromptProps> = ({cancelled}) => (\n  <Box>\n    <Box marginRight={2}>\n      {cancelled ? <Text color=\"red\">{figures.cross}</Text> : <Text color=\"cyan\">{figures.tick}</Text>}\n    </Box>\n\n    <Box flexGrow={1}>{cancelled ? <Text color=\"red\">Cancelled</Text> : <Text color=\"cyan\">Confirmed</Text>}</Box>\n  </Box>\n)\n\nexport {DangerousConfirmationPrompt}\n"]}