{"version":3,"file":"PromptLayout.test.js","sourceRoot":"","sources":["../../../../../../src/private/node/ui/components/Prompts/PromptLayout.test.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,YAAY,EAAC,MAAM,mBAAmB,CAAA;AAC9C,OAAO,EAAC,MAAM,EAAC,MAAM,wBAAwB,CAAA;AAC7C,OAAO,EAAC,WAAW,EAAC,MAAM,2BAA2B,CAAA;AACrD,OAAO,EAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAC,MAAM,QAAQ,CAAA;AAC7C,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAC,GAAG,EAAE,IAAI,EAAC,MAAM,KAAK,CAAA;AAE7B,QAAQ,CAAC,cAAc,EAAE,KAAK,IAAI,EAAE;IAClC,IAAI,CAAC,kEAAkE,EAAE,KAAK,IAAI,EAAE;QAClF,MAAM,KAAK,GAAG;YACZ,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;YAChC,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;YAClC,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;YAChC,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;SACnC,CAAA;QAED,MAAM,cAAc,GAAG,MAAM,CAC3B,oBAAC,YAAY,IACX,OAAO,EAAC,uDAAuD,EAC/D,SAAS,EAAE,EAAE,EACb,KAAK,EAAE,WAAW,CAAC,IAAI,EACvB,KAAK,EACH,oBAAC,GAAG,IAAC,aAAa,EAAC,QAAQ,IACxB,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CACnB,oBAAC,IAAI,IAAC,GAAG,EAAE,IAAI,CAAC,KAAK,IAAG,IAAI,CAAC,KAAK,CAAQ,CAC3C,CAAC,CACE,GAER,CACH,CAAA;QAED,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,CAAC,qBAAqB,CAAC;;;;;;;;KAQxD,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,mEAAmE,EAAE,KAAK,IAAI,EAAE;QACnF,MAAM,KAAK,GAAG;YACZ,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;YAChC,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;YAClC,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;YAChC,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;SACnC,CAAA;QAED,MAAM,cAAc,GAAG,MAAM,CAC3B,oBAAC,YAAY,IACX,OAAO,EAAC,uDAAuD,EAC/D,SAAS,EAAE,EAAE,EACb,KAAK,EAAE,WAAW,CAAC,IAAI,EACvB,KAAK,EACH,oBAAC,GAAG,IAAC,aAAa,EAAC,QAAQ,IACxB,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CACnB,oBAAC,IAAI,IAAC,GAAG,EAAE,IAAI,CAAC,KAAK,IAAG,IAAI,CAAC,KAAK,CAAQ,CAC3C,CAAC,CACE,GAER,CACH,CAAA;QAED,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,CAAC,qBAAqB,CAAC;;;;;;;;KAQxD,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,oGAAoG,EAAE,KAAK,IAAI,EAAE;QACpH,MAAM,KAAK,GAAG;YACZ,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;YAChC,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;YAClC,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;YAChC,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;SACnC,CAAA;QAED,MAAM,OAAO,GAAG;YACd,eAAe,EAAE,OAAO;YACxB,cAAc,EAAE,OAAO;SACxB,CAAA;QAED,MAAM,WAAW,GAAG;YAClB,KAAK,EAAE,EAAC,IAAI,EAAE,YAAY,EAAC;YAC3B,IAAI,EAAE,WAAW;SAClB,CAAA;QAED,MAAM,cAAc,GAAG,MAAM,CAC3B,oBAAC,YAAY,IACX,OAAO,EAAC,uDAAuD,EAC/D,SAAS,EAAE,EAAE,EACb,WAAW,EAAE,WAAW,EACxB,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,WAAW,CAAC,IAAI,EACvB,KAAK,EACH,oBAAC,GAAG,IAAC,aAAa,EAAC,QAAQ,IACxB,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CACnB,oBAAC,IAAI,IAAC,GAAG,EAAE,IAAI,CAAC,KAAK,IAAG,IAAI,CAAC,KAAK,CAAQ,CAC3C,CAAC,CACE,GAER,CACH,CAAA;QAED,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,CAAC,qBAAqB,CAAC;;;;;;;;;;;;;;KAcxD,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,8DAA8D,EAAE,KAAK,IAAI,EAAE;QAC9E,MAAM,KAAK,GAAG;YACZ,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;YAChC,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;YAClC,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;YAChC,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;SACnC,CAAA;QAED,MAAM,OAAO,GAAG;YACd,eAAe,EAAE,OAAO;YACxB,cAAc,EAAE,OAAO;SACxB,CAAA;QAED,MAAM,WAAW,GAAG;YAClB,KAAK,EAAE,EAAC,IAAI,EAAE,YAAY,EAAC;YAC3B,IAAI,EAAE,WAAW;SAClB,CAAA;QAED,MAAM,SAAS,GAAG;YAChB,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;YACvC,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;YACvC,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;SACxC,CAAA;QAED,MAAM,cAAc,GAAG,MAAM,CAC3B,oBAAC,YAAY,IACX,OAAO,EAAC,uDAAuD,EAC/D,SAAS,EAAE,SAAS,EACpB,WAAW,EAAE,WAAW,EACxB,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,WAAW,CAAC,IAAI,EACvB,KAAK,EACH,oBAAC,GAAG,IAAC,aAAa,EAAC,QAAQ,IACxB,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CACnB,oBAAC,IAAI,IAAC,GAAG,EAAE,IAAI,CAAC,KAAK,IAAG,IAAI,CAAC,KAAK,CAAQ,CAC3C,CAAC,CACE,GAER,CACH,CAAA;QAED,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,CAAC,qBAAqB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA6BxD,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["import {PromptLayout} from './PromptLayout.js'\nimport {render} from '../../../testing/ui.js'\nimport {PromptState} from '../../hooks/use-prompt.js'\nimport {describe, expect, test} from 'vitest'\nimport React from 'react'\nimport {Box, Text} from 'ink'\n\ndescribe('PromptLayout', async () => {\n  test(\"doesn't add unnecessary margins when infoTable is an empty array\", async () => {\n    const items = [\n      {label: 'first', value: 'first'},\n      {label: 'second', value: 'second'},\n      {label: 'third', value: 'third'},\n      {label: 'fourth', value: 'fourth'},\n    ]\n\n    const renderInstance = render(\n      <PromptLayout\n        message=\"Associate your project with the org Castile Ventures?\"\n        infoTable={[]}\n        state={PromptState.Idle}\n        input={\n          <Box flexDirection=\"column\">\n            {items.map((item) => (\n              <Text key={item.value}>{item.label}</Text>\n            ))}\n          </Box>\n        }\n      />,\n    )\n\n    expect(renderInstance.lastFrame()).toMatchInlineSnapshot(`\n      \"?  Associate your project with the org Castile Ventures?\n\n      first\n      second\n      third\n      fourth\n      \"\n    `)\n  })\n\n  test(\"doesn't add unnecessary margins when infoTable is an empty object\", async () => {\n    const items = [\n      {label: 'first', value: 'first'},\n      {label: 'second', value: 'second'},\n      {label: 'third', value: 'third'},\n      {label: 'fourth', value: 'fourth'},\n    ]\n\n    const renderInstance = render(\n      <PromptLayout\n        message=\"Associate your project with the org Castile Ventures?\"\n        infoTable={{}}\n        state={PromptState.Idle}\n        input={\n          <Box flexDirection=\"column\">\n            {items.map((item) => (\n              <Text key={item.value}>{item.label}</Text>\n            ))}\n          </Box>\n        }\n      />,\n    )\n\n    expect(renderInstance.lastFrame()).toMatchInlineSnapshot(`\n      \"?  Associate your project with the org Castile Ventures?\n\n      first\n      second\n      third\n      fourth\n      \"\n    `)\n  })\n\n  test(\"doesn't add unnecessary margins when infoTable is empty and there are other elements in the header\", async () => {\n    const items = [\n      {label: 'first', value: 'first'},\n      {label: 'second', value: 'second'},\n      {label: 'third', value: 'third'},\n      {label: 'fourth', value: 'fourth'},\n    ]\n\n    const gitDiff = {\n      baselineContent: 'hello',\n      updatedContent: 'hello',\n    }\n\n    const infoMessage = {\n      title: {text: 'some title'},\n      body: 'some body',\n    }\n\n    const renderInstance = render(\n      <PromptLayout\n        message=\"Associate your project with the org Castile Ventures?\"\n        infoTable={[]}\n        infoMessage={infoMessage}\n        gitDiff={gitDiff}\n        state={PromptState.Idle}\n        input={\n          <Box flexDirection=\"column\">\n            {items.map((item) => (\n              <Text key={item.value}>{item.label}</Text>\n            ))}\n          </Box>\n        }\n      />,\n    )\n\n    expect(renderInstance.lastFrame()).toMatchInlineSnapshot(`\n      \"?  Associate your project with the org Castile Ventures?\n\n         ┃  some title\n         ┃\n         ┃  some body\n         ┃\n         ┃  No changes.\n\n      first\n      second\n      third\n      fourth\n      \"\n    `)\n  })\n\n  test('can have all elements visible in the header at the same time', async () => {\n    const items = [\n      {label: 'first', value: 'first'},\n      {label: 'second', value: 'second'},\n      {label: 'third', value: 'third'},\n      {label: 'fourth', value: 'fourth'},\n    ]\n\n    const gitDiff = {\n      baselineContent: 'hello',\n      updatedContent: 'hello',\n    }\n\n    const infoMessage = {\n      title: {text: 'some title'},\n      body: 'some body',\n    }\n\n    const infoTable = {\n      header1: ['item 1', 'item 2', 'item 3'],\n      header2: ['item 4', 'item 5', 'item 6'],\n      header3: ['item 7', 'item 8', 'item 9'],\n    }\n\n    const renderInstance = render(\n      <PromptLayout\n        message=\"Associate your project with the org Castile Ventures?\"\n        infoTable={infoTable}\n        infoMessage={infoMessage}\n        gitDiff={gitDiff}\n        state={PromptState.Idle}\n        input={\n          <Box flexDirection=\"column\">\n            {items.map((item) => (\n              <Text key={item.value}>{item.label}</Text>\n            ))}\n          </Box>\n        }\n      />,\n    )\n\n    expect(renderInstance.lastFrame()).toMatchInlineSnapshot(`\n      \"?  Associate your project with the org Castile Ventures?\n\n         ┃  some title\n         ┃\n         ┃  some body\n         ┃\n         ┃  \u001b[1mHeader1\u001b[22m\n         ┃  • item 1\n         ┃  • item 2\n         ┃  • item 3\n         ┃\n         ┃  \u001b[1mHeader2\u001b[22m\n         ┃  • item 4\n         ┃  • item 5\n         ┃  • item 6\n         ┃\n         ┃  \u001b[1mHeader3\u001b[22m\n         ┃  • item 7\n         ┃  • item 8\n         ┃  • item 9\n         ┃\n         ┃  No changes.\n\n      first\n      second\n      third\n      fourth\n      \"\n    `)\n  })\n})\n"]}