{"version":3,"file":"SelectInput.js","sourceRoot":"","sources":["../../../../../src/private/node/ui/components/SelectInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import {Scrollbar} from './Scrollbar.js'\nimport {useSelectState} from '../hooks/use-select-state.js'\nimport useLayout from '../hooks/use-layout.js'\nimport {handleCtrlC} from '../../ui.js'\nimport React, {useCallback, forwardRef, useEffect} from 'react'\nimport {Box, Key, useInput, Text, DOMElement} from 'ink'\nimport chalk from 'chalk'\nimport figures from 'figures'\nimport {createRequire} from 'module'\n\nconst require = createRequire(import.meta.url)\n\ndeclare module 'react' {\n  function forwardRef<T, P>(\n    render: (props: P, ref: React.Ref<T>) => JSX.Element | null,\n  ): (props: P & React.RefAttributes<T>) => JSX.Element | null\n}\nexport interface SelectInputProps<T> {\n  items: Item<T>[]\n  initialItems?: Item<T>[]\n  onChange?: (item: Item<T> | undefined) => void\n  enableShortcuts?: boolean\n  focus?: boolean\n  emptyMessage?: string\n  defaultValue?: T\n  highlightedTerm?: string\n  loading?: boolean\n  errorMessage?: string\n  hasMorePages?: boolean\n  morePagesMessage?: string\n  availableLines?: number\n  onSubmit?: (item: Item<T>) => void\n  inputFixedAreaRef?: React.RefObject<DOMElement>\n}\n\nexport interface Item<T> {\n  label: string\n  value: T\n  key?: string\n  group?: string\n  helperText?: string\n  disabled?: boolean\n}\n\nfunction highlightedLabel(label: string, term: string | undefined) {\n  if (!term) {\n    return label\n  }\n\n  const regex = new RegExp(term, 'i')\n  return label.replace(regex, (match) => {\n    return chalk.bold(match)\n  })\n}\n\nfunction validateKeys(items: Item<unknown>[]) {\n  if (items.some((item) => (item.key?.length ?? 0) > 1)) {\n    throw new Error('SelectInput: Keys must be a single character')\n  }\n\n  if (!items.every((item) => typeof item.key !== 'undefined' && item.key.length > 0)) {\n    throw new Error('SelectInput: All items must have keys if one does')\n  }\n}\n\ninterface ItemProps<T> {\n  item: Item<T>\n  previousItem: Item<T> | undefined\n  items: Item<T>[]\n  isSelected: boolean\n  highlightedTerm?: string\n  enableShortcuts: boolean\n  hasAnyGroup: boolean\n  index: number\n}\n\n// eslint-disable-next-line react/function-component-definition\nfunction Item<T>({\n  item,\n  previousItem,\n  isSelected,\n  highlightedTerm,\n  enableShortcuts,\n  items,\n  hasAnyGroup,\n  index,\n}: ItemProps<T>): JSX.Element {\n  const label = highlightedLabel(item.label, highlightedTerm)\n  let title: string | undefined\n  let labelColor\n\n  if (isSelected) {\n    labelColor = 'cyan'\n  } else if (item.disabled) {\n    labelColor = 'dim'\n  }\n\n  if (typeof previousItem === 'undefined' || item.group !== previousItem.group) {\n    title = item.group ?? (hasAnyGroup ? 'Other' : undefined)\n  }\n\n  const showKey = enableShortcuts && item.key && item.key.length > 0\n\n  return (\n    <Box\n      key={index}\n      flexDirection=\"column\"\n      marginTop={items.indexOf(item) !== 0 && title ? 1 : 0}\n      minHeight={title ? 2 : 1}\n    >\n      {title ? (\n        <Box marginLeft={3}>\n          <Text bold>{title}</Text>\n        </Box>\n      ) : null}\n\n      <Box key={index} marginLeft={hasAnyGroup ? 3 : 0}>\n        <Box marginRight={2}>{isSelected ? <Text color=\"cyan\">{`>`}</Text> : <Text> </Text>}</Box>\n        <Text color={labelColor}>{showKey ? `(${item.key}) ${label}` : label}</Text>\n      </Box>\n    </Box>\n  )\n}\n\nconst MAX_AVAILABLE_LINES = 25\n\n// eslint-disable-next-line react/function-component-definition\nfunction SelectInputInner<T>(\n  {\n    items: rawItems,\n    initialItems = rawItems,\n    onChange,\n    enableShortcuts = true,\n    focus = true,\n    emptyMessage = 'No items to select.',\n    defaultValue,\n    highlightedTerm,\n    loading = false,\n    errorMessage,\n    hasMorePages = false,\n    morePagesMessage,\n    availableLines = MAX_AVAILABLE_LINES,\n    onSubmit,\n    inputFixedAreaRef,\n  }: SelectInputProps<T>,\n  ref: React.ForwardedRef<DOMElement>,\n): JSX.Element | null {\n  let noItems = false\n\n  if (rawItems.length === 0) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, no-param-reassign\n    rawItems = [{label: emptyMessage, value: null as any, disabled: true}]\n    noItems = true\n  }\n\n  const sortBy = require('lodash/sortBy')\n  const hasAnyGroup = rawItems.some((item) => typeof item.group !== 'undefined')\n  const items = sortBy(rawItems, 'group') as Item<T>[]\n  const itemsHaveKeys = items.some((item) => typeof item.key !== 'undefined' && item.key.length > 0)\n\n  if (itemsHaveKeys) validateKeys(items)\n\n  const availableLinesToUse = Math.min(availableLines, MAX_AVAILABLE_LINES)\n\n  function maximumLinesLostToGroups(items: Item<T>[]): number {\n    // Calculate a safe estimate of the limit needed based on the space available\n    const numberOfGroups = new Set(items.map((item) => item.group).filter((group) => group)).size\n    // Add 1 to numberOfGroups because we also have a default Other group\n    const maxVisibleGroups = Math.ceil(Math.min((availableLinesToUse + 1) / 3, numberOfGroups + 1))\n    // If we have x visible groups, we lose 1 line to the first group + 2 lines to the rest\n    return numberOfGroups > 0 ? (maxVisibleGroups - 1) * 2 + 1 : 0\n  }\n\n  const maxLinesLostToGroups = maximumLinesLostToGroups(items)\n  const limit = Math.max(2, availableLinesToUse - maxLinesLostToGroups)\n  const hasLimit = items.length > limit\n\n  const state = useSelectState({\n    visibleOptionCount: limit,\n    options: items,\n    defaultValue,\n  })\n\n  useEffect(() => {\n    if (typeof state.value !== 'undefined' && state.previousValue !== state.value) {\n      onChange?.(items.find((item) => item.value === state.value))\n    }\n  }, [state.previousValue, state.value, items, onChange])\n\n  const handleArrows = (key: Key) => {\n    if (key.upArrow) {\n      state.selectPreviousOption()\n    } else if (key.downArrow) {\n      state.selectNextOption()\n    }\n  }\n\n  const handleShortcuts = useCallback(\n    (input: string) => {\n      if (state.visibleOptions.map((item: Item<T>) => item.key).includes(input)) {\n        const itemWithKey = state.visibleOptions.find((item: Item<T>) => item.key === input)\n        const item = items.find((item) => item.value === itemWithKey?.value)\n\n        if (itemWithKey && !itemWithKey.disabled) {\n          // keep this order of operations so that there is no flickering\n          if (onSubmit && item) {\n            onSubmit(item)\n          }\n\n          state.selectOption({option: itemWithKey})\n        }\n      }\n    },\n    [items, onSubmit, state],\n  )\n\n  useInput(\n    (input, key) => {\n      handleCtrlC(input, key)\n\n      if (typeof state.value !== 'undefined' && key.return) {\n        const item = items.find((item) => item.value === state.value)\n\n        if (item && onSubmit) {\n          onSubmit(item)\n        }\n      }\n\n      // check that no special modifier (shift, control, etc.) is being pressed\n      if (enableShortcuts && input.length > 0 && Object.values(key).every((value) => value === false)) {\n        handleShortcuts(input)\n      } else {\n        handleArrows(key)\n      }\n    },\n    {isActive: focus},\n  )\n  const {twoThirds} = useLayout()\n\n  if (loading) {\n    return (\n      <Box marginLeft={3}>\n        <Text dimColor>Loading...</Text>\n      </Box>\n    )\n  } else if (errorMessage && errorMessage.length > 0) {\n    return (\n      <Box marginLeft={3}>\n        <Text color=\"red\">{errorMessage}</Text>\n      </Box>\n    )\n  } else {\n    const optionsHeight = initialItems.length + maximumLinesLostToGroups(initialItems)\n    const minHeight = hasAnyGroup ? 5 : 2\n    const sectionHeight = Math.max(minHeight, Math.min(availableLinesToUse, optionsHeight))\n\n    return (\n      <Box flexDirection=\"column\" ref={ref} gap={1} width={twoThirds}>\n        <Box flexDirection=\"row\" height={sectionHeight} width=\"100%\">\n          <Box flexDirection=\"column\" overflowY=\"hidden\" flexGrow={1}>\n            {state.visibleOptions.map((item: Item<T>, index: number) => (\n              <Item\n                key={index}\n                item={item}\n                previousItem={state.visibleOptions[index - 1]}\n                highlightedTerm={highlightedTerm}\n                isSelected={item.value === state.value}\n                items={state.visibleOptions}\n                enableShortcuts={enableShortcuts}\n                hasAnyGroup={hasAnyGroup}\n                index={index}\n              />\n            ))}\n          </Box>\n\n          {hasLimit ? (\n            <Scrollbar\n              containerHeight={sectionHeight}\n              visibleListSectionLength={limit}\n              fullListLength={items.length}\n              visibleFromIndex={state.visibleFromIndex}\n            />\n          ) : null}\n        </Box>\n\n        <Box ref={inputFixedAreaRef}>\n          {noItems ? (\n            <Box marginLeft={3}>\n              <Text dimColor>Try again with a different keyword.</Text>\n            </Box>\n          ) : (\n            <Box marginLeft={3} flexDirection=\"column\">\n              <Text dimColor>\n                {`Press ${figures.arrowUp}${figures.arrowDown} arrows to select, enter ${\n                  itemsHaveKeys ? 'or a shortcut ' : ''\n                }to confirm.`}\n              </Text>\n              {hasMorePages ? (\n                <Text>\n                  <Text bold>1-{items.length} of many</Text>\n                  {morePagesMessage ? `  ${morePagesMessage}` : null}\n                </Text>\n              ) : null}\n            </Box>\n          )}\n        </Box>\n      </Box>\n    )\n  }\n}\n\nexport const SelectInput = forwardRef(SelectInputInner)\n"]}