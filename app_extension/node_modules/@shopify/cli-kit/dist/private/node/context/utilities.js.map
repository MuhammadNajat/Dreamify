{"version":3,"file":"utilities.js","sourceRoot":"","sources":["../../../../src/private/node/context/utilities.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,MAAM,UAAU,KAAK,CAAC,QAA4B;IAChD,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;QACpD,OAAO,KAAK,CAAA;KACb;IACD,OAAO,IAAI,CAAA;AACb,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,aAAa,CAAC,OAAe,EAAE,IAAuB;IACpE,QAAQ,OAAO,EAAE;QACf,KAAK,WAAW;YACd,OAAO;gBACL,MAAM,EAAE,IAAI,CAAC,gBAAgB;gBAC7B,KAAK,EAAE,IAAI,CAAC,sBAAsB;gBAClC,SAAS,EAAE,IAAI,CAAC,gBAAgB;gBAChC,GAAG,EAAE,IAAI,CAAC,sBAAsB;gBAChC,GAAG,EAAE,yBAAyB,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,sBAAsB,IAAI,CAAC,sBAAsB,EAAE;aACtI,CAAA;QACH,KAAK,UAAU;YACb,OAAO;gBACL,KAAK,EAAE,IAAI,CAAC,eAAe;gBAC3B,MAAM,EAAE,IAAI,CAAC,aAAa;gBAC1B,KAAK,EAAE,IAAI,CAAC,gBAAgB;gBAC5B,SAAS,EAAE,IAAI,CAAC,WAAW;gBAC3B,GAAG,EAAE,IAAI,CAAC,kBAAkB;gBAC5B,GAAG,EAAE,IAAI,CAAC,gBAAgB;aAC3B,CAAA;QACH,KAAK,QAAQ;YACX,OAAO;gBACL,KAAK,EAAE,IAAI,CAAC,YAAY;gBACxB,OAAO,EAAE,IAAI,CAAC,kBAAkB;gBAChC,MAAM,EAAE,IAAI,CAAC,eAAe;gBAC5B,KAAK,EAAE,IAAI,CAAC,aAAa;gBACzB,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,GAAG,EAAE,IAAI,CAAC,aAAa;gBACvB,SAAS,EAAE,IAAI,CAAC,iBAAiB;gBACjC,GAAG,EAAE,GAAG,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,iBAAiB,IAAI,CAAC,aAAa,EAAE;aAC9F,CAAA;QACH,KAAK,QAAQ;YACX,OAAO;gBACL,KAAK,EAAE,IAAI,CAAC,iBAAiB;gBAC7B,MAAM,EAAE,IAAI,CAAC,kBAAkB;gBAC/B,KAAK,EAAE,IAAI,CAAC,cAAc;gBAC1B,SAAS,EAAE,IAAI,CAAC,aAAa;gBAC7B,aAAa,EAAE,IAAI,CAAC,iBAAiB;gBACrC,GAAG,EAAE,IAAI,CAAC,YAAY;gBACtB,GAAG,EAAE,IAAI,CAAC,eAAe;aAC1B,CAAA;QACH;YACE,OAAO,EAAE,CAAA;KACZ;AACH,CAAC","sourcesContent":["/**\n * Returns whether an environment variable has been set and is non-empty\n */\nexport function isSet(variable: string | undefined): boolean {\n  if (variable === undefined || variable.trim() === '') {\n    return false\n  }\n  return true\n}\n\n/**\n * Returns an object with environment variables from the specified CI environment.\n */\nexport function getCIMetadata(envName: string, envs: NodeJS.ProcessEnv): Metadata {\n  switch (envName) {\n    case 'bitbucket':\n      return {\n        branch: envs.BITBUCKET_BRANCH,\n        build: envs.BITBUCKET_BUILD_NUMBER,\n        commitSha: envs.BITBUCKET_COMMIT,\n        run: envs.BITBUCKET_BUILD_NUMBER,\n        url: `https://bitbucket.org/${envs.BITBUCKET_WORKSPACE}/${envs.BITBUCKET_REPO_SLUG}/pipelines/results/${envs.BITBUCKET_BUILD_NUMBER}`,\n      }\n    case 'circleci':\n      return {\n        actor: envs.CIRCLE_USERNAME,\n        branch: envs.CIRCLE_BRANCH,\n        build: envs.CIRCLE_BUILD_NUM,\n        commitSha: envs.CIRCLE_SHA1,\n        run: envs.CIRCLE_WORKFLOW_ID,\n        url: envs.CIRCLE_BUILD_URL,\n      }\n    case 'github':\n      return {\n        actor: envs.GITHUB_ACTOR,\n        attempt: envs.GITHUB_RUN_ATTEMPT,\n        branch: envs.GITHUB_REF_NAME,\n        build: envs.GITHUB_RUN_ID,\n        commitSha: envs.GITHUB_SHA,\n        run: envs.GITHUB_RUN_ID,\n        runNumber: envs.GITHUB_RUN_NUMBER,\n        url: `${envs.GITHUB_SERVER_URL}/${envs.GITHUB_REPOSITORY}/actions/runs/${envs.GITHUB_RUN_ID}`,\n      }\n    case 'gitlab':\n      return {\n        actor: envs.GITLAB_USER_LOGIN,\n        branch: envs.CI_COMMIT_REF_NAME,\n        build: envs.CI_PIPELINE_ID,\n        commitSha: envs.CI_COMMIT_SHA,\n        commitMessage: envs.CI_COMMIT_MESSAGE,\n        run: envs.CI_RUNNER_ID,\n        url: envs.CI_PIPELINE_URL,\n      }\n    default:\n      return {}\n  }\n}\n\nexport interface Metadata {\n  actor?: string\n  attempt?: string\n  branch?: string\n  build?: string\n  commitMessage?: string\n  commitSha?: string\n  run?: string\n  runNumber?: string\n  url?: string\n}\n"]}