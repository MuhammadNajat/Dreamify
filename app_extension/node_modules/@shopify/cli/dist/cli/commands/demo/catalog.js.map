{"version":3,"file":"catalog.js","sourceRoot":"","sources":["../../../../src/cli/commands/demo/catalog.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,IAAI,EAAW,MAAM,wBAAwB,CAAA;AACrD,OAAO,OAAO,MAAM,oCAAoC,CAAA;AACxD,OAAO,EAAC,QAAQ,EAAC,MAAM,0BAA0B,CAAA;AACjD,OAAO,EAAC,QAAQ,EAAC,MAAM,4BAA4B,CAAA;AACnD,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAA;AACvD,OAAO,EAAC,wBAAwB,EAAC,MAAM,0BAA0B,CAAA;AACjE,OAAO,EAAC,aAAa,EAAC,MAAM,KAAK,CAAA;AAEjC,MAAqB,OAAQ,SAAQ,OAAO;IAI1C,KAAK,CAAC,GAAG;QACP,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,yCAAyC,CAAC,CAAA;QACvG,MAAM,EAAC,KAAK,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,QAAQ,CAAC,WAAW,CAAC,CAAwB,CAAA;QAC9E,MAAM,aAAa,GAAG,MAAM,wBAAwB,CAAC;YACnD,OAAO,EAAE,iBAAiB;YAC1B,OAAO,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,EAAE,EAAE;gBACnC,OAAO;oBACL,KAAK,EAAE,KAAM;oBACb,KAAK,EAAE,KAAM;oBACb,KAAK,EAAE,IAAI;iBACZ,CAAA;YACH,CAAC,CAAC;SACH,CAAC,CAAA;QACF,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,EAAC,KAAK,EAAC,EAAE,EAAE,CAAC,KAAK,KAAK,aAAa,CAAE,CAAA;QACtE,UAAU,CAAC,2BAA2B,CAAC,CAAA;QACvC,MAAM,IAAI,CAAC,EAAC,KAAK,EAAE,CAAC,YAAY,CAAC,EAAC,CAAC,CAAA;QACnC,UAAU,CAAC,qBAAqB,CAAC,CAAA;QACjC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;IACnD,CAAC;;AArBM,mBAAW,GAAG,8BAA8B,CAAA;AAC5C,cAAM,GAAG,IAAI,CAAA;eAFD,OAAO","sourcesContent":["import {demo, DemoStep} from '../../services/demo.js'\nimport Command from '@shopify/cli-kit/node/base-command'\nimport {readFile} from '@shopify/cli-kit/node/fs'\nimport {joinPath} from '@shopify/cli-kit/node/path'\nimport {outputInfo} from '@shopify/cli-kit/node/output'\nimport {renderAutocompletePrompt} from '@shopify/cli-kit/node/ui'\nimport {fileURLToPath} from 'url'\n\nexport default class Catalog extends Command {\n  static description = 'Browse the catalog for steps'\n  static hidden = true\n\n  async run(): Promise<void> {\n    const catalogFile = joinPath(fileURLToPath(import.meta.url), '../../../../../assets/demo-catalog.json')\n    const {steps} = JSON.parse(await readFile(catalogFile)) as {steps: DemoStep[]}\n    const stepSelection = await renderAutocompletePrompt({\n      message: 'Step to display',\n      choices: steps.map(({title, type}) => {\n        return {\n          label: title!,\n          value: title!,\n          group: type,\n        }\n      }),\n    })\n    const selectedStep = steps.find(({title}) => title === stepSelection)!\n    outputInfo('The step looks like this:')\n    await demo({steps: [selectedStep]})\n    outputInfo('JSON for this step:')\n    outputInfo(JSON.stringify(selectedStep, null, 2))\n  }\n}\n"]}