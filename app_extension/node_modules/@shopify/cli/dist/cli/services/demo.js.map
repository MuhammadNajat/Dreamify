{"version":3,"file":"demo.js","sourceRoot":"","sources":["../../../src/cli/services/demo.ts"],"names":[],"mappings":"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","sourcesContent":["import {AbortError, BugError} from '@shopify/cli-kit/node/error'\nimport {outputInfo} from '@shopify/cli-kit/node/output'\nimport {sleep} from '@shopify/cli-kit/node/system'\nimport {\n  renderFatalError,\n  renderInfo,\n  renderSuccess,\n  renderTable,\n  renderConcurrent,\n  renderTasks,\n  renderWarning,\n  renderAutocompletePrompt,\n  renderConfirmationPrompt,\n  renderSelectPrompt,\n  renderTextPrompt,\n} from '@shopify/cli-kit/node/ui'\nimport {zod} from '@shopify/cli-kit/node/schema'\nimport {Writable} from 'stream'\n\nfunction oneOrMore<T>(singular: zod.ZodType<T>) {\n  return zod.union([singular, zod.array(singular)])\n}\nconst scalar = zod.union([zod.string(), zod.number(), zod.boolean(), zod.null(), zod.undefined()])\nconst linkSchema = zod.object({label: zod.string(), url: zod.string()})\nconst inlineTokenSchema = zod.union([\n  zod.string(),\n  zod.object({command: zod.string()}),\n  zod.object({link: linkSchema}),\n  zod.object({char: zod.string().length(1)}),\n  zod.object({userInput: zod.string()}),\n  zod.object({subdued: zod.string()}),\n  zod.object({filePath: zod.string()}),\n  zod.object({bold: zod.string()}),\n])\nconst headlineTokenSchema = oneOrMore(\n  zod.union([\n    zod.string(),\n    zod.object({command: zod.string()}),\n    zod.object({char: zod.string().length(1)}),\n    zod.object({userInput: zod.string()}),\n    zod.object({subdued: zod.string()}),\n    zod.object({filePath: zod.string()}),\n  ]),\n)\n// type InlineToken = zod.infer<typeof inlineTokenSchema>\nconst inlineTokenItemSchema = oneOrMore(inlineTokenSchema)\n// type InlineTokenItem = zod.infer<typeof inlineTokenItemSchema>\nconst listSchema = zod.object({\n  list: zod.object({\n    title: zod.string().optional(),\n    items: zod.array(inlineTokenItemSchema),\n    ordered: zod.boolean().optional(),\n  }),\n})\nconst tokenItemSchema = oneOrMore(zod.union([inlineTokenSchema, listSchema]))\n\nconst tableSchema = zod.object({\n  rows: zod.array(zod.object({}).catchall(scalar)),\n  columns: zod.object({}).catchall(\n    zod.object({\n      header: zod.string().optional(),\n      color: zod.string().optional(),\n    }),\n  ),\n})\nconst infoTableSchema = zod.union([\n  zod.object({}).catchall(zod.array(inlineTokenItemSchema)),\n  zod.array(\n    zod.object({\n      color: zod.string().optional(),\n      header: zod.string(),\n      helperText: zod.string().optional(),\n      bullet: zod.string().optional(),\n      items: zod.array(inlineTokenItemSchema),\n    }),\n  ),\n])\n\nconst abstractDemoStepSchema = zod.object({\n  type: zod.string(),\n  properties: zod.object({}),\n  // optional properties for documentation purposes\n  title: zod.string().optional(),\n  description: zod.string().optional(),\n})\n\nconst outputStepSchema = abstractDemoStepSchema.extend({\n  type: zod.literal('output'),\n  properties: zod.object({\n    content: zod.string(),\n  }),\n})\ntype OutputStep = zod.infer<typeof outputStepSchema>\n\nconst renderStepPropertiesSchema = zod.object({\n  headline: headlineTokenSchema.optional(),\n  body: tokenItemSchema.optional(),\n  nextSteps: zod.array(inlineTokenItemSchema).optional(),\n  reference: zod.array(inlineTokenItemSchema).optional(),\n  link: linkSchema.optional(),\n  customSections: zod\n    .array(\n      zod.object({\n        title: zod.string().optional(),\n        body: tokenItemSchema,\n      }),\n    )\n    .optional(),\n  orderedNextSteps: zod.boolean().optional(),\n})\nconst renderInfoStepSchema = abstractDemoStepSchema.extend({\n  type: zod.literal('info'),\n  properties: renderStepPropertiesSchema,\n})\ntype RenderInfoStep = zod.infer<typeof renderInfoStepSchema>\nconst renderSuccessStepSchema = abstractDemoStepSchema.extend({\n  type: zod.literal('success'),\n  properties: renderStepPropertiesSchema,\n})\ntype RenderSuccessStep = zod.infer<typeof renderSuccessStepSchema>\nconst renderWarningStepSchema = abstractDemoStepSchema.extend({\n  type: zod.literal('warning'),\n  properties: renderStepPropertiesSchema,\n})\ntype RenderWarningStep = zod.infer<typeof renderWarningStepSchema>\n\nconst renderFatalErrorStepSchema = abstractDemoStepSchema.extend({\n  type: zod.literal('fatalError'),\n  properties: zod.object({\n    errorType: zod.union([zod.literal('abort'), zod.literal('bug')]),\n    message: zod.string(),\n    tryMessage: zod.string().optional(),\n    nextSteps: zod.array(inlineTokenItemSchema).optional(),\n  }),\n})\ntype RenderFatalErrorStep = zod.infer<typeof renderFatalErrorStepSchema>\n\nconst renderTableStepSchema = abstractDemoStepSchema.extend({\n  type: zod.literal('table'),\n  properties: tableSchema,\n})\ntype RenderTableStep = zod.infer<typeof renderTableStepSchema>\n\nconst renderAutoCompletePromptStepSchema = abstractDemoStepSchema.extend({\n  type: zod.literal('autocompletePrompt'),\n  properties: zod.object({\n    message: zod.string(),\n    choices: zod.array(\n      zod.object({\n        label: zod.string(),\n        value: zod.string(),\n      }),\n    ),\n  }),\n})\ntype RenderAutocompletePromptStep = zod.infer<typeof renderAutoCompletePromptStepSchema>\n\nconst renderConfirmationPromptStepSchema = abstractDemoStepSchema.extend({\n  type: zod.literal('confirmationPrompt'),\n  properties: zod.object({\n    message: headlineTokenSchema,\n    infoTable: infoTableSchema.optional(),\n    gitDiff: zod\n      .object({\n        baselineContent: zod.string(),\n        updatedContent: zod.string(),\n      })\n      .optional(),\n    defaultValue: zod.boolean().optional(),\n    confirmationMessage: zod.string(),\n    cancellationMessage: zod.string(),\n  }),\n})\ntype RenderConfirmationPromptStep = zod.infer<typeof renderConfirmationPromptStepSchema>\n\nconst renderSelectPromptStepSchema = abstractDemoStepSchema.extend({\n  type: zod.literal('selectPrompt'),\n  properties: zod.object({\n    message: headlineTokenSchema,\n    choices: zod.array(\n      zod.object({\n        label: zod.string(),\n        value: zod.string(),\n        key: zod.string().length(1).optional(),\n        group: zod.string().optional(),\n        disabled: zod.boolean().optional(),\n      }),\n    ),\n    defaultValue: zod.string().optional(),\n    infoTable: infoTableSchema.optional(),\n    gitDiff: zod\n      .object({\n        baselineContent: zod.string(),\n        updatedContent: zod.string(),\n      })\n      .optional(),\n  }),\n})\ntype RenderSelectPromptStep = zod.infer<typeof renderSelectPromptStepSchema>\n\nconst renderTextPromptStepSchema = abstractDemoStepSchema.extend({\n  type: zod.literal('textPrompt'),\n  properties: zod.object({\n    message: zod.string(),\n    defaultValue: zod.string().optional(),\n    password: zod.boolean().optional(),\n    allowEmpty: zod.boolean().optional(),\n  }),\n})\ntype RenderTextPromptStep = zod.infer<typeof renderTextPromptStepSchema>\n\nconst sleepStepSchema = abstractDemoStepSchema.extend({\n  type: zod.literal('sleep'),\n  properties: zod.object({\n    duration: zod.number(),\n  }),\n})\ntype SleepStep = zod.infer<typeof sleepStepSchema>\n\nconst taskbarStepSchema = abstractDemoStepSchema.extend({\n  type: zod.literal('taskbar'),\n  properties: zod.object({\n    steps: zod.array(\n      zod.object({\n        title: zod.string(),\n        duration: zod.number(),\n      }),\n    ),\n  }),\n})\ntype TaskbarStep = zod.infer<typeof taskbarStepSchema>\n\nconst renderConcurrentPropertiesSchema = zod.object({\n  processes: zod.array(\n    zod.object({\n      prefix: zod.string(),\n      steps: zod.array(\n        zod.object({\n          startMessage: zod.string().optional(),\n          duration: zod.number(),\n          endMessage: zod.string().optional(),\n        }),\n      ),\n    }),\n  ),\n})\ntype RenderConcurrentProperties = zod.infer<typeof renderConcurrentPropertiesSchema>\nconst renderConcurrentStepSchema = abstractDemoStepSchema.extend({\n  type: zod.literal('concurrent'),\n  properties: renderConcurrentPropertiesSchema,\n})\ntype RenderConcurrentStep = zod.infer<typeof renderConcurrentStepSchema>\n\nexport type DemoStep =\n  | OutputStep\n  | RenderInfoStep\n  | RenderSuccessStep\n  | RenderWarningStep\n  | RenderTableStep\n  | RenderFatalErrorStep\n  | RenderAutocompletePromptStep\n  | RenderConfirmationPromptStep\n  | RenderSelectPromptStep\n  | RenderTextPromptStep\n  | SleepStep\n  | TaskbarStep\n  | RenderConcurrentStep\n\nconst demoStepSchema = zod.discriminatedUnion('type', [\n  outputStepSchema,\n  renderInfoStepSchema,\n  renderSuccessStepSchema,\n  renderWarningStepSchema,\n  renderTableStepSchema,\n  renderFatalErrorStepSchema,\n  renderAutoCompletePromptStepSchema,\n  renderConfirmationPromptStepSchema,\n  renderSelectPromptStepSchema,\n  renderTextPromptStepSchema,\n  sleepStepSchema,\n  taskbarStepSchema,\n  renderConcurrentStepSchema,\n])\nexport const demoStepsSchema = zod.object({\n  $schema: zod.string().optional(),\n  command: zod.string().optional(),\n  steps: zod.array(demoStepSchema),\n})\ntype DemoSteps = zod.infer<typeof demoStepsSchema>\n\nexport async function demo(stepsJsonData: DemoSteps) {\n  const {steps, command} = demoStepsSchema.parse(stepsJsonData)\n  const executors = steps.map(executorForStep)\n\n  await simulateTyping(command)\n  for (const executor of executors) {\n    // eslint-disable-next-line no-await-in-loop\n    await executor()\n  }\n}\n\nasync function simulateTyping(text?: string) {\n  if (!text) return\n\n  // eslint-disable-next-line no-console\n  console.clear()\n  process.stdout.write('$ ')\n  const chars = text.split('')\n  while (chars.length > 0) {\n    const char = chars.shift()!\n    process.stdout.write(char)\n    // eslint-disable-next-line no-await-in-loop\n    await sleep(0.1 + Math.random() / 10)\n  }\n  process.stdout.write('\\n')\n  await sleep(1 + Math.random() / 10)\n}\n\nfunction executorForStep(step: DemoStep): () => Promise<void> {\n  switch (step.type) {\n    case 'output':\n      return async () => {\n        outputInfo(step.properties.content)\n      }\n    case 'sleep':\n      return async () => {\n        await sleep(step.properties.duration)\n      }\n    case 'taskbar':\n      return taskbarExecutor(step.properties.steps)\n    case 'concurrent':\n      return concurrentExecutor(step.properties)\n    case 'info':\n      return async () => {\n        renderInfo(step.properties)\n      }\n    case 'success':\n      return async () => {\n        renderSuccess(step.properties)\n      }\n    case 'warning':\n      return async () => {\n        renderWarning(step.properties)\n      }\n    case 'fatalError':\n      return async () => {\n        const {errorType, message, nextSteps, tryMessage} = step.properties\n        if (errorType === 'abort') {\n          renderFatalError(new AbortError(message, tryMessage, nextSteps))\n        } else {\n          renderFatalError(new BugError(message, tryMessage))\n        }\n      }\n    case 'table':\n      return async () => {\n        renderTable(step.properties as Parameters<typeof renderTable>[0])\n      }\n    case 'autocompletePrompt':\n      return async () => {\n        await renderAutocompletePrompt(step.properties)\n      }\n    case 'confirmationPrompt':\n      return async () => {\n        await renderConfirmationPrompt(step.properties as Parameters<typeof renderConfirmationPrompt>[0])\n      }\n    case 'selectPrompt':\n      return async () => {\n        await renderSelectPrompt(step.properties as Parameters<typeof renderSelectPrompt>[0])\n      }\n    case 'textPrompt':\n      return async () => {\n        await renderTextPrompt(step.properties)\n      }\n    default:\n      throw new Error(`Unknown step type: ${(step as DemoStep).type}`)\n  }\n}\n\nfunction taskbarExecutor(steps: {title: string; duration: number}[]) {\n  return async () => {\n    const tasks = steps.map(({title, duration}) => {\n      return {\n        title,\n        task: async () => sleep(duration),\n      }\n    })\n    await renderTasks(tasks)\n  }\n}\n\nfunction concurrentExecutor({processes}: RenderConcurrentProperties) {\n  return async () => {\n    const concurrentProcesses = processes.map(({prefix, steps}) => {\n      return {\n        prefix,\n        action: async (stdout: Writable) => {\n          for (const step of steps) {\n            const {startMessage, duration, endMessage} = step\n            if (startMessage) stdout.write(startMessage)\n            // eslint-disable-next-line no-await-in-loop\n            await sleep(duration)\n            if (endMessage) stdout.write(endMessage)\n          }\n        },\n      }\n    })\n    await renderConcurrent({processes: concurrentProcesses})\n  }\n}\n"]}